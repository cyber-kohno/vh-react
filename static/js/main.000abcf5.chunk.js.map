{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/common/utils.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentElementInfo.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/footer/timing/FooterTiming.tsx","contents/systab/score/contTabs/note/footer/NoteFooter.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/floatwnd/section/SectionEditor.tsx","contents/systab/score/contTabs/note/floatwnd/setting/SettingEditor.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/backing/ScoreContBackingTab.tsx","contents/systab/score/contTabs/source/ScoreContSourceTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/login/LoginFrame.tsx","contents/user/UserPlate.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSignatures","KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","id","groupName","tabElements","map","tab","index","disable","undefined","selectTabIndex","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","SymbolType","SYMBOL_PARAMS_LIST","key","MAJOR","sortNo","MINOR","SUS4","DIM","AUG","MAJ7","SEVENTH","MIN7","MINOR_MAJ7","ADD9","MINOR_ADD9","SIXTH_9TH","MINOR_MINUS5","TRIAD","TETRAD7TH","TETRAD9TH","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","ModulateRelationType","TypeNoteElement","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","ActionType","initialState","login","isLogin","scoreTabIndex","noteData","scoreName","chordMode","SCALE","dataList","noteState","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","defaultSustain","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","molecule","rootIndex","isFlat","denominator","sustain","headAdjust","tailAdjust","backingPaletteState","useChannels","isUsePedal","sideIndex","selectedLenIndex","selectedChannelIndex","layers","isCorrect","backingThreads","reffers","sampler","Sampler","toDestination","soundUseList","Array","reducer","state","action","type","payload","SET_LOGIN","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","keyIndex","scale","Fixed","label","labelName","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","data","SET_DATA_LIST","SET_NOTE_STATE","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","baseScript","script","i","channelCount","length","lensSplitCount","lens","baseTable","table","y","x","BACKING_TOGGLE_MATRIX","lenIndex","channelIndex","divIndex","isUse","getDegreeRoot","rootInfo","getChordRoot","getSymbolName","forEach","symbol","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeMolRoot","degreeDenRoot","chordMolRoot","init","chordDenRoot","symbolName","isDiatonic","degreeName","chordName","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Modulation","timeSignatures","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","BACKING","some","setSelectedList","selectorElementClickAction","onContextMenu","e","INIT_PALETTE","style","left","clientX","top","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","callChordSelector","callBackingEditor","setCriteria","callSectionEditor","deleteCurElement","menuList","getSymbolParams","getAdjustSusValue","value","ret","toString","sendQueryRequestToAPI","queryType","sql","fetch","API_DOMAIN","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","ChordSelector","canvasRef","editorState","canvas","width","height","updatePianoView","molRootIndex","denRootIndex","ctx","getContext","list","intervals","denIndex","fillStyle","fillRect","WIDTH","posX","keyboadList","color","isBlack","HEIGHT","keyboad","strokeRect","save","chordList","symbolList","beatList","operationJsx","isDirect","degS","degF","chdS","chdF","isHalf","isDenominator","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getAdjustOprJsx","offset","cls","callback","Adjuster","CurrentElementInfo","inner","root","degreeRoot","chordRoot","baseBlockJsx","buildInfoBlock","title","chordBlockJsx","String","structList","len","interval","struct","sound","sectionBlockJsx","titleLabel","dataRecordList","jsxList","BackingOperation","paletteState","curSideScript","curLenBean","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","backingState","side","LEFT","RIGHT","buttonList","button","getActiveState","curLayerIndex","lineIndex","cur","back","curCellRange","getCellRange","backLenBean","j","k","backRange","isOverlapJudge","range1","range2","head","getLenSize","size","NotesMatrix","setCorrect","BackingContext","channelList","matrixLayersJsx","hasError","l","linesJsx","layer","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","curLayer","chordDetail","sustainLength","measureInner","measureLength","cnt","isLimit","limitLeft","limitJsx","BackingTable","testPlaySound","channelJsxList","channel","soundFullName","volumeList","volume","setLayerIndex","setUsePedal","StructMatrix","structTable","cols","soundName","structs","relation","soundIndex","octave","floor","isNone","structIndex","sort","a","b","setUseChannels","createContext","getChannelList","BackingEditor","BACKING_PALETTE","foocusIndex","triggerAttack","setTimeout","triggerRelease","operation","play","setCurBackingScript","Provider","FIXED_BLANK","getAdjustCls","styled","div","FooterTiming","dataCount","scrollRef","blockJsxList","setBlockJsxList","measureJsxList","setMeasureJsxList","total","setTotal","isCur","isNear","scrollTo","behavior","totalWidth","NoteFooter","InitEditor","setTempo","setRythm","setKey","setScale","setInitParam","getItemSelector","optionsJsx","display","onChange","target","Number","min","max","item","SectionEditor","span","setLabelName","section","setSectionParam","SECTION_PALETTE","SettingEditor","SETTING_EDITOR","defsus","sustainJsxList","setNoteState","EditModeBorder","PREVIEW","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","console","log","totalBeat","totalMsec","lastBar","bar","isModalBlind","ScoreContLiblaryTab","focus","setFocus","message","setMessage","recordList","setRecordList","titleList","setTitleList","isEdit","setEdit","setTitle","setChordMode","reload","initFocus","then","response","json","results","catch","error","record","chord_mode","createButton","createInfoRecored","innerJsx","isDisplayMsg","selectedRecord","result","values","alert","setNoteData","data_cnt","parse","ScoreContBackingTab","ScoreContSourceTab","ScoreTab","Dispatcher","dispatchBase","setLoginParams","apllyFlasah","backgroundColor","apllyFlashCur","apllyFlashList","releaseCriteria","getInitElement","setEditMode","addNoteElement","curIndex","addModulationElement","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","line","updateLenIndex","getCurLenIndex","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","use","changeLayerIndex","baseLayers","count","cell","isScore","threads","totalTime","curTime","Date","getTime","next","editor","barMs","boxMs","adjustOverlap","headMs","lenValue","replace","curLenMs","notes","tail","lag","this","LoginTypeSwitch","loginType","curLoginType","setLoginType","resetError","TextForm","stateSetter","strLen","stateValue","isHanEisu","isMask","str","match","LoginFrame","userName","setUserName","password","setPassword","passConfirm","setPassConfirm","isError","setError","isLoading","setLoading","enterDisable","opacity","UserPlate","MainFrame","useReducer","actionType","tabIndex","onKeyDown","selectedData","diatonicChord","baseBacking","thr","clearInterval","releaseAll","KeyboardShortCutAction","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.000abcf5.chunk.js","sourcesContent":["export const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'C#/Db', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport enum TimeSignatures  {\r\n    BEAT_4ON4 = '4/4',\r\n    BEAT_2ON4 = '2/4',\r\n    BEAT_3ON4 = '3/4',\r\n    BEAT_6ON8 = '6/8',\r\n    BEAT_12ON8 = '12/8',\r\n}\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\n\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES: string[] = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey\r\n    sortNo: number;\r\n    parentNo: number;\r\n    depth: number;\r\n    name: string;\r\n    struct: string[];\r\n    fixed: string[];\r\n    intervals: number[];\r\n}\r\n\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n}\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, \"sortNo\": 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, \"sortNo\": 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, \"sortNo\": 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, \"sortNo\": 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, \"sortNo\": 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, \"sortNo\": 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, \"sortNo\": 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, \"sortNo\": 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, \"sortNo\": 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, \"sortNo\": 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, \"sortNo\": 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, \"sortNo\": 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n];\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD9TH,\r\n}\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\n\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n];\r\n\r\n\r\nexport const API_DOMAIN = 'https://vh-sqlite.glitch.me';\r\n// export const API_DOMAIN = 'http://localhost:5000';","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // const [tabList, setTabList] = useState<JSX.Element[]>([]);\r\n    // const [contList, setContList] = useState<JSX.Element[]>([]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const tabList: JSX.Element[] = [];\r\n    //     const contList: JSX.Element[] = [];\r\n    //     props.tabElements.forEach((tab, index) => {\r\n    //         tabList.push(\r\n    //             <TabLabel\r\n    //                 key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n    //                 selectTab={() => selectTabIndex(index)}\r\n    //             />)\r\n    //             ;\r\n    //         contList.push(\r\n    //             <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n    //         );\r\n    //     });\r\n    //     setTabList(tabList);\r\n    //     setContList(contList);\r\n    //     console.log('create TabbedPane');\r\n    // }, [activeNo]);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <div className={[\r\n            'tab-cont',\r\n            props.isActive ? '' : 'hidden'].join(' ')}\r\n        >\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","import { SymbolKey, SYMBOL_PARAMS_LIST, TimeSignatures } from 'contents/common/define'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    login: LoginParams;\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    soundUseList: number[];\r\n}\r\n\r\nexport type LoginParams = {\r\n    isLogin: boolean,\r\n    id: number,\r\n    name: string\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\n export type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE,\r\n    CONTEXT_MENU,\r\n    CHORD_PALETTE,\r\n    SECTION_PALETTE,\r\n    INIT_PALETTE,\r\n    BACKING_PALETTE,\r\n    SETTING_EDITOR,\r\n}\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    // rootIndex: number;\r\n    // isFlat: false;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain, Adjuster\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    defaultSustain: number;\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    BACKING,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    labelName: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    molecule: Key12Info | null;\r\n    denominator: Key12Info | null;\r\n    // degreeIndex: number;\r\n    // isFlat: boolean;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type Key12Info = {\r\n    rootIndex: number;\r\n    isFlat: boolean;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailModulation = {\r\n    modulate?: ModulateRelation;\r\n    tempo: number;\r\n    timeSignatures?: TimeSignatures;\r\n}\r\n\r\nexport type ModulateRelation = {\r\n    type: ModulateRelationType;\r\n    value: number;\r\n}\r\n\r\nexport enum ModulateRelationType {\r\n    DOMINANT = 'DOMINANT',\r\n    ABSOLUTE = 'ABSOLUTE',\r\n    PARALLEL = 'PARALLEL',\r\n    RELATIVE = 'RELATIVE'\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailModulation | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Modulation = 'modulation',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    login: {\r\n        isLogin: false,\r\n        id: -1,\r\n        name: ''\r\n    },\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', chordMode: CHORD_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        defaultSustain: 2,\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            // rootIndex: 0,\r\n            // isFlat: false,\r\n            molecule: {rootIndex: 0, isFlat: false},\r\n            denominator: null,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4,\r\n            headAdjust: 0,\r\n            tailAdjust: 0\r\n        },\r\n        backingPaletteState: {\r\n            useChannels: [],\r\n            isUsePedal: false,\r\n            sideIndex: 0,\r\n            selectedLenIndex: 0,\r\n            selectedChannelIndex: -1,\r\n            layers: [],\r\n            isCorrect: true\r\n        },\r\n        backingThreads: []\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initSampler(),\r\n    soundUseList: new Array(88)\r\n};\r\n\r\nfunction initSampler() {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_LOGIN,\r\n    SELECT_SCORETAB,\r\n    ADD_SECTION,\r\n    SET_DEGREE_INDEX,\r\n    SET_SYMBOL_KEY,\r\n    DETAIL_PARAMS_SETTER,\r\n    GET_ELEMENT_REFFER,\r\n    INIT_DEFAULT_ELEMENTS,\r\n    SELECT_NOTE_ELEMENT,\r\n    GET_REFFER,\r\n    GET_REFFER_CONTEXT,\r\n    GET_REFFER_CHORD_PALETTE,\r\n    GET_REFFER_SECTION_PALETTE,\r\n    GET_REFFER_BACKING_PALETTE,\r\n    FLOATWND_STATE,\r\n    CHORD_PALETTE_SETTER,\r\n    SET_NOTE_DATA,\r\n    SET_DATA_LIST,\r\n    SET_NOTE_STATE,\r\n    INIT_BACKING_PALETTE,\r\n    SET_USE_CHANNELS,\r\n    BACKING_TOGGLE_MATRIX\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_LOGIN:\r\n            return { ...state, login: payload.login };\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            if(detail.molecule == null) {\r\n                detail.molecule = {rootIndex: payload.degreeIndex, isFlat: false};\r\n            } else {\r\n                detail.molecule.rootIndex = payload.degreeIndex;\r\n            }\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 80,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                labelName: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const backingPaletteState = state.noteState.backingPaletteState;\r\n            const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            const script: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseScript[i].lens.length;\r\n                const baseTable = baseScript[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                script[i] = {\r\n                    ...baseScript[i],\r\n                    table,\r\n                };\r\n            }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState,\r\n                        useChannels,\r\n                        layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = state.noteState.backingPaletteState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailModulation, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress, Key12Info } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Key: </span>\r\n                        {/* <span>{detail.key}</span> */}\r\n                        <span>{\r\n                            detail.scale == SCALE_LIST[0] ?\r\n                                KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                        }</span>\r\n                    </div>\r\n                );\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Scale: </span>\r\n                        <span>{detail.scale}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            // /**　ディグリーネームを返す */\r\n            // const getDegreeRoot = (): string => {\r\n            //     let name = 'blank';\r\n            //     if (detail.molecule != null) {\r\n            //         const molList = detail.molecule.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n            //         name = molList[detail.molecule.rootIndex];\r\n            //         // 分母が存在する場合オンコードを設定\r\n            //         if (detail.denominator != null) {\r\n            //             const donList = detail.denominator.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n            //             name += '/' + donList[detail.denominator.rootIndex];\r\n            //         }\r\n            //     }\r\n            //     return name;\r\n            // }\r\n            // /**　コードネームを返す */\r\n            // const getChordName = (): string => {\r\n            //     let name = '-';\r\n            //     if (detail.molecule != null) {\r\n            //         const keyIndex = cache.init.keyIndex;\r\n            //         const molList = detail.molecule.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n            //         name = molList[(detail.molecule.rootIndex + keyIndex) % 12];\r\n            //         // 分母が存在する場合オンコードを設定\r\n            //         if (detail.denominator != null) {\r\n            //             const donList = detail.denominator.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n            //             name += '/' + donList[(detail.denominator.rootIndex + keyIndex) % 12];\r\n            //         }\r\n            //     }\r\n            //     return name;\r\n            // }\r\n            // /**　シンボルを返す */\r\n            // const getSymbol = (): string => {\r\n            //     let name = '';\r\n            //     if (detail.molecule != null) {\r\n            //         SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n            //             if (symbol.key == detail.symbolKey) {\r\n            //                 name = symbol.name;\r\n            //             }\r\n            //         });\r\n            //     }\r\n            //     return name;\r\n            // }\r\n\r\n            const degreeMolRoot = getDegreeRoot(detail.molecule);\r\n            const degreeDenRoot = getDegreeRoot(detail.denominator);\r\n            const chordMolRoot = getChordRoot(detail.molecule, cache.init.keyIndex);\r\n            const chordDenRoot = getChordRoot(detail.denominator, cache.init.keyIndex);\r\n            let symbolName = '';\r\n            let isDiatonic = false;\r\n            let degreeName = 'blank';\r\n            let chordName = '-';\r\n            if(degreeMolRoot != null) {\r\n                symbolName = getSymbolName(detail.symbolKey);\r\n                isDiatonic = DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeMolRoot + symbolName);\r\n                degreeName = `${degreeMolRoot}${symbolName}${degreeDenRoot == null ? '' : '/' + degreeDenRoot}`;\r\n                chordName = `${chordMolRoot}${symbolName}${chordDenRoot == null ? '' : '/' + chordDenRoot}`;\r\n            }\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.molecule == null ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        // ダイレクトモード時は非表示\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}>\r\n                        <span>{degreeName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.labelName}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Modulation: {\r\n            const detail = props.noteElement.detail as DetailModulation;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.timeSignatures}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**　ディグリーネームを返す */\r\nconst getDegreeRoot = (rootInfo: Key12Info | null): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        name = list[rootInfo.rootIndex];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　コードネームを返す */\r\nconst getChordRoot = (rootInfo: Key12Info | null, keyIndex: number): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n        name = list[(rootInfo.rootIndex + keyIndex) % 12];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　シンボルを返す */\r\nconst getSymbolName = (symbolKey: SymbolKey): string => {\r\n    let name = '';\r\n    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n        if (symbol.key == symbolKey) {\r\n            name = symbol.name;\r\n        }\r\n    });\r\n    return name;\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailModulation, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Modulation: return 'detail-mod';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.BACKING) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.molecule != null;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord,\r\n                            TypeNoteElement.Modulation,\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else {\r\n                            selectorElementClickAction();\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init:\r\n                                    {\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                    }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { ChordPaletteState, DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        denominator: detail.denominator,\r\n                        molecule: detail.molecule,\r\n                        symbolKey: detail.symbolKey,\r\n                        sustain: detail.sustain,\r\n                    } as ChordPaletteState\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.molecule != null,\r\n                    executer: () => {\r\n                        dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        // state.reffers.chordPalette.style.left = 50 + 'px';\r\n                        // state.reffers.chordPalette.style.top = 50 + 'px';\r\n                        // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                        // dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        //     params: {\r\n                        //         ...state.noteState.chordPaletteState,\r\n                        //         denominator: detail.denominator,\r\n                        //         molecule: detail.molecule,\r\n                        //         // rootIndex: detail.degreeIndex,\r\n                        //         // isFlat: detail.isFlat,\r\n                        //         symbolKey: detail.symbolKey,\r\n                        //         sustain: detail.sustain,\r\n                        //     } as ChordPaletteState\r\n                        // });\r\n                        dispatcher.score.callChordSelector();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'COPY BACKING', keyName: 'X', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.setCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callSectionEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.deleteCurElement();\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: 'call' | 'order';\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { API_DOMAIN, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n\r\nexport const getAdjustSusValue = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = '+' + value;\r\n        else ret = value.toString();\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport const createQueryRequestInit = (sql: string): RequestInit => {\r\n    return {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ sql })\r\n    }\r\n}\r\n\r\nexport const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n    return fetch(API_DOMAIN + '/' + queryType,\r\n        createQueryRequestInit(sql)\r\n    );\r\n}\r\n\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE, ChordPaletteState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordSelector.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n        const canvas: any = canvasRef.current;\r\n        canvas.width = 590;\r\n        canvas.height = 66;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n            updatePianoView(\r\n                editorState.molecule.rootIndex,\r\n                editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                editorState.symbolKey\r\n            );\r\n        }\r\n    }, [editorState, state.noteState.floatwndState]);\r\n\r\n    const updatePianoView = (molRootIndex: number, denRootIndex: number, symbolKey: SymbolKey) => {\r\n        const ctx = (canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        const keyIndex = (cache.init.keyIndex + molRootIndex) % 12;\r\n        const intervalList = (getSymbolParams(symbolKey) as SymbolParams).intervals;\r\n        const list = intervalList.map((value) => keyIndex + value);\r\n        let denIndex = -1;\r\n        if (denRootIndex != -1) {\r\n            denIndex = cache.init.keyIndex + denRootIndex;\r\n        }\r\n        ctx.fillStyle = '#008';\r\n        ctx.fillRect(0, 0, 594, 70);\r\n        const WIDTH = 34;\r\n        const HEIGHT = 60;\r\n        const BLACK_RATE_W = 0.5;\r\n        const BLACK_RATE_H = 0.6;\r\n        const MARGIN_W = 1;\r\n        const START_ADJUST = 1;\r\n        let posX = 0;\r\n        const keyboadList: {\r\n            posX: number;\r\n            fillStyle: string;\r\n            width: number;\r\n            height: number;\r\n            isBlack: boolean;\r\n        }[] = [];\r\n        for (let i = 0; i < 27; i++) {\r\n            let color = '#eee';\r\n            let width = WIDTH;\r\n            let height = HEIGHT;\r\n            const isBlack = [1, 3, 6, 8, 10].includes(i % 12);\r\n            if (isBlack) {\r\n                color = '#111';\r\n                width = WIDTH * BLACK_RATE_W;\r\n                height = HEIGHT * BLACK_RATE_H;\r\n            }\r\n            if (list.includes(i)) {\r\n                color = '#fa0';\r\n            }\r\n            if (denIndex == i) {\r\n                color = '#ff0000';\r\n            }\r\n            keyboadList.push({ posX: 15 + posX, fillStyle: color, width, height, isBlack });\r\n\r\n            switch (i % 12) {\r\n                case 0: case 2: case 5: case 7: case 9:\r\n                    //次が黒鍵\r\n                    posX += WIDTH - WIDTH * BLACK_RATE_W / 2;\r\n                    break;\r\n                case 1: case 3: case 6: case 8: case 10:\r\n                    //黒鍵\r\n                    posX += WIDTH * BLACK_RATE_W / 2 + MARGIN_W;\r\n                    break;\r\n                default:\r\n                    //次が白鍵\r\n                    posX += WIDTH + MARGIN_W;\r\n            }\r\n        }\r\n        keyboadList.forEach((keyboad) => {\r\n            if (!keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        keyboadList.forEach((keyboad) => {\r\n            if (keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n                ctx.fillStyle = '#f00';\r\n                ctx.strokeRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        ctx.save();\r\n    }\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operationJsx: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = cache.init.keyIndex;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.molecule.rootIndex == i;\r\n            const isDenominator = (editorState.denominator == null ? -1 : editorState.denominator.rootIndex) == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={[\r\n                                isSelected ? 'active' : '',\r\n                                isDenominator ? 'denominator' : ''\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                const denominator = !isDenominator ? editorState.denominator : null;\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     i,\r\n                                //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                if (isSelected) return;\r\n                                const denominator = (!isDenominator ? { rootIndex: i, isFlat: false } : null);\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     editorState.molecule.rootIndex,\r\n                                //     i,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && !editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && !editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && !editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: false } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: true }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: true } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                        // updatePianoView(\r\n                        //     editorState.molecule.rootIndex,\r\n                        //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                        //     symbol.key\r\n                        // );\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operationJsx = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    const getAdjustOprJsx = (type: 'h' | 't', offset: number): JSX.Element => {\r\n        let [label, cls, isActive, callback] = type == 'h' ?\r\n            ['h', 'head', editorState.headAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, headAdjust: offset\r\n                    }\r\n                })] :\r\n            ['t', 'tail', editorState.tailAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, tailAdjust: offset\r\n                    }\r\n                })];\r\n        if (offset >= 0) {\r\n            label += (offset > 0 ? '+' : '±');\r\n        }\r\n        return (\r\n            <div\r\n                className={[\r\n                    cls,\r\n                    isActive ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label + offset}</span>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Direct', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'piano-view'}>\r\n                <canvas ref={canvasRef} />\r\n            </div>\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className={'adjuster' + (editorState.selectedLine == ChordPaletteLine.Adjuster ? ' active' : '')}>\r\n                {getAdjustOprJsx('h', -0.5)}\r\n                {getAdjustOprJsx('h', -0.25)}\r\n                {getAdjustOprJsx('h', 0)}\r\n                {getAdjustOprJsx('h', 0.25)}\r\n                {getAdjustOprJsx('h', 0.5)}\r\n                {getAdjustOprJsx('t', -0.5)}\r\n                {getAdjustOprJsx('t', -0.25)}\r\n                {getAdjustOprJsx('t', 0)}\r\n                {getAdjustOprJsx('t', 0.25)}\r\n                {getAdjustOprJsx('t', 0.5)}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operationJsx}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChordSelector;","\r\nimport { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SCALE_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getAdjustSusValue, getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentElementInfo.css';\r\n\r\ntype DataRecord = {\r\n    title: string;\r\n    value: string;\r\n    disable: boolean;\r\n}\r\n\r\nconst CurrentElementInfo = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const data = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let inner: JSX.Element = <></>;\r\n    switch (data.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = data.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.molecule != null) {\r\n                const rootIndex = detail.molecule.rootIndex;\r\n                const degreeRoot = DEGREE12_SHARP_LIST[rootIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[rootIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.molecule != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const baseBlockJsx = buildInfoBlock('Base', [\r\n                { title: 'Tempo', value: '' + cache.init.tempo, disable: false },\r\n                { title: 'Beat', value: cache.init.rythm, disable: false },\r\n                { title: 'Key', value: KEY12_SHARP_LIST[cache.init.keyIndex], disable: false },\r\n                { title: 'Scale', value: cache.init.scale, disable: false },\r\n            ]);\r\n\r\n            const chordBlockJsx = buildInfoBlock('Chord', [\r\n                { title: 'Root', value: root, disable: root == '-' },\r\n                { title: 'Symbol', value: symbolName, disable: symbolName == '-' },\r\n                { title: 'On chord', value: '-', disable: true },\r\n                { title: 'Sustain', value: String(detail.sustain), disable: false },\r\n                { title: 'Adjsut-H', value: getAdjustSusValue(detail.headAdjust), disable: detail.headAdjust == 0 },\r\n                { title: 'Adjsut-T', value: getAdjustSusValue(detail.tailAdjust), disable: detail.tailAdjust == 0 },\r\n            ]);\r\n\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {baseBlockJsx}\r\n                        {chordBlockJsx}\r\n                        {(() => {\r\n\r\n                            if (detail.molecule != null) {\r\n                                const structList: JSX.Element[] = [];\r\n                                const symbol = getSymbolParams(detail.symbolKey);\r\n                                const list = symbol?.intervals;\r\n                                const len = list?.length as number;\r\n                                for (let i = 0; i < 7; i++) {\r\n                                    if (i < len) {\r\n                                        const interval = symbol?.intervals[i] as number;\r\n                                        const struct = symbol?.struct[i];\r\n                                        const sound = KEY12_SHARP_LIST[(detail.molecule.rootIndex + interval) % 12];\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record\">\r\n                                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                                <div className=\"sound\"><span>{sound}</span></div>\r\n                                            </div>\r\n                                        );\r\n                                    } else {\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record disable\">\r\n                                                <div className=\"interval\"></div>\r\n                                                <div className=\"struct\"></div>\r\n                                                <div className=\"sound\"></div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return (<>\r\n                                    <div className=\"title\">\r\n                                        <span>Struct</span>\r\n                                    </div>\r\n                                    <div className=\"symbol-struct\">\r\n                                        {structList}\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<></>);\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        case TypeNoteElement.Section: {\r\n            const detail = data.detail as DetailSection;\r\n\r\n            const sectionBlockJsx = buildInfoBlock('Section', [\r\n                { title: 'label', value: detail.labelName, disable: false },\r\n                { title: 'box count', value: '-', disable: true },\r\n                { title: 'total bar', value: '-', disable: true },\r\n                { title: 'total time', value: '-', disable: true }\r\n            ]);\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {sectionBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {inner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentElementInfo;\r\n\r\n\r\nconst buildInfoBlock = (titleLabel: string, dataRecordList: DataRecord[]): JSX.Element => {\r\n    const jsxList: JSX.Element[] = [];\r\n    dataRecordList.forEach((state, i) => {\r\n        jsxList.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (state.disable ? ' disable' : '')\r\n                }>\r\n                <div className=\"title\"><span>{state.title}:</span></div>\r\n                <div className=\"value\"><span>{state.value}</span></div>\r\n            </div>\r\n        );\r\n    });\r\n    return (<>\r\n        <div className=\"title\">\r\n            <span>{titleLabel}</span>\r\n        </div>\r\n        <div className=\"current-state\">\r\n            {jsxList}\r\n        </div>\r\n    </>);\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps ={\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        {\r\n            label: 'all clear',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                const backingState: BackingEditorState = {\r\n                    useChannels: [],\r\n                    isUsePedal: false,\r\n                    sideIndex: 0,\r\n                    selectedLenIndex: 0,\r\n                    selectedChannelIndex: -1,\r\n                    layers: [\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.LEFT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        },\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.RIGHT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        }\r\n                    ],\r\n                    isCorrect: true\r\n                };\r\n                dispatcher.initBackingPalette(backingState);\r\n            }\r\n        }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>{buttonList}</>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = channelList.length - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingLayer, BACKING_LEN_TYPE, DetailChord } from \"contents/redux/store\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    chordDetail: DetailChord;\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curLayer = props.layer;\r\n    const detail = props.chordDetail;\r\n    const sustainLength = (detail.sustain + detail.headAdjust + detail.tailAdjust) * 4;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 0;\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    // コードブロックの拍の方が長い場合は上書き\r\n    const isLimit = measureLength > sustainLength;\r\n    measureLength = (!isLimit ? sustainLength : measureLength);\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const pos = i + (detail.headAdjust * 4);\r\n        const getLen = () => {\r\n            if (pos % 2 == 0) {\r\n                if (pos % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLimit = false;//i == sustainLength;\r\n        measureInner.push(<div key={i} className={getLen() + (isLimit ? ' limit' : '')} />);\r\n    }\r\n\r\n    const limitLeft = sustainLength * 31;\r\n    const limitJsx = !isLimit ?\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: '5px'\r\n        }} className=\"safe\"></div>)\r\n        :\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: `${(measureLength - sustainLength) * 31}px`\r\n        }} className=\"over\"></div>);\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n            {limitJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam, DetailChord } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    chordDetail: DetailChord;\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curLayer = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    channelList.forEach((channel, i) => {\r\n        channelJsxList.push(\r\n            <div\r\n                key={i}\r\n                className=\"channel\"\r\n                onClick={() => testPlaySound(channel.soundFullName)}\r\n            >\r\n                <span>{channel.soundFullName}</span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curLayer.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"backing-table\">\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>Right</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>Left</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    chordDetail={props.chordDetail}\r\n                    layer={curLayer}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import { SymbolParams } from \"contents/common/define\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\nexport const StructMatrix = (props: {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}) => {\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.symbol.intervals.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const interval = props.symbol.intervals[i];\r\n            const relation = props.symbol.struct[i];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: {soundName}</span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + props.symbol.intervals[i] + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = props.structs[i] + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                props.paletteState.useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                const isLimit = props.paletteState.useChannels.length >= 12 && !isSelected;\r\n\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={\r\n                            'col' +\r\n                            (isNone || isLimit ? ' disable' : '') +\r\n                            (isSelected ? ' active' : '')\r\n                        }\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam, Key12Info } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\ntype BackingContextType = {\r\n    isCorrect: boolean;\r\n    setCorrect: (isCorrect: boolean) => void;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isCorrect, setCorrect] = useState(true);\r\n\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatcher.backing.setCorrect(isCorrect);\r\n    }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const foocusIndex = state.noteState.focusIndex;\r\n    const detail = state.noteData.dataList[foocusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[foocusIndex];\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    const rootIndex = (detail.molecule as Key12Info).rootIndex;\r\n    const symbol = getSymbolParams(detail.symbolKey) as SymbolParams;\r\n\r\n    const root = KEY12_SHARP_LIST[rootIndex];\r\n    const chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    symbol.intervals.forEach((value) => {\r\n        structs.push(KEY12_SHARP_LIST[(cache.init.keyIndex + rootIndex + value) % 12]);\r\n    });\r\n\r\n    // const infoList: JSX.Element[] = [];\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, rootIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.play(false);\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.setCurBackingScript();\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            isCorrect: isCorrect,\r\n            setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                id=\"backing-palette\"\r\n                className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{detail.sustain}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={rootIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    chordDetail={detail}\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\nimport './FooterTiming.css';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from 'styled-components';\r\n\r\nconst MEM_WIDTH = 16;\r\nconst FIXED_BLANK = 100;\r\n\r\nconst StyleTest = styled.div`\r\n    font-size: 0;\r\n    display: inline-inline-block;\r\n`;\r\n\r\n\r\n\r\nconst FooterTiming: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n    const [measureJsxList, setMeasureJsxList] = useState([] as JSX.Element[]);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const chordDetail = dataList[focusIndex].type == TypeNoteElement.Chord ?\r\n        (dataList[focusIndex].detail as DetailChord) : null;\r\n    const sustain = chordDetail == null ? 0 : chordDetail.sustain;\r\n    const headAdjust = chordDetail == null ? 0 : chordDetail.headAdjust;\r\n    const tailAdjust = chordDetail == null ? 0 : chordDetail.tailAdjust;\r\n    useEffect(() => {\r\n        let total = 0;\r\n        const blockJsxList: JSX.Element[] = [];\r\n        const measureJsxList: JSX.Element[] = [];\r\n        const dataList = state.noteData.dataList;\r\n\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                        ].join(' ')}\r\n                        style={{ width: `${FIXED_BLANK}px` }}\r\n                    />\r\n                )\r\n            }\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                const detail = data.detail as DetailChord;\r\n                const len = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                const width = len * MEM_WIDTH * 4;\r\n                const isCur = focusIndex == i;\r\n                const isNear = focusIndex == i - 1 || focusIndex == i + 1;\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                            isCur ? 'active' : '',\r\n                            isNear ? 'near' : '',\r\n                        ].join(' ')}\r\n                        style={{ width: `${width - 1}px` }}\r\n                    >\r\n                        <div className=\"sus\">\r\n                            <span>{detail.sustain}</span>\r\n                        </div>\r\n                        <div className=\"adjust\">\r\n                            <span className={getAdjustCls(detail.headAdjust)}>\r\n                                {getAdjustSusValue(detail.headAdjust)}\r\n                            </span>\r\n                            <span className={getAdjustCls(detail.tailAdjust)}>\r\n                                {getAdjustSusValue(detail.tailAdjust)}\r\n                            </span>\r\n                        </div>\r\n                    </div >\r\n                );\r\n                if (isCur) {\r\n                    scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n                }\r\n                total += len * 4;\r\n            }\r\n        });\r\n\r\n        // measureJsxList.push(\r\n        //     <div key={measureJsxList.length} className=\"blank\" style={{ left: `${0}px` }} />\r\n        // )\r\n        for (let i = 0; i < total; i++) {\r\n            let name = '';\r\n            const isBar = i % 16 == 0;\r\n            /** 小節数 */\r\n            const barCount = 1 + (i / 16);\r\n            if (isBar) {\r\n                name = 'mem-bar';\r\n            } else {\r\n                switch (i % 4) {\r\n                    case 0: name = 'mem4'; break;\r\n                    case 2: name = 'mem8'; break;\r\n                    default: name = 'mem16'; break;\r\n                }\r\n            }\r\n            measureJsxList.push(\r\n                <div key={measureJsxList.length} className={name} style={{ left: `${FIXED_BLANK + i * MEM_WIDTH}px` }}>{\r\n                    i % 16 == 0 ?\r\n                        <div className=\"bar\" style={{ left: `${-14}px`, top: '24px' }}>{barCount}</div>\r\n                        :\r\n                        <></>\r\n                }</div>\r\n            );\r\n        }\r\n        // alert(measureJsxList.length);\r\n        setBlockJsxList(blockJsxList);\r\n        setMeasureJsxList(measureJsxList);\r\n        setTotal(total);\r\n    }, [dataCount, focusIndex, sustain, headAdjust, tailAdjust]);\r\n\r\n    if (chordDetail == null) {\r\n        return (<></>);\r\n    }\r\n\r\n    const totalWidth = FIXED_BLANK * 2 + total * MEM_WIDTH;\r\n    return (\r\n        <div id=\"footer-timing\" className=\"footer-child\">\r\n            <div className=\"scroll\" ref={scrollRef}>\r\n                <div className=\"blocks\" style={{ width: `${totalWidth}px` }}>\r\n                    {blockJsxList}\r\n                </div>\r\n                <div className=\"measure\" style={{ width: `${totalWidth}px` }}>\r\n                    {measureJsxList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getAdjustCls = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = 'aug';\r\n        else ret = 'dim';\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport default FooterTiming;","\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport FooterTiming from './timing/FooterTiming';\r\nimport './NoteFooter.css';\r\n\r\nconst NoteFooter = () => {\r\n\r\n    return (\r\n        <div id=\"score-footer\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Progress', disable: false, cont: <FooterTiming/> },\r\n                    { name: 'Target', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteFooter;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <span>{tempo}</span>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;\r\n\r\nconst StyledButton = styled.span`\r\n  user-select: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  margin: 1em;\r\n  padding: 0.3em 0.5em;\r\n  border-radius: 0.2em;\r\n  border: solid 1px #3498db;\r\n  color: #fff;\r\n  background-color: #3498db;\r\n`","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './SectionEditor.css';\r\n\r\nconst SectionEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.section.setSectionParam(labelName);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const getTextForm = (label: string, value: string, callback: (value: string) => void): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"section-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.SECTION_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getTextForm('Name', labelName, (value: string) => { setLabelName(value) })}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionEditor;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './SettingEditor.css';\r\n\r\nconst SettingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    if (state.noteState.floatwndState != FloatWndState.SETTING_EDITOR) {\r\n        return (<></>);\r\n    }\r\n    const defsus = state.noteState.defaultSustain;\r\n    const sustainJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        sustainJsxList.push(\r\n            <div\r\n                key={sustainJsxList.length}\r\n                className={[\r\n                    i + 1 <= defsus ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={()=>{\r\n                    dispatcher.score.setNoteState({...state.noteState, defaultSustain: i + 1});\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <div id=\"setting-editor\"\r\n            className=\"floatwnd active\">\r\n            <div className=\"sustain\">{sustainJsxList}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingEditor;\r\n","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentElementInfo from './sideDetail/CurrentElementInfo';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport NoteFooter from './footer/NoteFooter';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\nimport SectionEditor from './floatwnd/section/SectionEditor';\r\nimport SettingEditor from './floatwnd/setting/SettingEditor';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        console.log('create ScoreContNoteTab');\r\n    },[]);\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                const sustain = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                totalBeat += sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * sustain;\r\n                no++;\r\n            }\r\n\r\n            cacheList[i] = { ...cacheList[i], init: { ...cache.init }, progress };\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).labelName} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                        }}><span>BACK</span></button>\r\n                        <button className=\"disable\"><span>SAVE</span></button>\r\n                        <button className=\"disable\"><span>RELOAD</span></button>\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SETTING_EDITOR })\r\n                        }}> <span>SETTING</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <SectionEditor />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                    <SettingEditor />\r\n                </div>\r\n                <NoteFooter />\r\n\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentElementInfo />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.BACKING ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, NoteData, NoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { API_DOMAIN } from 'contents/common/define';\r\nimport { createQueryRequestInit, sendQueryRequestToAPI } from 'contents/common/utils';\r\n\r\ntype Record = { id: number, title: string, chord_mode: CHORD_MODE, data_cnt: number };\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [message, setMessage] = useState<string>('');\r\n    const [recordList, setRecordList] = useState<Record[]>([]);\r\n    const [titleList, setTitleList] = useState<JSX.Element[]>([]);\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [chordMode, setChordMode] = useState<CHORD_MODE | ''>('');\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('create ScoreContLiblaryTab');\r\n    }, []);\r\n\r\n    // 非同期で表示データを更新。\r\n    const reload = (initFocus: number) => {\r\n        // setFocus(initFocus);\r\n        setMessage('Now roading scores...');\r\n        sendQueryRequestToAPI('select', `SELECT s.*, (select count(*) from data_tbl where score = s.id) as data_cnt FROM sclibtbl s where user = ${state.login.id}`)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(results => {\r\n                console.log(`[${state.login.id}]score count: ` + results.length);\r\n                const isExist = results.length > 0;\r\n                if (isExist) {\r\n                    setRecordList(results);\r\n                    setMessage('');\r\n                } else {\r\n                    setMessage('There is no musical score you manage yet.');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error + \"失敗しました\");\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const list: JSX.Element[] = [];\r\n        recordList.forEach((record, i) => {\r\n            list.push(\r\n                <div\r\n                    key={i}\r\n                    className={[\r\n                        'record',\r\n                        focus == i ? 'focus' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        setFocus(i);\r\n                    }}\r\n                >\r\n                    <span>{record.id}:</span>\r\n                    <span className=\"title\">{record.title}</span>\r\n                    <span>[</span>\r\n                    <span className=\"mode\">{record.chord_mode}</span>\r\n                    <span>]</span>\r\n                </div>\r\n            );\r\n        });\r\n        setTitleList(list);\r\n    }, [recordList, focus]);\r\n\r\n    useEffect(() => {\r\n        if (!isEdit) {\r\n            reload(-1);\r\n        }\r\n\r\n    }, [isEdit]);\r\n\r\n    const createButton = (label: string, isDisable: boolean, callback: () => void, isActive: boolean = false): JSX.Element => {\r\n        return (\r\n            <button className={[\r\n                isDisable ? 'disable' : '',\r\n                isActive ? 'active' : ''\r\n            ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label}</span>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    const createInfoRecored = (label: string, innerJsx: JSX.Element): JSX.Element => {\r\n        return (\r\n            <div\r\n                className=\"info-record\"\r\n            >\r\n                <span>{label}</span>\r\n                <span>{': '}</span>\r\n                {innerJsx}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const isDisplayMsg = message != '';\r\n    const selectedRecord = recordList[focus];\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                {/* <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button> */}\r\n                <div className=\"opr\">\r\n                    {createButton('Create', isEdit, () => {\r\n                        setMessage('Create...');\r\n                        sendQueryRequestToAPI('update', `INSERT INTO sclibtbl(user, title, chord_mode) VALUES(${state.login.id}, 'new_title', '')`)\r\n                            .then((result) => {\r\n                                reload(recordList.length);\r\n                                return result;\r\n                            })\r\n                    })}\r\n                    {createButton('Update', focus == -1, () => {\r\n                        if (!isEdit) {\r\n                            setEdit(true);\r\n                            setTitle(selectedRecord.title);\r\n                            setChordMode(selectedRecord.chord_mode);\r\n                        }\r\n                    }, isEdit)}\r\n                    {createButton('Delete', focus == -1 || isEdit, () => {\r\n                        (async () => {\r\n                            setMessage('Delete...');\r\n                            console.log('----start----');\r\n                            await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${recordList[focus].id}`);\r\n                            await sendQueryRequestToAPI('update', `delete from sclibtbl where id = ${recordList[focus].id}`);\r\n                            reload(-1);\r\n                            setFocus(-1);\r\n                            console.log('----end----');\r\n                        })();\r\n                    })}\r\n                </div>\r\n                <div className={[\r\n                    'lib',\r\n                    isEdit ? 'disable' : ''\r\n                ].join(' ')}>\r\n                    <div className={[\r\n                        'message',\r\n                        !isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        <span>{message}</span>\r\n                    </div>\r\n                    <div className={[\r\n                        'list',\r\n                        isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        {titleList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <div className=\"opr\">\r\n                    {createButton('Cancel', !isEdit, () => {\r\n                        setEdit(false);\r\n                    })}\r\n                    {createButton('Save', !isEdit || chordMode === '', () => {\r\n                        (async () => {\r\n                            console.log('----start----');\r\n                            const values: string[] = [];\r\n                            await sendQueryRequestToAPI('update', `update sclibtbl set title = '${title}', chord_mode = '${chordMode}' where id = ${selectedRecord.id}`);\r\n                            if (state.noteData.dataList.length > 0) {\r\n                                state.noteData.dataList.forEach((data, i) => {\r\n                                    values.push(`(${selectedRecord.id}, ${i}, '${JSON.stringify(data)}')`);\r\n                                });\r\n                                await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${selectedRecord.id}`);\r\n                                await sendQueryRequestToAPI('update', `insert into data_tbl values${values.join(',')}`);\r\n                            }\r\n                            console.log('----end----');\r\n                            alert('The data was saved successfully!');\r\n                            setEdit(false);\r\n                        })();\r\n                    })}\r\n                    {createButton('Edit', !isEdit || chordMode === '', () => {\r\n                        (async () => {\r\n                            dispatcher.setNoteData({ ...state.noteData, chordMode: chordMode as CHORD_MODE });\r\n                            if (selectedRecord.data_cnt == 0) {\r\n                                // dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                                dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                            } else {\r\n                                const response = await sendQueryRequestToAPI('select', `SELECT json from data_tbl where score = ${selectedRecord.id} order by seq`);\r\n                                const results = await response.json();\r\n                                // alert(JSON.stringify(results));\r\n                                const dataList: NoteElement[] = [];\r\n                                results.forEach((result: { json: string }) => {\r\n                                    dataList.push(JSON.parse(result.json));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                            }\r\n                            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: 2 });\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                        })();\r\n                    })}\r\n                </div>\r\n                {\r\n                    !isEdit ? <></> : (\r\n                        <div className=\"data\">\r\n                            {createInfoRecored('Id', (\r\n                                <span className=\"value\">{selectedRecord.id}</span>\r\n                            ))}\r\n                            {createInfoRecored('Title', (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        // recordList[focus].title = e.target.value;\r\n                                        // setRecordList(recordList);\r\n                                        setTitle(e.target.value);\r\n                                    }}\r\n                                    value={title}\r\n                                />\r\n                            ))}\r\n                            {createInfoRecored('Mode', (\r\n                                // <span className=\"value\">{selectedRecord.chord_mode}</span>\r\n                                <select className={[\r\n                                    'value',\r\n                                    selectedRecord.data_cnt > 0 ? 'disable' : ''\r\n                                ].join(' ')}\r\n                                    value={chordMode}\r\n                                    onChange={(e) => {\r\n                                        setChordMode(e.target.value as CHORD_MODE | '');\r\n                                    }}>\r\n                                    <option value=''></option>\r\n                                    <option value={CHORD_MODE.SCALE}>{CHORD_MODE.SCALE}</option>\r\n                                    <option value={CHORD_MODE.DIRECT}>{CHORD_MODE.DIRECT}</option>\r\n                                </select>\r\n                            ))}\r\n                            {createInfoRecored('Show', (\r\n                                <span className=\"value\">{'PRIVATE'}</span>\r\n                            ))}\r\n                            {createInfoRecored('Data', (\r\n                                <span className=\"value\">{selectedRecord.data_cnt}</span>\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreContBackingTab.css';\r\n\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport  { useContext } from 'react';\r\n\r\n\r\nconst ScoreContBackingTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    \r\n    return (<></>);\r\n\r\n\r\n}\r\n\r\nexport default ScoreContBackingTab;\r\n","import './ScoreContSourceTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContSourceTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    const ref = useRef({} as HTMLTextAreaElement);\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex == 2 && state.noteData.dataList.length != 0) {\r\n            ref.current.value = JSON.stringify(state.noteData);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    return (\r\n        <div id=\"scorecont-sourcetab-root\">\r\n            <textarea ref={ref}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData(JSON.parse(ref.current.value));\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n            >Load score data...</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContSourceTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContBackingTab from './contTabs/backing/ScoreContBackingTab';\r\nimport ScoreContSourceTab from './contTabs/source/ScoreContSourceTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: true, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: true,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Source', disable: false, cont: <ScoreContSourceTab /> },\r\n                    { name: 'Backing', disable: true, cont: <ScoreContBackingTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache, DetailModulation, DetailFixed, LoginParams, ChordPaletteState } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    public setLoginParams = (login: LoginParams) => {\r\n        this.dispatch(ActionType.SET_LOGIN, { login });\r\n    }\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n                // reffer.style.width = 'inherit';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.BACKING\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n\r\n        addNoteElement: (type: TypeNoteElement, detail: DetailSection | DetailChord | DetailModulation) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, { type, detail });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addModulationElement: () => {\r\n            const detail = { tempo: -1 } as DetailModulation;\r\n            this.score.addNoteElement(TypeNoteElement.Modulation, detail);\r\n        },\r\n        addChordElement: () => {\r\n            const noteState = this.state.noteState;\r\n            const curIndex = noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    // degreeIndex: -1,\r\n                    // isFlat: false,\r\n                    molecule: null,\r\n                    denominator: null,\r\n                    symbolKey: SymbolKey.MAJOR,\r\n                    sustain: noteState.defaultSustain,\r\n                    headAdjust: 0,\r\n                    tailAdjust: 0,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            }\r\n                        ],\r\n                        isUsePedal: false\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                // this.state.noteState.focusIndex++;\r\n                const focusIndex = curIndex + 1;\r\n                // this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                this.score.setNoteState({ ...this.state.noteState, focusIndex });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            // let degreeIndex = detail.degreeIndex;\r\n            // if (degreeIndex == -1) {\r\n            //     degreeIndex = 0;\r\n            // }\r\n            let molecule = detail.molecule;\r\n            if (molecule == null) {\r\n                molecule = { rootIndex: 0, isFlat: false };\r\n            }\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    // rootIndex: degreeIndex,\r\n                    // isFlat: detail.isFlat,\r\n                    molecule,\r\n                    denominator: detail.denominator,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                    headAdjust: detail.headAdjust,\r\n                    tailAdjust: detail.tailAdjust,\r\n                } as ChordPaletteState\r\n            });\r\n        },\r\n\r\n        callSectionEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailSection;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SECTION_PALETTE });\r\n            // this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n            //     params: {\r\n            //         ...this.state.noteState.chordPaletteState,\r\n            //         rootIndex: detail.degreeIndex,\r\n            //         isFlat: detail.isFlat,\r\n            //         symbolKey: detail.symbolKey,\r\n            //         sustain: detail.sustain,\r\n            //     }\r\n            // });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const backing = detail.backing;\r\n            const backingState: BackingEditorState = {\r\n                useChannels: JSON.parse(JSON.stringify(backing.useChannels)),\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: JSON.parse(JSON.stringify(backing.layers)),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * セクションエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public section = {\r\n        setSectionParam: (labelName: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    labelName\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    // degreeIndex: editorState.rootIndex,\r\n                    // isFlat: editorState.isFlat,\r\n                    molecule: editorState.molecule,\r\n                    denominator: editorState.denominator,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                    headAdjust: editorState.headAdjust,\r\n                    tailAdjust: editorState.tailAdjust,\r\n                } as DetailChord\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !this.state.noteState.backingPaletteState.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const baseLayers = backingPaletteState.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        // play: (isProceed: boolean) => {\r\n\r\n        //     const threads = this.state.noteState.backingThreads;\r\n        //     const soundUseList: number[] = Array(88);\r\n        //     for (let i = 0; i < 88; i++) {\r\n        //         soundUseList[i] = 0;\r\n        //     }\r\n        //     const rec = (isProceed: boolean) => {\r\n\r\n        //         const curTime = new Date().getTime();\r\n        //         const focusIndex = this.state.noteState.focusIndex;\r\n        //         const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n        //         const cache = this.state.noteState.cacheList[focusIndex];\r\n        //         const symbol = getSymbolParams(detail.symbolKey);\r\n        //         const intervals = symbol?.intervals as number[];\r\n        //         const editor = this.state.noteState.backingPaletteState;\r\n        //         const backing: BackingScript = !isProceed ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n        //             : detail.backing;\r\n        //         const sampler = this.state.sampler;\r\n        //         const tempo = cache.init.tempo;\r\n        //         // 1小節の長さミリ秒\r\n        //         const barMs = 60000 / tempo * 4;\r\n        //         const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n        //         const adjustOverlap = barMs / 32;\r\n\r\n        //         // 末端に達した時の処理\r\n        //         threads.push(\r\n        //             setTimeout(() => {\r\n        //                 let isEnd = true;\r\n        //                 if (isProceed) {\r\n        //                     const hasNext = this.score.focusNextElement();\r\n        //                     if (hasNext) {\r\n        //                         isEnd = false;\r\n        //                         rec(true);\r\n        //                     }\r\n        //                 }\r\n        //                 if (isEnd) {\r\n        //                     this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n        //                 }\r\n        //             }, boxMs)\r\n        //         );\r\n        //         console.log(new Date().getTime() - curTime);\r\n        //         for (let i = 0; i < 2; i++) {\r\n        //             let headMs = 0;\r\n        //             const layer = backing.layers[i];\r\n        //             // 音価のループ\r\n        //             layer.lens.forEach((lenBean, j) => {\r\n\r\n        //                 const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n        //                 let curLenMs = barMs / lenValue;\r\n        //                 if (lenBean.isHalf) {\r\n        //                     curLenMs *= 1.5;\r\n        //                 }\r\n        //                 backing.useChannels.forEach((channel, k) => {\r\n        //                     layer.table[k][j].forEach((notes, l) => {\r\n\r\n        //                         if (notes && detail.molecule != null) {\r\n        //                             const degreeIndex = detail.molecule.rootIndex;\r\n        //                             const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n        //                             const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n        //                             const octave = Math.floor(soundIndex / 12);\r\n        //                             const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n        //                             const soundFullName = root + octave;\r\n        //                             const velocity = 0.7 * layer.vels[j] / 10;\r\n        //                             const head = headMs + curLenMs / 3 * l;\r\n        //                             const tail = !backing.isUsePedal ?\r\n        //                                 //ペダル未使用時\r\n        //                                 head + curLenMs :\r\n        //                                 //ペダル使用時\r\n        //                                 boxMs + adjustOverlap\r\n        //                                 ;\r\n        //                             threads.push(\r\n        //                                 setTimeout(() => {\r\n        //                                     sampler.triggerAttack(soundFullName, '+0', velocity);\r\n        //                                     soundUseList[soundIndex]++;\r\n        //                                 }, head)\r\n        //                             );\r\n        //                             // console.log(new Date().getTime() - curTime);\r\n        //                             threads.push(\r\n        //                                 setTimeout(() => {\r\n        //                                     soundUseList[soundIndex]--;\r\n        //                                     if (soundUseList[soundIndex] == 0) {\r\n        //                                         sampler.triggerRelease(soundFullName);\r\n        //                                     }\r\n        //                                 }, tail)\r\n        //                             );\r\n        //                             // console.log(new Date().getTime() - curTime);\r\n        //                         }\r\n        //                     });\r\n        //                 });\r\n        //                 headMs += curLenMs;\r\n        //             });\r\n        //         }\r\n        //         this.score.setNoteState({\r\n        //             ...this.state.noteState,\r\n        //             editMode: EditMode.PREVIEW, backingThreads: threads\r\n        //         });\r\n        //     }\r\n        //     rec(isProceed);\r\n        // }\r\n        play: (isScore: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                editMode: EditMode.PREVIEW, backingThreads: threads\r\n            });\r\n            let totalTime = 0;\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            const curTime = new Date().getTime();\r\n            for (let i = focusIndex; i < (isScore ? dataList.length : focusIndex + 1); i++) {\r\n                const data = dataList[i];\r\n\r\n\r\n                // フォーカスを更新\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        if (isScore && [TypeNoteElement.Chord, TypeNoteElement.Fixed].includes(data.type)) {\r\n                            // const hasNext = this.score.focusNextElement();\r\n                            // if (!hasNext) {\r\n                            //     this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                            // }\r\n                            const [editMode, next] =\r\n                                data.type == TypeNoteElement.Fixed ?\r\n                                    [EditMode.NORMAL, focusIndex] : [EditMode.PREVIEW, i];\r\n                            this.score.setNoteState({ ...this.state.noteState, focusIndex: next, editMode });\r\n                        }\r\n                    }, totalTime)\r\n                );\r\n                if (data.type == TypeNoteElement.Chord) {\r\n                    const detail = data.detail as DetailChord;\r\n\r\n                    const cache = this.state.noteState.cacheList[i];\r\n                    const symbol = getSymbolParams(detail.symbolKey);\r\n                    const intervals = symbol?.intervals as number[];\r\n                    const editor = this.state.noteState.backingPaletteState;\r\n                    const backing: BackingScript = !isScore ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                        : detail.backing;\r\n                    const sampler = this.state.sampler;\r\n                    const tempo = cache.init.tempo;\r\n                    // 1小節の長さミリ秒\r\n                    const barMs = 60000 / tempo * 4;\r\n                    const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                    const adjustOverlap = barMs / 32;\r\n\r\n                    // バッキングエディタの場合は、1つの要素で止める\r\n                    if (!isScore) {\r\n                        threads.push(\r\n                            setTimeout(() => {\r\n                                this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n\r\n                            }, totalTime + boxMs)\r\n                        )\r\n                    }\r\n                    for (let i = 0; i < 2; i++) {\r\n                        let headMs = 0;\r\n                        const layer = backing.layers[i];\r\n                        // 音価のループ\r\n                        layer.lens.forEach((lenBean, j) => {\r\n\r\n                            const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                            let curLenMs = barMs / lenValue;\r\n                            if (lenBean.isHalf) {\r\n                                curLenMs *= 1.5;\r\n                            }\r\n                            backing.useChannels.forEach((channel, k) => {\r\n                                layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                    if (notes && detail.molecule != null) {\r\n                                        const degreeIndex = detail.molecule.rootIndex;\r\n                                        const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                        const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                        const octave = Math.floor(soundIndex / 12);\r\n                                        const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                        const soundFullName = root + octave;\r\n                                        const velocity = 0.7 * layer.vels[j] / 10;\r\n                                        const head = headMs + curLenMs / 3 * l;\r\n                                        const tail = !backing.isUsePedal ?\r\n                                            //ペダル未使用時\r\n                                            head + curLenMs :\r\n                                            //ペダル使用時\r\n                                            boxMs + adjustOverlap\r\n                                            ;\r\n                                        const lag = new Date().getTime() - curTime;\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                                soundUseList[soundIndex]++;\r\n                                            }, totalTime + head - lag)\r\n                                        );\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                soundUseList[soundIndex]--;\r\n                                                if (soundUseList[soundIndex] == 0) {\r\n                                                    sampler.triggerRelease(soundFullName);\r\n                                                }\r\n                                            }, totalTime + tail - lag)\r\n                                        );\r\n                                    }\r\n                                });\r\n                            });\r\n                            headMs += curLenMs;\r\n                        });\r\n                    }\r\n                    totalTime += boxMs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { API_DOMAIN } from 'contents/common/define';\r\nimport { sendQueryRequestToAPI } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './LoginFrame.css';\r\n\r\nconst LoginFrame = () => {\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n\r\n    const [loginType, setLoginType] = useState<'guest' | 'login' | 'create'>('guest');\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [message, setMessage] = useState(' ');\r\n    const [isError, setError] = useState(false);\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const enterDisable = (): boolean => {\r\n        switch (loginType) {\r\n            case 'guest': return false;\r\n            case 'login': {\r\n                return userName == '' || userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password == '' || password.length < 5 || password.length > 15 || !isHanEisu(password);\r\n            }\r\n            case 'create': {\r\n                return userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password.length < 5 || password.length > 15 || !isHanEisu(password) ||\r\n                    passConfirm.length < 5 || passConfirm.length > 15 || !isHanEisu(passConfirm);\r\n            }\r\n        }\r\n    }\r\n    return (<>\r\n        <div id=\"logo\"><span>Virtual Harmonizer</span></div>\r\n        <div id=\"login-frame\" ref={ref}>\r\n            <div className=\"guide\">\r\n                <span>Start to Virtual Harmonizer</span>\r\n            </div>\r\n            <div className=\"type\">\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"guest\"\r\n                    name=\"guest\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"login\"\r\n                    name=\"login\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"create\"\r\n                    name=\"create account\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n            </div>\r\n            <div className=\"body\">\r\n                <TextForm\r\n                    label=\"user name\"\r\n                    stateValue={userName}\r\n                    stateSetter={setUserName}\r\n                    isMask={false}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password\"\r\n                    stateValue={password}\r\n                    stateSetter={setPassword}\r\n                    isMask={true}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password confirm\"\r\n                    stateValue={passConfirm}\r\n                    stateSetter={setPassConfirm}\r\n                    isMask={true}\r\n                    isDisable={!['create'].includes(loginType)}\r\n                />\r\n            </div>\r\n            <div className=\"message\">\r\n                <span className={isError ? 'error' : ''}>{message}</span>\r\n            </div>\r\n            <div\r\n                className={['opr', (enterDisable() || isLoading) ? 'disable' : ''].join(' ')}\r\n            >\r\n                <button\r\n                    onClick={() => {\r\n\r\n                        const login = (id: number, name: string) => {\r\n                            ref.current.style.opacity = '0';\r\n                            setTimeout(() => {\r\n                                dispatcher.setLoginParams({\r\n                                    ...state.login,\r\n                                    isLogin: true,\r\n                                    id,\r\n                                    name\r\n                                });\r\n                            }, 300);\r\n                        }\r\n                        setLoading(true);\r\n                        setError(false);\r\n                        setMessage('Connect to server...');\r\n                        switch (loginType) {\r\n                            case 'guest': {\r\n                                login(-1, 'Guest');\r\n                                setLoading(false);\r\n                            }\r\n                                break;\r\n                            case 'login': {\r\n\r\n                                sendQueryRequestToAPI('select', `SELECT * FROM user_tbl where name = '${userName}' and password = '${password}'`)\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(results => {\r\n                                        console.log(results.length);\r\n                                        const isExist = results.length > 0;\r\n                                        if (isExist) {\r\n                                            login(results[0].id, results[0].name);\r\n                                        } else {\r\n                                            setError(true);\r\n                                            setMessage('The login attempt failed. Either the user ID or password is invalid.');\r\n                                        }\r\n                                        setLoading(false);\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                        setLoading(false);\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'create': {\r\n\r\n                                if (password != passConfirm) {\r\n                                    setError(true);\r\n                                    setMessage(`Confirmation passwords don't match.`);\r\n                                    setLoading(false);\r\n                                    break;\r\n                                }\r\n\r\n                                (async () => {\r\n                                    let response = await sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where name = '${userName}'`);\r\n                                    let results = await response.json();\r\n                                    console.log(JSON.stringify(results[0].cnt));\r\n                                    const isExist = results[0].cnt > 0;\r\n                                    if (isExist) {\r\n                                        setError(true);\r\n                                        setMessage('That user id has already been recorded.');\r\n                                    } else {\r\n                                        response = await sendQueryRequestToAPI('update', `INSERT INTO user_tbl(name, password) VALUES('${userName}', '${password}')`);\r\n                                        results = await response.json();\r\n                                        setMessage('');\r\n                                        alert('You have successfully created an account!');\r\n                                        setLoginType('login');\r\n                                    }\r\n                                    setLoading(false);\r\n                                })();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }}\r\n                >\r\n                    enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nconst LoginTypeSwitch = (\r\n    props: {\r\n        name: string,\r\n        curLoginType: string,\r\n        loginType: string,\r\n        setLoginType: Function,\r\n        resetError: Function\r\n    }\r\n) => {\r\n    const isSelected = props.loginType == props.curLoginType;\r\n    return (\r\n        <button\r\n            className={isSelected ? 'active' : ''}\r\n            onClick={() => {\r\n                if (!isSelected) {\r\n                    props.setLoginType(props.curLoginType);\r\n                    props.resetError();\r\n                }\r\n            }}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nconst TextForm = (\r\n    props: {\r\n        label: string,\r\n        stateValue: string,\r\n        stateSetter: Function,\r\n        isMask: boolean,\r\n        isDisable: boolean\r\n    }\r\n) => {\r\n    useEffect(() => {\r\n        if (props.isDisable) {\r\n            props.stateSetter('');\r\n        }\r\n    }, [props.isDisable]);\r\n    const strLen = props.stateValue.length;\r\n    return (\r\n        <div className={['form', props.isDisable ? 'disable' : ''].join(' ')}>\r\n            <span>{props.label}:</span>\r\n            <input\r\n                className={[\r\n                    !props.isDisable && strLen == 0 ? 'required' : '',\r\n                    !props.isDisable && (strLen < 5 || strLen > 15) ? 'range' : '',\r\n                    !props.isDisable && !isHanEisu(props.stateValue) ? 'ban' : ''\r\n                ].join(' ')}\r\n                type={props.isMask ? 'password' : 'text'}\r\n                value={props.stateValue}\r\n                onChange={(e) => props.stateSetter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isHanEisu = (str: string) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[A-Za-z0-9_!@]*$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LoginFrame;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { useContext } from 'react';\r\nimport './UserPlate.css';\r\n\r\nconst UserPlate = (\r\n    props: {\r\n    }\r\n) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    return (\r\n        <div id=\"user-plate\" className={[''].join(' ')}>\r\n            <div className=\"user-name\">\r\n                <span>{state.login.name}</span>\r\n            </div>\r\n            <div\r\n                className=\"logout\"\r\n\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData({\r\n                        ...state.noteData,\r\n                        dataList: []\r\n                    });\r\n                    dispatcher.setLoginParams({\r\n                        ...state.login,\r\n                        isLogin: false,\r\n                        name: ''\r\n                    });\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                }}>\r\n                <span>LOGOUT</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPlate;","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\nimport LoginFrame from './login/LoginFrame';\r\nimport UserPlate from './user/UserPlate';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                {\r\n                    !state.login.isLogin ?\r\n                        <LoginFrame />\r\n                        :\r\n                        <>\r\n                            <UserPlate />\r\n                            <TabbedPane groupName=\"system-tabs\"\r\n                                tabElements={[\r\n                                    { name: 'Account', disable: true, cont: <div></div> },\r\n                                    { name: 'Palette', disable: true, cont: <div></div> },\r\n                                    { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                                    { name: 'Symbol', disable: true, cont: <div></div> },\r\n                                    { name: 'Sampler', disable: true, cont: <div></div> },\r\n                                    { name: 'Setting', disable: true, cont: <div></div> }\r\n                                ]}\r\n                                activeNo={2}\r\n                            />\r\n                        </>\r\n                }\r\n                {/* <>\r\n                    <LoginFrame />\r\n                    <UserPlate />\r\n                    <TabbedPane groupName=\"system-tabs\"\r\n                        tabElements={[\r\n                            { name: 'Account', disable: true, cont: <div></div> },\r\n                            { name: 'Palette', disable: true, cont: <div></div> },\r\n                            { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                            { name: 'Backing', disable: true, cont: <div></div> },\r\n                            { name: 'Symbol', disable: true, cont: <div></div> },\r\n                            { name: 'Sampler', disable: true, cont: <div></div> },\r\n                            { name: 'Setting', disable: true, cont: <div></div> }\r\n                        ]}\r\n                        activeNo={2}\r\n                    />\r\n                </> */}\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BackingScript, BACKING_LEN_TYPE, BACKING_SIDE, ChordPaletteState, CHORD_MODE, DetailChord, DetailSection, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    if (state.scoreTabIndex != 1) {\r\n        return;\r\n    }\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Section: {\r\n            const detail = selectedData.detail as DetailSection;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callSectionEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.SECTION_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.molecule != null) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                                dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case 'z': {\r\n                                fetch(\"https://vh-sqlite.glitch.me/select\", {\r\n                                    // fetch(\"http://localhost:5000/select\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        sql: 'SELECT * FROM data_tbl where pos = 8'\r\n                                    })\r\n                                })\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(data => {\r\n                                        console.log(JSON.stringify(data));\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'q': {\r\n                                fetch(\"https://vh-sqlite.glitch.me/update\", {\r\n                                // fetch(\"http://localhost:5000/update\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        \r\n                                        sql: `insert into data_tbl(pos, value) values(${focusIndex}, '${JSON.stringify(detail)}')`\r\n                                    })\r\n                                })\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.BACKING) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        // case 'ArrowRight':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.molecule?.rootIndex + 1 });\r\n                        //     break;\r\n                        // case 'ArrowLeft':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        // case '1':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const backing = state.noteState.backingPaletteState;\r\n                    const isCorrect = backing.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.play(false);\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                        // JSON取得（開発用）\r\n                        case 'z': {\r\n                            const script: BackingScript = {\r\n                                isUsePedal: backing.isUsePedal,\r\n                                layers: backing.layers,\r\n                                useChannels: backing.useChannels\r\n                            };\r\n                            alert(JSON.stringify(script));\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'f':\r\n                    dispatcher.score.addModulationElement();\r\n                    break;\r\n                case 'w': {\r\n                    const detail = selectedData.detail as DetailChord;\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            molecule: detail.molecule,\r\n                            denominator: detail.denominator,\r\n                            // rootIndex: detail.molecule?.rootIndex,\r\n                            // isFlat: detail.isFlat,\r\n                            symbolKey: detail.symbolKey,\r\n                            sustain: detail.sustain,\r\n                        } as ChordPaletteState\r\n                    });\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\n\n// import Tone from 'lib/Tone.min.js';\n// import Tone from \"react-tone\";\nimport * as Tone from \"tone\";\n\nimport './desty.css';\nimport './App.css';\nimport MainFrame from 'contents/MainFrame';\n\nfunction App() {\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <MainFrame />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}