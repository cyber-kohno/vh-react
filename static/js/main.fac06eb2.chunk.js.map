{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/common/utils.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentElementInfo.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/common/Styles.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/footer/timing/FooterTiming.tsx","contents/systab/score/contTabs/note/footer/ensemble/FooterEnsemble.tsx","contents/systab/score/contTabs/note/footer/NoteFooter.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/floatwnd/section/SectionEditor.tsx","contents/systab/score/contTabs/note/floatwnd/setting/SettingEditor.tsx","contents/systab/score/contTabs/note/floatwnd/change/ChangeEditor.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/backing/ScoreContBackingTab.tsx","contents/systab/score/contTabs/source/ScoreContSourceTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/login/LoginFrame.tsx","contents/user/UserPlate.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSignatures","KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","id","groupName","tabElements","map","tab","index","disable","undefined","selectTabIndex","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","SymbolType","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","ChangeType","ModulateRelation","TempoRelation","TypeNoteElement","SYMBOL_PARAMS_LIST","key","MAJOR","category","TRIAD","MINOR","SUS4","DIM","AUG","MAJ7","TETRAD7TH","SEVENTH","MIN7","MINOR_MAJ7","ADD9","TETRAD9TH","MINOR_ADD9","SIXTH_9TH","OTHER","MINOR_MINUS5","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","ActionType","initialState","login","isLogin","scoreTabIndex","noteData","scoreName","chordMode","SCALE","dataList","noteState","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","defaultSustain","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","molecule","rootIndex","isFlat","denominator","sustain","headAdjust","tailAdjust","backingPaletteState","backingThreads","reffers","sampler","Sampler","toDestination","soundUseList","Array","reducer","state","action","type","payload","SET_LOGIN","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","keyIndex","scale","Fixed","label","labelName","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","data","SET_DATA_LIST","SET_NOTE_STATE","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","editorState","useChannels","BACKING_TOGGLE_MATRIX","sideIndex","lenIndex","channelIndex","divIndex","script","layers","table","isUse","getSymbolParams","symbol","forEach","getAdjustSusValue","value","ret","toString","getChordRoot","rootInfo","sendQueryRequestToAPI","queryType","sql","fetch","API_DOMAIN","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","applyOnChord","molRootIndex","denRootIndex","denInterval","fixedIntervals","fixedStruct","isAdded","intervals","cur","i","length","struct","getDegreeRoot","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeMolRoot","degreeDenRoot","chordMolRoot","init","chordDenRoot","symbolName","isDiatonic","degreeName","chordName","getSymbolName","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Change","changeInnerJsx","changeType","MODULATE","relation","modulateRelation","isValuable","DOMINANT","KEY","oldKeyIndex","oldIsMinor","newKeyIndex","newIsMinor","domminantValue","keyAdjust","RELATIVE","PARALLEL","TEMPO","tempoRelation","oldTempo","newTempo","DIFF","tempoDiff","RATE","tempoRate","floor","ABSOLUTE","tempoAbsolute","BEAT","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","BACKING","some","setSelectedList","selectorElementClickAction","onContextMenu","e","INIT_PALETTE","style","left","clientX","top","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","setNoteData","callChordSelector","callBackingEditor","setCriteria","callSectionEditor","callChangeEditor","deleteCurElement","menuList","ChordSelector","canvasRef","canvas","width","height","updatePianoView","ctx","getContext","list","denIndex","fillStyle","fillRect","WIDTH","posX","keyboadList","color","isBlack","HEIGHT","keyboad","strokeRect","save","chordList","symbolList","beatList","operationJsx","isDirect","degS","degF","chdS","chdF","isHalf","isDenominator","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getAdjustOprJsx","offset","cls","callback","Adjuster","CurrentElementInfo","inner","root","degreeRoot","chordRoot","baseBlockJsx","buildInfoBlock","title","chordBlockJsx","String","structList","len","interval","sound","sectionBlockJsx","titleLabel","dataRecordList","jsxList","BackingOperation","paletteState","curSideScript","selectedLenIndex","curLenBean","lens","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","buttonList","button","channelRowSize","onChange","newValue","parseInt","target","diff","layer","record","j","abs","setPaletteState","val","isDisabled","getActiveState","curLayerIndex","lineIndex","back","curCellRange","getCellRange","backLenBean","k","backRange","isOverlapJudge","range1","range2","head","getLenSize","size","NotesMatrix","channelList","matrixLayersJsx","l","linesJsx","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","curLayer","sustainLength","measureInner","measureLength","cnt","isLimit","limitLeft","limitJsx","BackingTable","testPlaySound","channelJsxList","blankAdjust","curIndex","isExist","soundFullName","volumeList","volume","setLayerIndex","isUsePedal","setUsePedal","styled","div","backgroundColor","padding","margin","textAlign","defaultProps","opacity","_Text","span","fontSize","fontWeight","StructMatrix","structTable","sort","a","b","octave","structIndex","overVoicingList","structs","cols","soundName","soundIndex","isNone","channel","isOverVoicing","setUseChannels","BackingContext","createContext","getChannelList","BackingEditor","BACKING_PALETTE","triggerAttack","setTimeout","triggerRelease","operation","isCorrect","play","setCurBackingScript","Provider","FIXED_BLANK","getAdjustCls","FooterTiming","dataCount","scrollRef","blockJsxList","setBlockJsxList","measureJsxList","setMeasureJsxList","total","setTotal","chordDetail","isCur","isNear","scrollTo","behavior","totalWidth","FooterEnsemble","NoteFooter","InitEditor","setTempo","setRythm","setKey","setScale","setInitParam","getItemSelector","optionsJsx","display","min","max","Number","item","SectionEditor","setLabelName","section","setSectionParam","SECTION_PALETTE","SettingEditor","SETTING_EDITOR","defsus","sustainJsxList","setNoteState","getItemSelectorJsx","getItemNumberRangeJsx","ChangeEditor","setChangeType","setModulateRelation","setDomminantValue","setKeyAdjust","setTempoRelation","setTempoRate","setTempoDiff","setTempoAbsolute","beat","setBeat","isInputOK","setInputOK","checkInput","itemsJsxList","concat","Object","values","str","change","applyChangeParams","CHANGE_PALETTE","EditModeBorder","PREVIEW","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","console","log","totalBeat","totalMsec","lastBar","bar","isModalBlind","ScoreContLiblaryTab","focus","setFocus","message","setMessage","recordList","setRecordList","titleList","setTitleList","isEdit","setEdit","setTitle","setChordMode","isLoad","setLoad","reload","initFocus","then","response","json","results","catch","error","chord_mode","createButton","createInfoRecored","innerJsx","isDisplayMsg","selectedRecord","result","alert","data_cnt","parse","ScoreContBackingTab","ScoreContSourceTab","ScoreTab","Dispatcher","dispatchBase","setLoginParams","apllyFlasah","apllyFlashCur","apllyFlashList","releaseCriteria","getInitElement","setEditMode","addNoteElement","addChangeElement","side","LEFT","RIGHT","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","backingState","selectedChannelIndex","line","updateLenIndex","getCurLenIndex","setChannelRowSize","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","use","setCorrect","changeLayerIndex","baseLayers","channelCount","lensSplitCount","baseTable","y","x","count","cell","isScore","threads","totalTime","curTime","Date","getTime","next","editor","barMs","boxMs","adjustOverlap","headMs","lenValue","replace","curLenMs","notes","tail","lag","this","LoginTypeSwitch","loginType","curLoginType","setLoginType","resetError","TextForm","stateSetter","strLen","stateValue","isHanEisu","isMask","match","LoginFrame","userName","setUserName","password","setPassword","passConfirm","setPassConfirm","isError","setError","isLoading","setLoading","enterDisable","UserPlate","MainFrame","useReducer","actionType","tabIndex","onKeyDown","selectedData","diatonicChord","baseBacking","thr","clearInterval","releaseAll","KeyboardShortCutAction","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fac06eb2.chunk.js","sourcesContent":["import { ChangeType } from \"contents/redux/store\";\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'C#/Db', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport enum TimeSignatures {\r\n    BEAT_4ON4 = '4/4',\r\n    BEAT_2ON4 = '2/4',\r\n    BEAT_3ON4 = '3/4',\r\n    BEAT_6ON8 = '6/8',\r\n    BEAT_12ON8 = '12/8',\r\n}\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\n\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES: string[] = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n}\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD9TH,\r\n    OTHER,\r\n}\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    category: SymbolType;\r\n    name: string;\r\n    struct: string[];\r\n    intervals: number[];\r\n}\r\n\r\n\r\n// export const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n//     { key: SymbolKey.MAJOR, category: SymbolType.TRIAD, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n//     { key: SymbolKey.MINOR, category: SymbolType.TRIAD, sortNo: 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n//     { key: SymbolKey.SUS4, category: SymbolType.TRIAD, sortNo: 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n//     { key: SymbolKey.DIM, category: SymbolType.TRIAD, sortNo: 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n//     { key: SymbolKey.AUG, category: SymbolType.TRIAD, sortNo: 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n//     { key: SymbolKey.MAJ7, category: SymbolType.TETRAD7TH, sortNo: 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n//     { key: SymbolKey.SEVENTH, category: SymbolType.TETRAD7TH, sortNo: 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n//     { key: SymbolKey.MIN7, category: SymbolType.TETRAD7TH, sortNo: 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n//     { key: SymbolKey.MINOR_MAJ7, category: SymbolType.TETRAD7TH, sortNo: 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n//     { key: SymbolKey.ADD9, category: SymbolType.TETRAD9TH, sortNo: 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n//     { key: SymbolKey.MINOR_ADD9, category: SymbolType.TETRAD9TH, sortNo: 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n//     { key: SymbolKey.SIXTH_9TH, category: SymbolType.OTHER, sortNo: 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n//     { key: SymbolKey.MINOR_MINUS5, category: SymbolType.TRIAD, sortNo: 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n// ];\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, category: SymbolType.TRIAD, name: \"\", \"struct\": ['p1', 'M3', 'p5'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, category: SymbolType.TRIAD, name: \"m\", \"struct\": ['p1', 'm3', 'p5'], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, category: SymbolType.TRIAD, name: \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, category: SymbolType.TRIAD, name: \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, category: SymbolType.TRIAD, name: \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, category: SymbolType.TETRAD7TH, name: \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, category: SymbolType.TETRAD7TH, name: \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, category: SymbolType.TETRAD7TH, name: \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, category: SymbolType.TETRAD7TH, name: \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, category: SymbolType.TETRAD9TH, name: \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, category: SymbolType.TETRAD9TH, name: \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, category: SymbolType.OTHER, name: \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, category: SymbolType.TRIAD, name: \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"intervals\": [0, 3, 6] },\r\n];\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n];\r\n\r\nexport const getChangeTypeLabel = (changeType: ChangeType) => {\r\n    switch(changeType) {\r\n        case ChangeType.MODULATE: return 'MODULATE';\r\n        case ChangeType.TEMPO: return 'TEMPO';\r\n        case ChangeType.BEAT: return 'BEAT';\r\n    }\r\n}\r\n\r\nexport const API_DOMAIN = 'https://vh-sqlite.glitch.me';\r\n// export const API_DOMAIN = 'http://localhost:5000';","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // const [tabList, setTabList] = useState<JSX.Element[]>([]);\r\n    // const [contList, setContList] = useState<JSX.Element[]>([]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const tabList: JSX.Element[] = [];\r\n    //     const contList: JSX.Element[] = [];\r\n    //     props.tabElements.forEach((tab, index) => {\r\n    //         tabList.push(\r\n    //             <TabLabel\r\n    //                 key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n    //                 selectTab={() => selectTabIndex(index)}\r\n    //             />)\r\n    //             ;\r\n    //         contList.push(\r\n    //             <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n    //         );\r\n    //     });\r\n    //     setTabList(tabList);\r\n    //     setContList(contList);\r\n    //     console.log('create TabbedPane');\r\n    // }, [activeNo]);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    return (\r\n        <div className={[\r\n            'tab-cont',\r\n            props.isActive ? '' : 'hidden'].join(' ')}\r\n        >\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","import { SymbolKey, SYMBOL_PARAMS_LIST, TimeSignatures } from 'contents/common/define'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    login: LoginParams;\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    soundUseList: number[];\r\n}\r\n\r\nexport type LoginParams = {\r\n    isLogin: boolean,\r\n    id: number,\r\n    name: string\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\n export type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    changePalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE,\r\n    CONTEXT_MENU,\r\n    CHORD_PALETTE,\r\n    SECTION_PALETTE,\r\n    CHANGE_PALETTE,\r\n    INIT_PALETTE,\r\n    BACKING_PALETTE,\r\n    SETTING_EDITOR,\r\n}\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    // rootIndex: number;\r\n    // isFlat: false;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain, Adjuster\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    channelRowSize: number;\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    defaultSustain: number;\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: null | BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    BACKING,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    labelName: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    molecule: Key12Info | null;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type Key12Info = {\r\n    rootIndex: number;\r\n    isFlat: boolean;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailChange = {\r\n    changeType: null | ChangeType;\r\n    modulateRelation: null | ModulateRelation;\r\n    domminantValue: number;\r\n    keyAdjust: number;\r\n    tempoRelation: null | TempoRelation;\r\n    tempoDiff: number;\r\n    tempoRate: number;\r\n    tempoAbsolute: number;\r\n    beat: null | TimeSignatures;\r\n}\r\n\r\nexport enum ChangeType {\r\n    MODULATE = 'Modulate',\r\n    TEMPO = 'Tempo',\r\n    BEAT = 'Beat'\r\n}\r\n\r\n// export type ChangeModulation = {\r\n//     relation: ModulateRelation;\r\n//     value: number;\r\n// }\r\n\r\nexport enum ModulateRelation {\r\n    DOMINANT = 'Domminant',\r\n    PARALLEL = 'Parallel',\r\n    RELATIVE = 'Relative',\r\n    KEY = 'Key',\r\n}\r\n\r\n// export type ChangeBeat = {\r\n//     value: number;\r\n// }\r\n\r\n// export type ChangeTempo = {\r\n//     relation: TempoRelation;\r\n//     value: number;\r\n// }\r\n\r\nexport enum TempoRelation {\r\n    DIFF = 'Diff',\r\n    RATE = 'Rate',\r\n    ABSOLUTE = 'Absolute'\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailChange | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Change = 'Change',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    login: {\r\n        isLogin: false,\r\n        id: -1,\r\n        name: ''\r\n    },\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', chordMode: CHORD_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        defaultSustain: 2,\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            // rootIndex: 0,\r\n            // isFlat: false,\r\n            molecule: {rootIndex: 0, isFlat: false},\r\n            denominator: null,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4,\r\n            headAdjust: 0,\r\n            tailAdjust: 0\r\n        },\r\n        backingPaletteState: null,\r\n        // {\r\n        //     channelRowSize: 1,\r\n        //     useChannels: [],\r\n        //     isUsePedal: false,\r\n        //     sideIndex: 0,\r\n        //     selectedLenIndex: 0,\r\n        //     selectedChannelIndex: -1,\r\n        //     layers: [],\r\n        //     isCorrect: true\r\n        // },\r\n        backingThreads: []\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initSampler(),\r\n    soundUseList: new Array(88)\r\n};\r\n\r\nfunction initSampler() {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache, BackingEditorState } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_LOGIN,\r\n    SELECT_SCORETAB,\r\n    ADD_SECTION,\r\n    SET_DEGREE_INDEX,\r\n    SET_SYMBOL_KEY,\r\n    DETAIL_PARAMS_SETTER,\r\n    GET_ELEMENT_REFFER,\r\n    INIT_DEFAULT_ELEMENTS,\r\n    SELECT_NOTE_ELEMENT,\r\n    GET_REFFER,\r\n    GET_REFFER_CONTEXT,\r\n    GET_REFFER_CHORD_PALETTE,\r\n    GET_REFFER_SECTION_PALETTE,\r\n    GET_REFFER_BACKING_PALETTE,\r\n    FLOATWND_STATE,\r\n    CHORD_PALETTE_SETTER,\r\n    SET_NOTE_DATA,\r\n    SET_DATA_LIST,\r\n    SET_NOTE_STATE,\r\n    INIT_BACKING_PALETTE,\r\n    SET_USE_CHANNELS,\r\n    BACKING_TOGGLE_MATRIX\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_LOGIN:\r\n            return { ...state, login: payload.login };\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            if(detail.molecule == null) {\r\n                detail.molecule = {rootIndex: payload.degreeIndex, isFlat: false};\r\n            } else {\r\n                detail.molecule.rootIndex = payload.degreeIndex;\r\n            }\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 80,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                labelName: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const editorState = state.noteState.backingPaletteState as BackingEditorState;\r\n            // const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            // const script: BackingLayer[] = new Array(2);\r\n            // for (let i = 0; i < 2; i++) {\r\n            //     const channelCount = backingPaletteState.useChannels.length;\r\n            //     const lensSplitCount = baseScript[i].lens.length;\r\n            //     const baseTable = baseScript[i].table;\r\n            //     const table: boolean[][][] = new Array(channelCount);\r\n\r\n            //     for (let y = 0; y < channelCount; y++) {\r\n            //         if (y < baseTable.length) {\r\n            //             table[y] = baseTable[y];\r\n            //         } else {\r\n            //             table[y] = new Array(lensSplitCount);\r\n            //             for (let x = 0; x < lensSplitCount; x++) {\r\n            //                 table[y][x] = new Array(1);\r\n            //                 table[y][x][0] = false;\r\n            //             }\r\n            //         }\r\n            //     }\r\n            //     script[i] = {\r\n            //         ...baseScript[i],\r\n            //         table,\r\n            //     };\r\n            // }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...editorState,\r\n                        useChannels,\r\n                        // layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const editorState = state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = editorState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...editorState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { Key12Info } from \"contents/redux/store\";\r\nimport { API_DOMAIN, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n\r\nexport const getAdjustSusValue = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = '+' + value;\r\n        else ret = value.toString();\r\n    }\r\n    return ret;\r\n}\r\n\r\n/**　コードネームを返す */\r\nexport const getChordRoot = (rootInfo: Key12Info | null, keyIndex: number): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n        name = list[(rootInfo.rootIndex + keyIndex) % 12];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　シンボルを返す */\r\nexport const getSymbolName = (symbolKey: SymbolKey): string => {\r\n    let name = '';\r\n    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n        if (symbol.key == symbolKey) {\r\n            name = symbol.name;\r\n        }\r\n    });\r\n    return name;\r\n}\r\n\r\nexport const createQueryRequestInit = (sql: string): RequestInit => {\r\n    return {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ sql })\r\n    }\r\n}\r\n\r\nexport const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n    return fetch(API_DOMAIN + '/' + queryType,\r\n        createQueryRequestInit(sql)\r\n    );\r\n}\r\n\r\nexport const applyOnChord = (symbol: SymbolParams, molRootIndex: number, denRootIndex: number) => {\r\n\r\n    // 分母とコードルートの差分を算出\r\n    let denInterval = denRootIndex - molRootIndex;\r\n    if (denInterval < 0) {\r\n        denInterval += 12;\r\n    }\r\n    const fixedIntervals: number[] = [];\r\n    const fixedStruct: string[] = [];\r\n    let isAdded = false;\r\n    symbol.intervals.forEach((cur, i) => {\r\n        if (i < symbol.intervals.length) {\r\n            // const next = symbol.intervals[i + 1];\r\n            // if(cur <= denInterval && denInterval < next) {\r\n            if (!isAdded && denInterval < cur) {\r\n                fixedIntervals.push(denInterval);\r\n                fixedStruct.push('den');\r\n                isAdded = true;\r\n            }\r\n            if (denInterval != cur) {\r\n                fixedIntervals.push(cur);\r\n                fixedStruct.push(symbol.struct[i]);\r\n            }\r\n        }\r\n    });\r\n    if (!isAdded) {\r\n        fixedIntervals.push(denInterval);\r\n        fixedStruct.push('den');\r\n    }\r\n    symbol.intervals = fixedIntervals;\r\n    symbol.struct = fixedStruct;\r\n\r\n}","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, getChangeTypeLabel, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getChordRoot, getSymbolName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailChange, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress, Key12Info, ChangeType, ModulateRelation, TempoRelation } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Key: </span>\r\n                        {/* <span>{detail.key}</span> */}\r\n                        <span>{\r\n                            detail.scale == SCALE_LIST[0] ?\r\n                                KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                        }</span>\r\n                    </div>\r\n                );\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Scale: </span>\r\n                        <span>{detail.scale}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            const degreeMolRoot = getDegreeRoot(detail.molecule);\r\n            const degreeDenRoot = getDegreeRoot(detail.denominator);\r\n            const chordMolRoot = getChordRoot(detail.molecule, cache.init.keyIndex);\r\n            const chordDenRoot = getChordRoot(detail.denominator, cache.init.keyIndex);\r\n            let symbolName = '';\r\n            let isDiatonic = false;\r\n            let degreeName = 'blank';\r\n            let chordName = '-';\r\n            if (degreeMolRoot != null) {\r\n                symbolName = getSymbolName(detail.symbolKey);\r\n                isDiatonic = DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeMolRoot + symbolName);\r\n                degreeName = `${degreeMolRoot}${symbolName}${degreeDenRoot == null ? '' : '/' + degreeDenRoot}`;\r\n                chordName = `${chordMolRoot}${symbolName}${chordDenRoot == null ? '' : '/' + chordDenRoot}`;\r\n            }\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.molecule == null ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        // ダイレクトモード時は非表示\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}>\r\n                        <span>{degreeName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.labelName}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Change: {\r\n            const detail = props.noteElement.detail as DetailChange;\r\n            let changeInnerJsx = <></>;\r\n            switch (detail.changeType) {\r\n                case null: {\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>No setting</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>***</span>]\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.MODULATE: {\r\n                    const relation = detail.modulateRelation === null ? 'None' : detail.modulateRelation.toString();\r\n                    const isValuable = detail.modulateRelation === ModulateRelation.DOMINANT || detail.modulateRelation === ModulateRelation.KEY;\r\n                    let value = 0;\r\n                    const oldKeyIndex = cache.init.keyIndex;\r\n                    const oldIsMinor = cache.init.scale == 'minor';\r\n                    let newKeyIndex = oldKeyIndex;\r\n                    let newIsMinor = oldIsMinor;\r\n                    switch (detail.modulateRelation) {\r\n                        case ModulateRelation.DOMINANT: {\r\n                            value = detail.domminantValue;\r\n                            newKeyIndex = (24 + newKeyIndex + value * 7) % 12;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.KEY: {\r\n                            value = detail.keyAdjust;\r\n                            newKeyIndex = (12 + newKeyIndex + value) % 12;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.RELATIVE: {\r\n                            if (!oldIsMinor) {\r\n                                newKeyIndex = (12 + newKeyIndex - 3) % 12;\r\n                            } else {\r\n                                newKeyIndex = (12 + newKeyIndex + 3) % 12;\r\n                            }\r\n                            newIsMinor = !newIsMinor;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.PARALLEL: {\r\n                            newIsMinor = !newIsMinor;\r\n                        }\r\n                            break;\r\n                    }\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>{relation + (isValuable ? ': ' : '')}</span>\r\n                                {isValuable ? (<span>{value}</span>) : <></>}\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>{`${KEY12_SHARP_LIST[oldKeyIndex]}${oldIsMinor ? 'm' : ''} → ${KEY12_SHARP_LIST[newKeyIndex]}${newIsMinor ? 'm' : ''}`}</span>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.TEMPO: {\r\n                    const relation = detail.tempoRelation === null ? 'None' : detail.tempoRelation.toString();\r\n                    let value = 0;\r\n                    const oldTempo = cache.init.tempo;\r\n                    let newTempo = oldTempo;\r\n                    switch (detail.tempoRelation) {\r\n                        case TempoRelation.DIFF: {\r\n                            value = detail.tempoDiff;\r\n                            newTempo += detail.tempoDiff;\r\n                        }\r\n                            break;\r\n                        case TempoRelation.RATE: {\r\n                            value = detail.tempoRate;\r\n                            newTempo = Math.floor(newTempo * detail.tempoRate);\r\n                        }\r\n                            break;\r\n                        case TempoRelation.ABSOLUTE: {\r\n                            value = detail.tempoAbsolute;\r\n                            newTempo = detail.tempoAbsolute;\r\n                        }\r\n                            break;\r\n                    }\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>{relation + ': '}</span>\r\n                                <span>{value}</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>{`${oldTempo} → ${newTempo}`}</span>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.BEAT: {\r\n                    changeInnerJsx = (\r\n                        <>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n            }\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n            }\r\n            return (\r\n                <>\r\n                    <div className=\"change-type\">\r\n                        {/* <span>{detail.changeType === null ? '' : getChangeTypeLabel(detail.changeType)}</span> */}\r\n                        <span>{detail.changeType === null ? 'Change' : detail.changeType.toString()}</span>\r\n                    </div>\r\n                    {changeInnerJsx}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**　ディグリーネームを返す */\r\nconst getDegreeRoot = (rootInfo: Key12Info | null): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        name = list[rootInfo.rootIndex];\r\n    }\r\n    return name;\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailChange, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Change: return 'detail-change';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.BACKING) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.molecule != null;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord,\r\n                            TypeNoteElement.Change,\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else {\r\n                            selectorElementClickAction();\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init:\r\n                                    {\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                    }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                case TypeNoteElement.Change:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { SYMBOL_PARAMS_LIST, SYMBOL_TYPE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { ChordPaletteState, DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        molecule: {rootIndex: 0, isFlat: false},\r\n                        denominator: null,\r\n                        symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                        sustain: state.noteState.defaultSustain,\r\n                    } as ChordPaletteState\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        const noteData = state.noteData;\r\n                        const detail = noteData.dataList[state.noteState.focusIndex].detail as DetailChord;\r\n                        detail.molecule = null;\r\n                        detail.denominator = null;\r\n                        dispatcher.score.setNoteData(noteData);\r\n                        // dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callChordSelector();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'COPY BACKING', keyName: 'X', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.setCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callSectionEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Change: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHANGE', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callChangeEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.deleteCurElement();\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: 'call' | 'order';\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE, ChordPaletteState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordSelector.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n        const canvas: any = canvasRef.current;\r\n        canvas.width = 590;\r\n        canvas.height = 66;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n            updatePianoView(\r\n                editorState.molecule.rootIndex,\r\n                editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                editorState.symbolKey\r\n            );\r\n        }\r\n    }, [editorState, state.noteState.floatwndState]);\r\n\r\n    const updatePianoView = (molRootIndex: number, denRootIndex: number, symbolKey: SymbolKey) => {\r\n        const ctx = (canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        const keyIndex = (cache.init.keyIndex + molRootIndex) % 12;\r\n        const intervalList = (getSymbolParams(symbolKey) as SymbolParams).intervals;\r\n        const list = intervalList.map((value) => keyIndex + value);\r\n        let denIndex = -1;\r\n        if (denRootIndex != -1) {\r\n            denIndex = cache.init.keyIndex + denRootIndex;\r\n        }\r\n        ctx.fillStyle = '#008';\r\n        ctx.fillRect(0, 0, 594, 70);\r\n        const WIDTH = 34;\r\n        const HEIGHT = 60;\r\n        const BLACK_RATE_W = 0.5;\r\n        const BLACK_RATE_H = 0.6;\r\n        const MARGIN_W = 1;\r\n        const START_ADJUST = 1;\r\n        let posX = 0;\r\n        const keyboadList: {\r\n            posX: number;\r\n            fillStyle: string;\r\n            width: number;\r\n            height: number;\r\n            isBlack: boolean;\r\n        }[] = [];\r\n        for (let i = 0; i < 27; i++) {\r\n            let color = '#eee';\r\n            let width = WIDTH;\r\n            let height = HEIGHT;\r\n            const isBlack = [1, 3, 6, 8, 10].includes(i % 12);\r\n            if (isBlack) {\r\n                color = '#111';\r\n                width = WIDTH * BLACK_RATE_W;\r\n                height = HEIGHT * BLACK_RATE_H;\r\n            }\r\n            if (list.includes(i)) {\r\n                color = '#fa0';\r\n            }\r\n            if (denIndex == i) {\r\n                color = '#ff0000';\r\n            }\r\n            keyboadList.push({ posX: 15 + posX, fillStyle: color, width, height, isBlack });\r\n\r\n            switch (i % 12) {\r\n                case 0: case 2: case 5: case 7: case 9:\r\n                    //次が黒鍵\r\n                    posX += WIDTH - WIDTH * BLACK_RATE_W / 2;\r\n                    break;\r\n                case 1: case 3: case 6: case 8: case 10:\r\n                    //黒鍵\r\n                    posX += WIDTH * BLACK_RATE_W / 2 + MARGIN_W;\r\n                    break;\r\n                default:\r\n                    //次が白鍵\r\n                    posX += WIDTH + MARGIN_W;\r\n            }\r\n        }\r\n        keyboadList.forEach((keyboad) => {\r\n            if (!keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        keyboadList.forEach((keyboad) => {\r\n            if (keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n                ctx.fillStyle = '#f00';\r\n                ctx.strokeRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        ctx.save();\r\n    }\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operationJsx: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = cache.init.keyIndex;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.molecule.rootIndex == i;\r\n            const isDenominator = (editorState.denominator == null ? -1 : editorState.denominator.rootIndex) == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={[\r\n                                isSelected ? 'active' : '',\r\n                                isDenominator ? 'denominator' : ''\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                const denominator = !isDenominator ? editorState.denominator : null;\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     i,\r\n                                //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                if (isSelected) return;\r\n                                const denominator = (!isDenominator ? { rootIndex: i, isFlat: false } : null);\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     editorState.molecule.rootIndex,\r\n                                //     i,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && !editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && !editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && !editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: false } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: true }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: true } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                        // updatePianoView(\r\n                        //     editorState.molecule.rootIndex,\r\n                        //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                        //     symbol.key\r\n                        // );\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operationJsx = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    const getAdjustOprJsx = (type: 'h' | 't', offset: number): JSX.Element => {\r\n        let [label, cls, isActive, callback] = type == 'h' ?\r\n            ['h', 'head', editorState.headAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, headAdjust: offset\r\n                    }\r\n                })] :\r\n            ['t', 'tail', editorState.tailAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, tailAdjust: offset\r\n                    }\r\n                })];\r\n        if (offset >= 0) {\r\n            label += (offset > 0 ? '+' : '±');\r\n        }\r\n        return (\r\n            <div\r\n                className={[\r\n                    cls,\r\n                    isActive ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label + offset}</span>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Direct', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'piano-view'}>\r\n                <canvas ref={canvasRef} />\r\n            </div>\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className={'adjuster' + (editorState.selectedLine == ChordPaletteLine.Adjuster ? ' active' : '')}>\r\n                {getAdjustOprJsx('h', -0.5)}\r\n                {getAdjustOprJsx('h', -0.25)}\r\n                {getAdjustOprJsx('h', 0)}\r\n                {getAdjustOprJsx('h', 0.25)}\r\n                {getAdjustOprJsx('h', 0.5)}\r\n                {getAdjustOprJsx('t', -0.5)}\r\n                {getAdjustOprJsx('t', -0.25)}\r\n                {getAdjustOprJsx('t', 0)}\r\n                {getAdjustOprJsx('t', 0.25)}\r\n                {getAdjustOprJsx('t', 0.5)}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operationJsx}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChordSelector;","\r\nimport { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SCALE_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getAdjustSusValue, getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentElementInfo.css';\r\n\r\ntype DataRecord = {\r\n    title: string;\r\n    value: string;\r\n    disable: boolean;\r\n}\r\n\r\nconst CurrentElementInfo = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const data = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let inner: JSX.Element = <></>;\r\n    switch (data.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = data.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.molecule != null) {\r\n                const rootIndex = detail.molecule.rootIndex;\r\n                const degreeRoot = DEGREE12_SHARP_LIST[rootIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[rootIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.molecule != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const baseBlockJsx = buildInfoBlock('Base', [\r\n                { title: 'Tempo', value: '' + cache.init.tempo, disable: false },\r\n                { title: 'Beat', value: cache.init.rythm, disable: false },\r\n                { title: 'Key', value: KEY12_SHARP_LIST[cache.init.keyIndex], disable: false },\r\n                { title: 'Scale', value: cache.init.scale, disable: false },\r\n            ]);\r\n\r\n            const chordBlockJsx = buildInfoBlock('Chord', [\r\n                { title: 'Root', value: root, disable: root == '-' },\r\n                { title: 'Symbol', value: symbolName, disable: symbolName == '-' },\r\n                { title: 'On chord', value: '-', disable: true },\r\n                { title: 'Sustain', value: String(detail.sustain), disable: false },\r\n                { title: 'Adjsut-H', value: getAdjustSusValue(detail.headAdjust), disable: detail.headAdjust == 0 },\r\n                { title: 'Adjsut-T', value: getAdjustSusValue(detail.tailAdjust), disable: detail.tailAdjust == 0 },\r\n            ]);\r\n\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {baseBlockJsx}\r\n                        {chordBlockJsx}\r\n                        {(() => {\r\n\r\n                            if (detail.molecule != null) {\r\n                                const structList: JSX.Element[] = [];\r\n                                const symbol = getSymbolParams(detail.symbolKey);\r\n                                const list = symbol?.intervals;\r\n                                const len = list?.length as number;\r\n                                for (let i = 0; i < 7; i++) {\r\n                                    if (i < len) {\r\n                                        const interval = symbol?.intervals[i] as number;\r\n                                        const struct = symbol?.struct[i];\r\n                                        const sound = KEY12_SHARP_LIST[(detail.molecule.rootIndex + interval) % 12];\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record\">\r\n                                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                                <div className=\"sound\"><span>{sound}</span></div>\r\n                                            </div>\r\n                                        );\r\n                                    } else {\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record disable\">\r\n                                                <div className=\"interval\"></div>\r\n                                                <div className=\"struct\"></div>\r\n                                                <div className=\"sound\"></div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return (<>\r\n                                    <div className=\"title\">\r\n                                        <span>Struct</span>\r\n                                    </div>\r\n                                    <div className=\"symbol-struct\">\r\n                                        {structList}\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<></>);\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        case TypeNoteElement.Section: {\r\n            const detail = data.detail as DetailSection;\r\n\r\n            const sectionBlockJsx = buildInfoBlock('Section', [\r\n                { title: 'label', value: detail.labelName, disable: false },\r\n                { title: 'box count', value: '-', disable: true },\r\n                { title: 'total bar', value: '-', disable: true },\r\n                { title: 'total time', value: '-', disable: true }\r\n            ]);\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {sectionBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {inner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentElementInfo;\r\n\r\n\r\nconst buildInfoBlock = (titleLabel: string, dataRecordList: DataRecord[]): JSX.Element => {\r\n    const jsxList: JSX.Element[] = [];\r\n    dataRecordList.forEach((state, i) => {\r\n        jsxList.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (state.disable ? ' disable' : '')\r\n                }>\r\n                <div className=\"title\"><span>{state.title}:</span></div>\r\n                <div className=\"value\"><span>{state.value}</span></div>\r\n            </div>\r\n        );\r\n    });\r\n    return (<>\r\n        <div className=\"title\">\r\n            <span>{titleLabel}</span>\r\n        </div>\r\n        <div className=\"current-state\">\r\n            {jsxList}\r\n        </div>\r\n    </>);\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps = {\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        // {\r\n        //     label: 'all clear',\r\n        //     isActive: false,\r\n        //     isDisable: false,\r\n        //     callback: () => {\r\n        //         const backingState: BackingEditorState = {\r\n        //             useChannels: [],\r\n        //             isUsePedal: false,\r\n        //             sideIndex: 0,\r\n        //             selectedLenIndex: 0,\r\n        //             selectedChannelIndex: -1,\r\n        //             layers: [\r\n        //                 {\r\n        //                     lens: [{\r\n        //                         len: BACKING_LEN_TYPE.LEN4,\r\n        //                         isDiv3: false,\r\n        //                         isHalf: false\r\n        //                     }],\r\n        //                     side: BACKING_SIDE.LEFT,\r\n        //                     table: [],\r\n        //                     vels: [5]\r\n        //                 },\r\n        //                 {\r\n        //                     lens: [{\r\n        //                         len: BACKING_LEN_TYPE.LEN4,\r\n        //                         isDiv3: false,\r\n        //                         isHalf: false\r\n        //                     }],\r\n        //                     side: BACKING_SIDE.RIGHT,\r\n        //                     table: [],\r\n        //                     vels: [5]\r\n        //                 }\r\n        //             ],\r\n        //             isCorrect: true\r\n        //         };\r\n        //         dispatcher.initBackingPalette(backingState);\r\n        //     }\r\n        // }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <select\r\n            value={paletteState.channelRowSize}\r\n            onChange={(e) => {\r\n                const backing = props.paletteState;\r\n                const newValue = parseInt(e.target.value);\r\n                const diff = newValue - backing.channelRowSize;\r\n                const layers = backing.layers;\r\n                if (diff > 0) {\r\n                    layers.forEach((layer) => {\r\n                        for (let i = 0; i < diff; i++) {\r\n                            const record: boolean[][] = [];\r\n                            for (let j = 0; j < layer.lens.length; j++) {\r\n                                record.push([false]);\r\n                            }\r\n                            layer.table.splice(backing.channelRowSize, 0, record);\r\n                        }\r\n                    });\r\n                } else if (diff < 0) {\r\n                    layers.forEach((layer) => {\r\n                        layer.table.splice(newValue, Math.abs(diff));\r\n                    });\r\n                }\r\n                backing.channelRowSize = newValue;\r\n                dispatcher.backing.setPaletteState(props.paletteState);\r\n            }}>\r\n            {(() => {\r\n                const list: JSX.Element[] = [];\r\n                for (let i = 0; i < 12; i++) {\r\n                    const val = i + 1;\r\n                    const isDisabled = val < paletteState.channelRowSize;\r\n                    list.push(\r\n                        <option\r\n                            key={i}\r\n                            value={val}\r\n                            className={isDisabled ? 'del' : ''}\r\n                        >\r\n                            {val}\r\n                        </option>\r\n                    );\r\n                }\r\n                return list;\r\n            })()}\r\n        </select>\r\n        {buttonList}\r\n    </>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    // const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = paletteState.channelRowSize - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    // setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingEditorState, BackingLayer, BACKING_LEN_TYPE, DetailChord } from \"contents/redux/store\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    paletteState: BackingEditorState;\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curLayer = props.layer;\r\n    const paletteState = props.paletteState;\r\n    const sustainLength = (paletteState.sustain + paletteState.headAdjust + paletteState.tailAdjust) * 4;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 0;\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    // コードブロックの拍の方が長い場合は上書き\r\n    const isLimit = measureLength > sustainLength;\r\n    measureLength = (!isLimit ? sustainLength : measureLength);\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const pos = i + (paletteState.headAdjust * 4);\r\n        const getLen = () => {\r\n            if (pos % 2 == 0) {\r\n                if (pos % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLimit = false;//i == sustainLength;\r\n        measureInner.push(<div key={i} className={getLen() + (isLimit ? ' limit' : '')} />);\r\n    }\r\n\r\n    const limitLeft = sustainLength * 31;\r\n    const limitJsx = !isLimit ?\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: '5px'\r\n        }} className=\"safe\"></div>)\r\n        :\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: `${(measureLength - sustainLength) * 31}px`\r\n        }} className=\"over\"></div>);\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n            {limitJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam, DetailChord } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curLayer = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    // チャンネル数に対してボイシングが足りなければ、その数（高音）だけ空白を設定する\r\n    const blankAdjust = paletteState.channelRowSize - channelList.length;\r\n    for (let i = 0; i < paletteState.channelRowSize; i++) {\r\n        // ブランクの数だけボイシングから取得するインデックスを調整する\r\n        const curIndex = i - blankAdjust;\r\n        // チャンネルに音が設定済みかどうか\r\n        const isExist = curIndex >= 0;\r\n        let soundFullName = '-';\r\n        if (isExist) {\r\n            soundFullName = channelList[curIndex].soundFullName;\r\n        }\r\n        channelJsxList.push(\r\n            <div key={i}>\r\n                <div\r\n                    className={[\r\n                        'channel',\r\n                        !isExist ? 'blank' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (isExist) {\r\n                            testPlaySound(soundFullName)\r\n                        }\r\n                    }}\r\n                >\r\n                    <span>{soundFullName}</span>\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'opr',\r\n                        props.paletteState.channelRowSize == 1 ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        const backing = props.paletteState;\r\n                        const layers = backing.layers;\r\n                        const index = backing.channelRowSize - (i + 1);\r\n                        layers.forEach((layer) => {\r\n                            layer.table.splice(index, 1);\r\n                        });\r\n                        backing.channelRowSize = backing.channelRowSize - 1;\r\n                        dispatcher.backing.setPaletteState(props.paletteState);\r\n                    }}\r\n                >\r\n                    <span>-</span>\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'opr',\r\n                        props.paletteState.channelRowSize == 12 ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        const backing = props.paletteState;\r\n                        const layers = backing.layers;\r\n                        const index = backing.channelRowSize - (i + 1);\r\n                        layers.forEach((layer) => {\r\n                            const record: boolean[][] = [];\r\n                            for (let j = 0; j < layer.lens.length; j++) {\r\n                                record.push([false]);\r\n                            }\r\n                            layer.table.splice(index, 0, record);\r\n                        });\r\n                        backing.channelRowSize = backing.channelRowSize + 1;\r\n                        dispatcher.backing.setPaletteState(props.paletteState);\r\n                    }}\r\n                >\r\n                    <span>+</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curLayer.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"backing-table\">\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>R-Layer</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>L-Layer</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    paletteState={paletteState}\r\n                    layer={curLayer}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import styled from \"styled-components\";\r\n\r\n\r\nexport const _Record = styled.div<{\r\n    backgroundColor?: string,\r\n    textAlign?: string,\r\n    padding?: string,\r\n    margin?: string,\r\n}>`\r\n    display: inline-block;\r\n    background-color: ${(props) => props.backgroundColor};\r\n    width: 100%;\r\n    padding: ${(props) => props.padding};\r\n    margin: ${(props) => props.margin};\r\n    text-align: ${(props) => props.textAlign};\r\n    box-sizing: border-box;\r\n`;\r\n_Record.defaultProps = {\r\n    backgroundColor: 'inherit',\r\n    textAlign: 'inherit',\r\n    padding: '0',\r\n    margin: '0'\r\n}\r\n\r\nexport const _Hide = styled.div`\r\n    opacity: ${(props: { opacity: number }) => props.opacity}\r\n`;\r\n\r\nexport const _Text = styled.span<{\r\n    fontSize?: string,\r\n    color?: string,\r\n    fontWeight?: string\r\n}>`\r\n    font-size: ${(props)=> props.fontSize};\r\n    color: ${(props)=> props.color};\r\n    font-weight: ${(props)=> props.fontWeight};\r\n`;\r\n_Text.defaultProps = {\r\n    fontSize: 'inherit',\r\n    color: 'inherit',\r\n    fontWeight: 'inherit'\r\n}","import { SymbolParams } from \"contents/common/define\";\r\nimport { _Text } from \"contents/common/Styles\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\nexport const StructMatrix = (props: {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}) => {\r\n    const useChannels = props.paletteState.useChannels;\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    \r\n    // 音程の降順にソート\r\n    useChannels.sort((a, b) => {\r\n        return (a.octave * 12 + a.structIndex) - (b.octave * 12 + b.structIndex);\r\n    });\r\n    const overVoicingList = useChannels.slice(props.paletteState.channelRowSize);\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.structs.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const hasDom = props.structs.length - props.symbol.intervals.length == 1;\r\n            const index = hasDom ? i - 1 : i;\r\n            const interval = index == -1 ? -1 : props.symbol.intervals[index];\r\n            const relation = index == -1 ? 'dom' : props.symbol.struct[index];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: <_Text color=\"#000\">{soundName}</_Text></span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + interval + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = soundName + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                // const isLimit = props.paletteState.useChannels.length >= props.paletteState.channelRowSize && !isSelected;\r\n                const isLimit = useChannels.length >= 12 && !isSelected;\r\n\r\n                // if(isSelected) {\r\n                //     useChannels.forEach((channel, k) =>{\r\n                //         if (channel.octave == j && channel.structIndex == i) {\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n                let isOverVoicing = false;\r\n                overVoicingList.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isOverVoicing = true;\r\n                    }\r\n                });\r\n\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={[\r\n                            'col',\r\n                            (isNone || isLimit ? 'disable' : ''),\r\n                            (isSelected ? 'active' : ''),\r\n                            (isOverVoicing ? 'over' : '')\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { applyOnChord, getChordRoot, getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam, Key12Info } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\ntype BackingContextType = {\r\n    // isCorrect: boolean;\r\n    // setCorrect: (isCorrect: boolean) => void;\r\n    editorState: BackingEditorState;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [isCorrect, setCorrect] = useState(true);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     dispatcher.backing.setCorrect(isCorrect);\r\n    // }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState as BackingEditorState;\r\n    \r\n    // const foocusIndex = state.noteState.focusIndex;\r\n    // const detail = state.noteData.dataList[foocusIndex].detail as DetailChord;\r\n    // const cache = state.noteState.cacheList[foocusIndex];\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    // let rootIndex = (detail.molecule as Key12Info).rootIndex;\r\n    // const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n\r\n    const molecule = paletteState.molecule as Key12Info;\r\n    const denominator = paletteState.denominator;\r\n    const symbol: SymbolParams = { ...(getSymbolParams(paletteState.symbolKey) as SymbolParams) };\r\n    const sustain = paletteState.sustain;\r\n    const headAdjust = paletteState.headAdjust;\r\n    const tailAdjust = paletteState.tailAdjust;\r\n\r\n    const root = KEY12_SHARP_LIST[molecule.rootIndex];\r\n    let chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    //オンコードの追加\r\n    if (denominator != null) {\r\n\r\n        // コードネームの修正\r\n        chordName += `/${getChordRoot(denominator, 0)}`;\r\n        \r\n        // オンコードをシンボル情報に反映する\r\n        applyOnChord(symbol, molecule.rootIndex, denominator.rootIndex);\r\n    }\r\n    symbol.intervals.forEach((value) => {\r\n        // structs.push(KEY12_SHARP_LIST[(cache.init.keyIndex + rootIndex + value) % 12]);\r\n        structs.push(KEY12_SHARP_LIST[(molecule.rootIndex + value) % 12]);\r\n    });\r\n    \r\n    const channelList = getChannelList(paletteState.useChannels, molecule.rootIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.play(false);\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.setCurBackingScript();\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            editorState: paletteState\r\n            // isCorrect: isCorrect,\r\n            // setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                id=\"backing-palette\"\r\n                className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Category:</span></div>\r\n                        <div className=\"value\"><span>{symbol.category}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{sustain + headAdjust + tailAdjust}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={molecule.rootIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\nimport './FooterTiming.css';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from 'styled-components';\r\n\r\nconst MEM_WIDTH = 16;\r\nconst FIXED_BLANK = 100;\r\n\r\nconst StyleTest = styled.div`\r\n    font-size: 0;\r\n    display: inline-inline-block;\r\n`;\r\n\r\n\r\n\r\nconst FooterTiming: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n    const [measureJsxList, setMeasureJsxList] = useState([] as JSX.Element[]);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const chordDetail = dataList[focusIndex].type == TypeNoteElement.Chord ?\r\n        (dataList[focusIndex].detail as DetailChord) : null;\r\n    const sustain = chordDetail == null ? 0 : chordDetail.sustain;\r\n    const headAdjust = chordDetail == null ? 0 : chordDetail.headAdjust;\r\n    const tailAdjust = chordDetail == null ? 0 : chordDetail.tailAdjust;\r\n    useEffect(() => {\r\n        let total = 0;\r\n        const blockJsxList: JSX.Element[] = [];\r\n        const measureJsxList: JSX.Element[] = [];\r\n        const dataList = state.noteData.dataList;\r\n\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                        ].join(' ')}\r\n                        style={{ width: `${FIXED_BLANK}px` }}\r\n                    />\r\n                )\r\n            }\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                const detail = data.detail as DetailChord;\r\n                const len = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                const width = len * MEM_WIDTH * 4;\r\n                const isCur = focusIndex == i;\r\n                const isNear = focusIndex == i - 1 || focusIndex == i + 1;\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                            isCur ? 'active' : '',\r\n                            isNear ? 'near' : '',\r\n                        ].join(' ')}\r\n                        style={{ width: `${width - 1}px` }}\r\n                    >\r\n                        <div className=\"sus\">\r\n                            <span>{detail.sustain}</span>\r\n                        </div>\r\n                        <div className=\"adjust\">\r\n                            <span className={getAdjustCls(detail.headAdjust)}>\r\n                                {getAdjustSusValue(detail.headAdjust)}\r\n                            </span>\r\n                            <span className={getAdjustCls(detail.tailAdjust)}>\r\n                                {getAdjustSusValue(detail.tailAdjust)}\r\n                            </span>\r\n                        </div>\r\n                    </div >\r\n                );\r\n                if (isCur) {\r\n                    scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n                }\r\n                total += len * 4;\r\n            }\r\n        });\r\n\r\n        // measureJsxList.push(\r\n        //     <div key={measureJsxList.length} className=\"blank\" style={{ left: `${0}px` }} />\r\n        // )\r\n        for (let i = 0; i < total; i++) {\r\n            let name = '';\r\n            const isBar = i % 16 == 0;\r\n            /** 小節数 */\r\n            const barCount = 1 + (i / 16);\r\n            if (isBar) {\r\n                name = 'mem-bar';\r\n            } else {\r\n                switch (i % 4) {\r\n                    case 0: name = 'mem4'; break;\r\n                    case 2: name = 'mem8'; break;\r\n                    default: name = 'mem16'; break;\r\n                }\r\n            }\r\n            measureJsxList.push(\r\n                <div key={measureJsxList.length} className={name} style={{ left: `${FIXED_BLANK + i * MEM_WIDTH}px` }}>{\r\n                    i % 16 == 0 ?\r\n                        <div className=\"bar\" style={{ left: `${-14}px`, top: '24px' }}>{barCount}</div>\r\n                        :\r\n                        <></>\r\n                }</div>\r\n            );\r\n        }\r\n        // alert(measureJsxList.length);\r\n        setBlockJsxList(blockJsxList);\r\n        setMeasureJsxList(measureJsxList);\r\n        setTotal(total);\r\n    }, [dataCount, focusIndex, sustain, headAdjust, tailAdjust]);\r\n\r\n    if (chordDetail == null) {\r\n        return (<></>);\r\n    }\r\n\r\n    const totalWidth = FIXED_BLANK * 2 + total * MEM_WIDTH;\r\n    return (\r\n        <div id=\"footer-timing\" className=\"footer-child\">\r\n            <div className=\"scroll\" ref={scrollRef}>\r\n                <div className=\"blocks\" style={{ width: `${totalWidth}px` }}>\r\n                    {blockJsxList}\r\n                </div>\r\n                <div className=\"measure\" style={{ width: `${totalWidth}px` }}>\r\n                    {measureJsxList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getAdjustCls = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = 'aug';\r\n        else ret = 'dim';\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport default FooterTiming;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\n// import './FooterEnsemble.css';\r\n\r\nconst FooterEnsemble: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n\r\n    // const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n\r\n \r\n    return (\r\n        <div id=\"footer-ensemble\" className=\"footer-child\">\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FooterEnsemble;","\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport FooterTiming from './timing/FooterTiming';\r\nimport './NoteFooter.css';\r\nimport FooterEnsemble from './ensemble/FooterEnsemble';\r\n\r\nconst NoteFooter = () => {\r\n\r\n    return (\r\n        <div id=\"score-footer\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Progress', disable: false, cont: <FooterTiming /> },\r\n                    { name: 'Target', disable: true, cont: <div></div> },\r\n                    { name: 'Ensemble', disable: false, cont: <FooterEnsemble /> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteFooter;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    {/* <span>{tempo}</span> */}\r\n                    <input\r\n                        type=\"number\" value={tempo} min=\"30\" max=\"180\"\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;\r\n\r\nconst StyledButton = styled.span`\r\n  user-select: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  margin: 1em;\r\n  padding: 0.3em 0.5em;\r\n  border-radius: 0.2em;\r\n  border: solid 1px #3498db;\r\n  color: #fff;\r\n  background-color: #3498db;\r\n`","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './SectionEditor.css';\r\n\r\nconst SectionEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.section.setSectionParam(labelName);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const getTextForm = (label: string, value: string, callback: (value: string) => void): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"section-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.SECTION_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getTextForm('Name', labelName, (value: string) => { setLabelName(value) })}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionEditor;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './SettingEditor.css';\r\n\r\nconst SettingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    if (state.noteState.floatwndState != FloatWndState.SETTING_EDITOR) {\r\n        return (<></>);\r\n    }\r\n    const defsus = state.noteState.defaultSustain;\r\n    const sustainJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        sustainJsxList.push(\r\n            <div\r\n                key={sustainJsxList.length}\r\n                className={[\r\n                    i + 1 <= defsus ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={()=>{\r\n                    dispatcher.score.setNoteState({...state.noteState, defaultSustain: i + 1});\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <div id=\"setting-editor\"\r\n            className=\"floatwnd active\">\r\n            <div className=\"sustain\">{sustainJsxList}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingEditor;\r\n","\r\nimport { RYTHM_LIST, TimeSignatures } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { ChangeType, FloatWndState, ModulateRelation, TempoRelation } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './ChangeEditor.css';\r\n\r\nconst ChangeEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        // dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [changeType, setChangeType] = useState<string>('');\r\n    const [modulateRelation, setModulateRelation] = useState<string>('');\r\n    const [domminantValue, setDomminantValue] = useState<'' | number>('');\r\n    const [keyAdjust, setKeyAdjust] = useState<'' | number>('');\r\n    const [tempoRelation, setTempoRelation] = useState<string>('');\r\n    const [tempoRate, setTempoRate] = useState<'' | number>('');\r\n    const [tempoDiff, setTempoDiff] = useState<'' | number>('');\r\n    const [tempoAbsolute, setTempoAbsolute] = useState<'' | number>('');\r\n    const [beat, setBeat] = useState<string>('');\r\n\r\n    const [isInputOK, setInputOK] = useState<boolean>(false);\r\n\r\n    const checkInput = () => {\r\n        setInputOK(false);\r\n        switch (changeType) {\r\n            case ChangeType.MODULATE: {\r\n                switch (modulateRelation) {\r\n                    case ModulateRelation.DOMINANT: {\r\n                        if (domminantValue !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.KEY: {\r\n                        if (keyAdjust !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.RELATIVE: {\r\n                        setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.PARALLEL: {\r\n                        setInputOK(true);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case ChangeType.TEMPO: {\r\n                switch (tempoRelation) {\r\n                    case TempoRelation.DIFF: {\r\n                        if (tempoDiff !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case TempoRelation.RATE: {\r\n                        if (tempoRate !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case TempoRelation.ABSOLUTE: {\r\n                        if (tempoAbsolute !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case ChangeType.BEAT: {\r\n                if (beat !== '') setInputOK(true);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkInput();\r\n    }, [changeType, modulateRelation, domminantValue, keyAdjust,\r\n        tempoRelation, tempoDiff, tempoRate, tempoAbsolute, beat\r\n    ]);\r\n\r\n    // const KeyFilter = (value: string) => isNaN(Number(value));\r\n    let itemsJsxList: JSX.Element[] = [];\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Change Type', changeType,\r\n            (value: string) => {\r\n                setChangeType(value);\r\n                if (value !== ChangeType.MODULATE) {\r\n                    setModulateRelation('');\r\n                    setDomminantValue('');\r\n                    setKeyAdjust('');\r\n                }\r\n                if (value !== ChangeType.TEMPO) {\r\n                    setTempoRelation('');\r\n                    setTempoRate('');\r\n                    setTempoDiff('');\r\n                    setTempoAbsolute('');\r\n                }\r\n                if (value !== ChangeType.BEAT) {\r\n                    setBeat('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(ChangeType).map((item) => {\r\n                    return { value: item.toString(), display: item.toString() };\r\n                })\r\n            ),\r\n            false\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Modulate Relation', modulateRelation,\r\n            (value: string) => {\r\n                setModulateRelation(value);\r\n\r\n                if (value !== ModulateRelation.KEY) {\r\n                    setKeyAdjust('');\r\n                }\r\n                if (value !== ModulateRelation.DOMINANT) {\r\n                    setDomminantValue('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(ModulateRelation).map((item) => {\r\n                    const str = item.toString();\r\n                    return { value: str, display: str };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.MODULATE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Domminant Value', domminantValue, -3, 3,\r\n            (value: string) => {\r\n                setDomminantValue(value as '' | number);\r\n            },\r\n            modulateRelation !== ModulateRelation.DOMINANT.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Key Adjust', keyAdjust, -3, 3,\r\n            (value: string) => {\r\n                setKeyAdjust(value as '' | number);\r\n            },\r\n            modulateRelation !== ModulateRelation.KEY.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Tempo Relation', tempoRelation,\r\n            (value: string) => {\r\n                setTempoRelation(value);\r\n\r\n                if (value !== TempoRelation.RATE) {\r\n                    setTempoRate('');\r\n                }\r\n                if (value !== TempoRelation.DIFF) {\r\n                    setTempoDiff('');\r\n                }\r\n                if (value !== TempoRelation.ABSOLUTE) {\r\n                    setTempoAbsolute('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(TempoRelation).map((item) => {\r\n                    const str = item.toString();\r\n                    return { value: str, display: str };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.TEMPO.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Rate', tempoRate, 20, 200,\r\n            (value: string) => {\r\n                setTempoRate(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.RATE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Diff', tempoDiff, -150, 150,\r\n            (value: string) => {\r\n                setTempoDiff(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.DIFF.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Absolute', tempoAbsolute, 30, 180,\r\n            (value: string) => {\r\n                setTempoAbsolute(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.ABSOLUTE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Beat', beat,\r\n            (value: string) => {\r\n                setBeat(value);\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(TimeSignatures).map((item) => {\r\n                    const key = item.toString();\r\n                    return { value: key, display: key };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.BEAT.toString()\r\n        )\r\n    );\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                isInputOK ? '' : 'disable'\r\n            ].join('')}\r\n            onClick={() => {\r\n                dispatcher.change.applyChangeParams(\r\n                    changeType as ChangeType,\r\n                    modulateRelation === '' ? null : modulateRelation as ModulateRelation,\r\n                    domminantValue === '' ? 0 : domminantValue as number,\r\n                    keyAdjust === '' ? 0 : keyAdjust as number,\r\n                    tempoRelation === '' ? null : tempoRelation as TempoRelation,\r\n                    tempoDiff === '' ? 0 : tempoDiff as number,\r\n                    tempoRate === '' ? 0 : tempoRate as number,\r\n                    tempoAbsolute === '' ? 0 : tempoAbsolute as number,\r\n                    beat === '' ? null : beat as TimeSignatures\r\n                );\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"change-editor\"\r\n            className={[\r\n                'floatwnd',\r\n                state.noteState.floatwndState == FloatWndState.CHANGE_PALETTE ? ' active' : ''\r\n            ].join(' ')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {itemsJsxList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getItemSelectorJsx = (key: number, label: string, value: string,\r\n    callback: (value: string) => void,\r\n    list: { value: string, display: string }[], isDisable: boolean\r\n): JSX.Element => {\r\n    const optionsJsx: JSX.Element[] = [];\r\n    list.forEach((data) => {\r\n        optionsJsx.push(\r\n            <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n        );\r\n    });\r\n    return (\r\n        <div\r\n            key={key}\r\n            className={[\r\n                'record',\r\n                isDisable ? 'disable' : ''\r\n            ].join(' ')}\r\n        >\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"value\">\r\n                <select\r\n                    className={\r\n                        !isDisable && value === '' ? 'error' : ''\r\n                    }\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        callback(e.target.value);\r\n                    }}\r\n                >\r\n                    {optionsJsx}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getItemNumberRangeJsx = (key: number, label: string, value: '' | number,\r\n    min: number, max: number, callback: (value: string) => void, isDisable: boolean\r\n): JSX.Element => {\r\n    return (\r\n        <div\r\n            key={key}\r\n            className={[\r\n                'record',\r\n                isDisable ? 'disable' : ''\r\n            ].join(' ')}\r\n        >\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"value\">\r\n                <input type=\"number\"\r\n                    className={\r\n                        !isDisable && (value === '' || !(value >= min && value <= max)) ? 'error' : ''\r\n                    }\r\n                    value={value} min={min} max={max}\r\n                    onChange={(e) => {\r\n                        callback(e.target.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeEditor;","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentElementInfo from './sideDetail/CurrentElementInfo';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport NoteFooter from './footer/NoteFooter';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\nimport SectionEditor from './floatwnd/section/SectionEditor';\r\nimport SettingEditor from './floatwnd/setting/SettingEditor';\r\nimport ChangeEditor from './floatwnd/change/ChangeEditor';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        console.log('create ScoreContNoteTab');\r\n    },[]);\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                const sustain = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                totalBeat += sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * sustain;\r\n                no++;\r\n            }\r\n\r\n            cacheList[i] = { ...cacheList[i], init: { ...cache.init }, progress };\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).labelName} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                        }}><span>BACK</span></button>\r\n                        <button className=\"disable\"><span>SAVE</span></button>\r\n                        <button className=\"disable\"><span>RELOAD</span></button>\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SETTING_EDITOR })\r\n                        }}> <span>SETTING</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <SectionEditor />\r\n                    <ChangeEditor />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                    <SettingEditor />\r\n                </div>\r\n                <NoteFooter />\r\n\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentElementInfo />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.BACKING ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, NoteData, NoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { API_DOMAIN } from 'contents/common/define';\r\nimport { createQueryRequestInit, sendQueryRequestToAPI } from 'contents/common/utils';\r\n\r\ntype Record = { id: number, title: string, chord_mode: CHORD_MODE, data_cnt: number };\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [message, setMessage] = useState<string>('');\r\n    const [recordList, setRecordList] = useState<Record[]>([]);\r\n    const [titleList, setTitleList] = useState<JSX.Element[]>([]);\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [chordMode, setChordMode] = useState<CHORD_MODE | ''>('');\r\n    const [isLoad, setLoad] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        console.log('create ScoreContLiblaryTab');\r\n    }, []);\r\n\r\n    // 非同期で表示データを更新。\r\n    const reload = (initFocus: number) => {\r\n        // setFocus(initFocus);\r\n        setLoad(true);\r\n        setMessage('Now roading scores...');\r\n        sendQueryRequestToAPI('select', `SELECT s.*, (select count(*) from data_tbl where score = s.id) as data_cnt FROM sclibtbl s where user = ${state.login.id}`)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(results => {\r\n                console.log(`[${state.login.id}]score count: ` + results.length);\r\n                const isExist = results.length > 0;\r\n                if (isExist) {\r\n                    setRecordList(results);\r\n                    setMessage('');\r\n                } else {\r\n                    setMessage('There is no musical score you manage yet.');\r\n                }\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error + \"失敗しました\");\r\n                setLoad(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const list: JSX.Element[] = [];\r\n        recordList.forEach((record, i) => {\r\n            list.push(\r\n                <div\r\n                    key={i}\r\n                    className={[\r\n                        'record',\r\n                        focus == i ? 'focus' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        setFocus(i);\r\n                    }}\r\n                >\r\n                    <span>{record.id}:</span>\r\n                    <span className=\"title\">{record.title}</span>\r\n                    <span>[</span>\r\n                    <span className=\"mode\">{record.chord_mode}</span>\r\n                    <span>]</span>\r\n                </div>\r\n            );\r\n        });\r\n        setTitleList(list);\r\n    }, [recordList, focus]);\r\n\r\n    useEffect(() => {\r\n        if (!isEdit) {\r\n            reload(-1);\r\n        }\r\n\r\n    }, [isEdit]);\r\n\r\n    const createButton = (label: string, isDisable: boolean, callback: () => void, isActive: boolean = false): JSX.Element => {\r\n        return (\r\n            <button className={[\r\n                isDisable ? 'disable' : '',\r\n                isActive ? 'active' : ''\r\n            ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label}</span>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    const createInfoRecored = (label: string, innerJsx: JSX.Element): JSX.Element => {\r\n        return (\r\n            <div\r\n                className=\"info-record\"\r\n            >\r\n                <span>{label}</span>\r\n                <span>{': '}</span>\r\n                {innerJsx}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const isDisplayMsg = message != '';\r\n    const selectedRecord = recordList[focus];\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                {/* <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button> */}\r\n                <div className=\"opr\">\r\n                    {createButton('Create', isEdit || isLoad, () => {\r\n                        setMessage('Create...');\r\n                        sendQueryRequestToAPI('update', `INSERT INTO sclibtbl(user, title, chord_mode) VALUES(${state.login.id}, 'new_title', '')`)\r\n                            .then((result) => {\r\n                                reload(recordList.length);\r\n                                return result;\r\n                            })\r\n                    })}\r\n                    {createButton('Update', focus == -1 || isLoad, () => {\r\n                        if (!isEdit) {\r\n                            setEdit(true);\r\n                            setTitle(selectedRecord.title);\r\n                            setChordMode(selectedRecord.chord_mode);\r\n                        }\r\n                    }, isEdit)}\r\n                    {createButton('Delete', focus == -1 || isEdit || isLoad, () => {\r\n                        (async () => {\r\n                            setMessage('Delete...');\r\n                            console.log('----start----');\r\n                            await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${recordList[focus].id}`);\r\n                            await sendQueryRequestToAPI('update', `delete from sclibtbl where id = ${recordList[focus].id}`);\r\n                            reload(-1);\r\n                            setFocus(-1);\r\n                            console.log('----end----');\r\n                        })();\r\n                    })}\r\n                </div>\r\n                <div className={[\r\n                    'lib',\r\n                    isEdit ? 'disable' : ''\r\n                ].join(' ')}>\r\n                    <div className={[\r\n                        'message',\r\n                        !isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        <span>{message}</span>\r\n                    </div>\r\n                    <div className={[\r\n                        'list',\r\n                        isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        {titleList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <div className=\"opr\">\r\n                    {createButton('Cancel', !isEdit || isLoad, () => {\r\n                        setEdit(false);\r\n                    })}\r\n                    {createButton('Save', !isEdit || chordMode === '' || isLoad, () => {\r\n                        setLoad(true);\r\n                        (async () => {\r\n                            console.log('----start----');\r\n                            const values: string[] = [];\r\n                            await sendQueryRequestToAPI('update', `update sclibtbl set title = '${title}', chord_mode = '${chordMode}' where id = ${selectedRecord.id}`);\r\n                            if (state.noteData.dataList.length > 0) {\r\n                                state.noteData.dataList.forEach((data, i) => {\r\n                                    values.push(`(${selectedRecord.id}, ${i}, '${JSON.stringify(data)}')`);\r\n                                });\r\n                                await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${selectedRecord.id}`);\r\n                                await sendQueryRequestToAPI('update', `insert into data_tbl values${values.join(',')}`);\r\n                            }\r\n                            console.log('----end----');\r\n                            alert('The data was saved successfully!');\r\n                            // setEdit(false);\r\n                            setLoad(false);\r\n                        })();\r\n                    })}\r\n                    {createButton('Edit', !isEdit || chordMode === '' || isLoad, () => {\r\n                        setLoad(true);\r\n                        (async () => {\r\n                            if (selectedRecord.data_cnt == 0) {\r\n                                dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                            } else {\r\n                                const response = await sendQueryRequestToAPI('select', `SELECT json from data_tbl where score = ${selectedRecord.id} order by seq`);\r\n                                const results = await response.json();\r\n                                // alert(JSON.stringify(results));\r\n                                const dataList: NoteElement[] = [];\r\n                                results.forEach((result: { json: string }) => {\r\n                                    dataList.push(JSON.parse(result.json));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList, chordMode: chordMode as CHORD_MODE  });\r\n                            }\r\n                            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: 2 });\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                            setLoad(false);\r\n                        })();\r\n                    })}\r\n                </div>\r\n                {\r\n                    !isEdit ? <></> : (\r\n                        <div className=\"data\">\r\n                            {createInfoRecored('Id', (\r\n                                <span className=\"value\">{selectedRecord.id}</span>\r\n                            ))}\r\n                            {createInfoRecored('Title', (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        // recordList[focus].title = e.target.value;\r\n                                        // setRecordList(recordList);\r\n                                        setTitle(e.target.value);\r\n                                    }}\r\n                                    value={title}\r\n                                />\r\n                            ))}\r\n                            {createInfoRecored('Mode', (\r\n                                // <span className=\"value\">{selectedRecord.chord_mode}</span>\r\n                                <select className={[\r\n                                    'value',\r\n                                    selectedRecord.data_cnt > 0 ? 'disable' : ''\r\n                                ].join(' ')}\r\n                                    value={chordMode}\r\n                                    onChange={(e) => {\r\n                                        setChordMode(e.target.value as CHORD_MODE | '');\r\n                                    }}>\r\n                                    <option value=''></option>\r\n                                    <option value={CHORD_MODE.SCALE}>{CHORD_MODE.SCALE}</option>\r\n                                    <option value={CHORD_MODE.DIRECT}>{CHORD_MODE.DIRECT}</option>\r\n                                </select>\r\n                            ))}\r\n                            {createInfoRecored('Show', (\r\n                                <span className=\"value\">{'PRIVATE'}</span>\r\n                            ))}\r\n                            {createInfoRecored('Data', (\r\n                                <span className=\"value\">{selectedRecord.data_cnt}</span>\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreContBackingTab.css';\r\n\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport  { useContext } from 'react';\r\n\r\n\r\nconst ScoreContBackingTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    \r\n    return (<></>);\r\n\r\n\r\n}\r\n\r\nexport default ScoreContBackingTab;\r\n","import './ScoreContSourceTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContSourceTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    const ref = useRef({} as HTMLTextAreaElement);\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex == 2 && state.noteData.dataList.length != 0) {\r\n            ref.current.value = JSON.stringify(state.noteData);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    return (\r\n        <div id=\"scorecont-sourcetab-root\">\r\n            <textarea ref={ref}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData(JSON.parse(ref.current.value));\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n            >Load score data...</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContSourceTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContBackingTab from './contTabs/backing/ScoreContBackingTab';\r\nimport ScoreContSourceTab from './contTabs/source/ScoreContSourceTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: true, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: state.noteData.dataList.length === 0,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Source', disable: false, cont: <ScoreContSourceTab /> },\r\n                    { name: 'Thema', disable: false, cont: <ScoreContBackingTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST, TimeSignatures } from \"contents/common/define\";\r\nimport { applyOnChord, getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache, DetailChange, DetailFixed, LoginParams, ChordPaletteState, ChangeType, ModulateRelation, Key12Info, TempoRelation } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    public setLoginParams = (login: LoginParams) => {\r\n        this.dispatch(ActionType.SET_LOGIN, { login });\r\n    }\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: null | NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n                // reffer.style.width = 'inherit';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.BACKING\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n\r\n        addNoteElement: (type: TypeNoteElement, detail: DetailSection | DetailChord | DetailChange) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, { type, detail });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addChangeElement: () => {\r\n            // const detail = { type: ChangeType.NONE } as DetailChange;\r\n            // const mod:ChangeModulation = {\r\n            //     relation: ModulateRelation.DOMINANT,\r\n            //     value: 0,\r\n            // }\r\n            const detail = {\r\n                changeType: null,\r\n                modulateRelation: null,\r\n                domminantValue: 0,\r\n                keyAdjust: 0,\r\n                tempoRelation: null,\r\n                tempoDiff: 0,\r\n                tempoRate: 0,\r\n                tempoAbsolute: 0,\r\n                beat: null\r\n            } as DetailChange;\r\n            this.score.addNoteElement(TypeNoteElement.Change, detail);\r\n        },\r\n        addChordElement: () => {\r\n            const noteState = this.state.noteState;\r\n            const curIndex = noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    // degreeIndex: -1,\r\n                    // isFlat: false,\r\n                    molecule: null,\r\n                    denominator: null,\r\n                    symbolKey: SymbolKey.MAJOR,\r\n                    sustain: noteState.defaultSustain,\r\n                    headAdjust: 0,\r\n                    tailAdjust: 0,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [[[false]]],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [[[false]]],\r\n                                vels: [5]\r\n                            }\r\n                        ],\r\n                        isUsePedal: false\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                // this.state.noteState.focusIndex++;\r\n                const focusIndex = curIndex + 1;\r\n                // this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                this.score.setNoteState({ ...this.state.noteState, focusIndex });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            // let degreeIndex = detail.degreeIndex;\r\n            // if (degreeIndex == -1) {\r\n            //     degreeIndex = 0;\r\n            // }\r\n            let molecule = detail.molecule;\r\n            if (molecule == null) {\r\n                molecule = { rootIndex: 0, isFlat: false };\r\n            }\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    // rootIndex: degreeIndex,\r\n                    // isFlat: detail.isFlat,\r\n                    molecule,\r\n                    denominator: detail.denominator,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                    headAdjust: detail.headAdjust,\r\n                    tailAdjust: detail.tailAdjust,\r\n                } as ChordPaletteState\r\n            });\r\n        },\r\n\r\n        callSectionEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailSection;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SECTION_PALETTE });\r\n        },\r\n\r\n        callChangeEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChange;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHANGE_PALETTE });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const backing = detail.backing;\r\n            const backingState: BackingEditorState = {\r\n                molecule: detail.molecule as Key12Info,\r\n                denominator: detail.denominator,\r\n                symbolKey: detail.symbolKey,\r\n                sustain: detail.sustain,\r\n                headAdjust: detail.headAdjust,\r\n                tailAdjust: detail.tailAdjust,\r\n                channelRowSize: backing.layers[0].table.length,\r\n                useChannels: JSON.parse(JSON.stringify(backing.useChannels)),\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: JSON.parse(JSON.stringify(backing.layers)),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * セクションエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public section = {\r\n        setSectionParam: (labelName: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    labelName\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * チェンジエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n     public change = {\r\n        applyChangeParams: (changeType: ChangeType, modulateRelation: null | ModulateRelation, domminantValue: number, keyAdjust: number,\r\n            tempoRelation: null | TempoRelation, tempoDiff: number, tempoRate: number, tempoAbsolute: number, beat: null | TimeSignatures) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    changeType,\r\n                    modulateRelation,\r\n                    domminantValue,\r\n                    keyAdjust,\r\n                    tempoRelation,\r\n                    tempoDiff,\r\n                    tempoAbsolute,\r\n                    beat\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    // degreeIndex: editorState.rootIndex,\r\n                    // isFlat: editorState.isFlat,\r\n                    molecule: editorState.molecule,\r\n                    denominator: editorState.denominator,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                    headAdjust: editorState.headAdjust,\r\n                    tailAdjust: editorState.tailAdjust,\r\n                } as DetailChord\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        setPaletteState: (paletteState: BackingEditorState) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            this.score.setNoteState({ ...this.state.noteState, backingPaletteState: backing });\r\n        },\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !backing.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        setChannelRowSize: (size: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.channelRowSize = size;\r\n            backing.layers.forEach((layer) => {\r\n                const table: boolean[][][] = new Array<boolean[][]>(size);\r\n                console.log('★★★' + table.length);\r\n                for (let i = 0; i < table.length; i++) {\r\n                    table[i] = new Array<boolean[]>(layer.lens.length);\r\n                    console.log('☆☆☆☆☆☆');\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        table[i][j] = new Array<boolean>(1);\r\n                        table[i][j][0] = false;\r\n                    }\r\n                }\r\n                layer.table = table;\r\n            });\r\n            this.score.setNoteState({ ...this.state.noteState, backingPaletteState: backing });\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const baseLayers = backing.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backing.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        // play: (isProceed: boolean) => {\r\n\r\n        //     const threads = this.state.noteState.backingThreads;\r\n        //     const soundUseList: number[] = Array(88);\r\n        //     for (let i = 0; i < 88; i++) {\r\n        //         soundUseList[i] = 0;\r\n        //     }\r\n        //     const rec = (isProceed: boolean) => {\r\n\r\n        //         const curTime = new Date().getTime();\r\n        //         const focusIndex = this.state.noteState.focusIndex;\r\n        //         const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n        //         const cache = this.state.noteState.cacheList[focusIndex];\r\n        //         const symbol = getSymbolParams(detail.symbolKey);\r\n        //         const intervals = symbol?.intervals as number[];\r\n        //         const editor = this.state.noteState.backingPaletteState;\r\n        //         const backing: BackingScript = !isProceed ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n        //             : detail.backing;\r\n        //         const sampler = this.state.sampler;\r\n        //         const tempo = cache.init.tempo;\r\n        //         // 1小節の長さミリ秒\r\n        //         const barMs = 60000 / tempo * 4;\r\n        //         const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n        //         const adjustOverlap = barMs / 32;\r\n\r\n        //         // 末端に達した時の処理\r\n        //         threads.push(\r\n        //             setTimeout(() => {\r\n        //                 let isEnd = true;\r\n        //                 if (isProceed) {\r\n        //                     const hasNext = this.score.focusNextElement();\r\n        //                     if (hasNext) {\r\n        //                         isEnd = false;\r\n        //                         rec(true);\r\n        //                     }\r\n        //                 }\r\n        //                 if (isEnd) {\r\n        //                     this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n        //                 }\r\n        //             }, boxMs)\r\n        //         );\r\n        //         console.log(new Date().getTime() - curTime);\r\n        //         for (let i = 0; i < 2; i++) {\r\n        //             let headMs = 0;\r\n        //             const layer = backing.layers[i];\r\n        //             // 音価のループ\r\n        //             layer.lens.forEach((lenBean, j) => {\r\n\r\n        //                 const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n        //                 let curLenMs = barMs / lenValue;\r\n        //                 if (lenBean.isHalf) {\r\n        //                     curLenMs *= 1.5;\r\n        //                 }\r\n        //                 backing.useChannels.forEach((channel, k) => {\r\n        //                     layer.table[k][j].forEach((notes, l) => {\r\n\r\n        //                         if (notes && detail.molecule != null) {\r\n        //                             const degreeIndex = detail.molecule.rootIndex;\r\n        //                             const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n        //                             const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n        //                             const octave = Math.floor(soundIndex / 12);\r\n        //                             const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n        //                             const soundFullName = root + octave;\r\n        //                             const velocity = 0.7 * layer.vels[j] / 10;\r\n        //                             const head = headMs + curLenMs / 3 * l;\r\n        //                             const tail = !backing.isUsePedal ?\r\n        //                                 //ペダル未使用時\r\n        //                                 head + curLenMs :\r\n        //                                 //ペダル使用時\r\n        //                                 boxMs + adjustOverlap\r\n        //                                 ;\r\n        //                             threads.push(\r\n        //                                 setTimeout(() => {\r\n        //                                     sampler.triggerAttack(soundFullName, '+0', velocity);\r\n        //                                     soundUseList[soundIndex]++;\r\n        //                                 }, head)\r\n        //                             );\r\n        //                             // console.log(new Date().getTime() - curTime);\r\n        //                             threads.push(\r\n        //                                 setTimeout(() => {\r\n        //                                     soundUseList[soundIndex]--;\r\n        //                                     if (soundUseList[soundIndex] == 0) {\r\n        //                                         sampler.triggerRelease(soundFullName);\r\n        //                                     }\r\n        //                                 }, tail)\r\n        //                             );\r\n        //                             // console.log(new Date().getTime() - curTime);\r\n        //                         }\r\n        //                     });\r\n        //                 });\r\n        //                 headMs += curLenMs;\r\n        //             });\r\n        //         }\r\n        //         this.score.setNoteState({\r\n        //             ...this.state.noteState,\r\n        //             editMode: EditMode.PREVIEW, backingThreads: threads\r\n        //         });\r\n        //     }\r\n        //     rec(isProceed);\r\n        // }\r\n        play: (isScore: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                editMode: EditMode.PREVIEW, backingThreads: threads\r\n            });\r\n            let totalTime = 0;\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            const curTime = new Date().getTime();\r\n            for (let i = focusIndex; i < (isScore ? dataList.length : focusIndex + 1); i++) {\r\n                const data = dataList[i];\r\n\r\n\r\n                // フォーカスを更新\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        if (isScore && [TypeNoteElement.Chord, TypeNoteElement.Fixed].includes(data.type)) {\r\n                            // const hasNext = this.score.focusNextElement();\r\n                            // if (!hasNext) {\r\n                            //     this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                            // }\r\n                            const [editMode, next] =\r\n                                data.type == TypeNoteElement.Fixed ?\r\n                                    [EditMode.NORMAL, focusIndex] : [EditMode.PREVIEW, i];\r\n                            this.score.setNoteState({ ...this.state.noteState, focusIndex: next, editMode });\r\n                        }\r\n                    }, totalTime)\r\n                );\r\n                if (data.type == TypeNoteElement.Chord) {\r\n                    const detail = data.detail as DetailChord;\r\n\r\n                    const cache = this.state.noteState.cacheList[i];\r\n                    const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n                    if (detail.molecule != null && detail.denominator != null) {\r\n                        applyOnChord(symbol, detail.molecule.rootIndex, detail.denominator.rootIndex);\r\n                    }\r\n                    const intervals = symbol?.intervals as number[];\r\n                    const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n                    const backing: BackingScript = !isScore ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                        : detail.backing;\r\n                    const sampler = this.state.sampler;\r\n                    const tempo = cache.init.tempo;\r\n                    // 1小節の長さミリ秒\r\n                    const barMs = 60000 / tempo * 4;\r\n                    const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                    const adjustOverlap = barMs / 32;\r\n\r\n                    // バッキングエディタの場合は、1つの要素で止める\r\n                    if (!isScore) {\r\n                        threads.push(\r\n                            setTimeout(() => {\r\n                                this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n\r\n                            }, totalTime + boxMs)\r\n                        )\r\n                    }\r\n                    for (let i = 0; i < 2; i++) {\r\n                        let headMs = 0;\r\n                        const layer = backing.layers[i];\r\n                        // 音価のループ\r\n                        layer.lens.forEach((lenBean, j) => {\r\n\r\n                            const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                            let curLenMs = barMs / lenValue;\r\n                            if (lenBean.isHalf) {\r\n                                curLenMs *= 1.5;\r\n                            }\r\n                            backing.useChannels.forEach((channel, k) => {\r\n                                layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                    if (notes && detail.molecule != null) {\r\n                                        const degreeIndex = detail.molecule.rootIndex;\r\n                                        const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                        const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                        const octave = Math.floor(soundIndex / 12);\r\n                                        const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                        const soundFullName = root + octave;\r\n                                        const velocity = 0.7 * layer.vels[j] / 10;\r\n                                        const head = headMs + curLenMs / 3 * l;\r\n                                        const tail = !backing.isUsePedal ?\r\n                                            //ペダル未使用時\r\n                                            head + curLenMs :\r\n                                            //ペダル使用時\r\n                                            boxMs + adjustOverlap\r\n                                            ;\r\n                                        const lag = new Date().getTime() - curTime;\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                                soundUseList[soundIndex]++;\r\n                                            }, totalTime + head - lag)\r\n                                        );\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                soundUseList[soundIndex]--;\r\n                                                if (soundUseList[soundIndex] == 0) {\r\n                                                    sampler.triggerRelease(soundFullName);\r\n                                                }\r\n                                            }, totalTime + tail - lag)\r\n                                        );\r\n                                    }\r\n                                });\r\n                            });\r\n                            headMs += curLenMs;\r\n                        });\r\n                    }\r\n                    totalTime += boxMs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { API_DOMAIN } from 'contents/common/define';\r\nimport { sendQueryRequestToAPI } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './LoginFrame.css';\r\n\r\nconst LoginFrame = () => {\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n\r\n    const [loginType, setLoginType] = useState<'guest' | 'login' | 'create'>('guest');\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [message, setMessage] = useState(' ');\r\n    const [isError, setError] = useState(false);\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const enterDisable = (): boolean => {\r\n        switch (loginType) {\r\n            case 'guest': return false;\r\n            case 'login': {\r\n                return userName == '' || userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password == '' || password.length < 5 || password.length > 15 || !isHanEisu(password);\r\n            }\r\n            case 'create': {\r\n                return userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password.length < 5 || password.length > 15 || !isHanEisu(password) ||\r\n                    passConfirm.length < 5 || passConfirm.length > 15 || !isHanEisu(passConfirm);\r\n            }\r\n        }\r\n    }\r\n    return (<>\r\n        <div id=\"logo\"><span>Virtual Harmonizer</span></div>\r\n        <div id=\"login-frame\" ref={ref}>\r\n            <div className=\"guide\">\r\n                <span>Start to Virtual Harmonizer</span>\r\n            </div>\r\n            <div className=\"type\">\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"guest\"\r\n                    name=\"guest\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"login\"\r\n                    name=\"login\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"create\"\r\n                    name=\"create account\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n            </div>\r\n            <div className=\"body\">\r\n                <TextForm\r\n                    label=\"user name\"\r\n                    stateValue={userName}\r\n                    stateSetter={setUserName}\r\n                    isMask={false}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password\"\r\n                    stateValue={password}\r\n                    stateSetter={setPassword}\r\n                    isMask={true}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password confirm\"\r\n                    stateValue={passConfirm}\r\n                    stateSetter={setPassConfirm}\r\n                    isMask={true}\r\n                    isDisable={!['create'].includes(loginType)}\r\n                />\r\n            </div>\r\n            <div className=\"message\">\r\n                <span className={isError ? 'error' : ''}>{message}</span>\r\n            </div>\r\n            <div\r\n                className={['opr', (enterDisable() || isLoading) ? 'disable' : ''].join(' ')}\r\n            >\r\n                <button\r\n                    onClick={() => {\r\n\r\n                        const login = (id: number, name: string) => {\r\n                            ref.current.style.opacity = '0';\r\n                            setTimeout(() => {\r\n                                dispatcher.setLoginParams({\r\n                                    ...state.login,\r\n                                    isLogin: true,\r\n                                    id,\r\n                                    name\r\n                                });\r\n                            }, 300);\r\n                        }\r\n                        setLoading(true);\r\n                        setError(false);\r\n                        setMessage('Connect to server...');\r\n                        switch (loginType) {\r\n                            case 'guest': {\r\n                                login(-1, 'Guest');\r\n                                setLoading(false);\r\n                            }\r\n                                break;\r\n                            case 'login': {\r\n\r\n                                sendQueryRequestToAPI('select', `SELECT * FROM user_tbl where name = '${userName}' and password = '${password}'`)\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(results => {\r\n                                        console.log(results.length);\r\n                                        const isExist = results.length > 0;\r\n                                        if (isExist) {\r\n                                            login(results[0].id, results[0].name);\r\n                                        } else {\r\n                                            setError(true);\r\n                                            setMessage('The login attempt failed. Either the user ID or password is invalid.');\r\n                                        }\r\n                                        setLoading(false);\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                        setLoading(false);\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'create': {\r\n\r\n                                if (password != passConfirm) {\r\n                                    setError(true);\r\n                                    setMessage(`Confirmation passwords don't match.`);\r\n                                    setLoading(false);\r\n                                    break;\r\n                                }\r\n\r\n                                (async () => {\r\n                                    let response = await sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where name = '${userName}'`);\r\n                                    let results = await response.json();\r\n                                    console.log(JSON.stringify(results[0].cnt));\r\n                                    const isExist = results[0].cnt > 0;\r\n                                    if (isExist) {\r\n                                        setError(true);\r\n                                        setMessage('That user id has already been recorded.');\r\n                                    } else {\r\n                                        response = await sendQueryRequestToAPI('update', `INSERT INTO user_tbl(name, password) VALUES('${userName}', '${password}')`);\r\n                                        results = await response.json();\r\n                                        setMessage('');\r\n                                        alert('You have successfully created an account!');\r\n                                        setLoginType('login');\r\n                                    }\r\n                                    setLoading(false);\r\n                                })();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }}\r\n                >\r\n                    enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nconst LoginTypeSwitch = (\r\n    props: {\r\n        name: string,\r\n        curLoginType: string,\r\n        loginType: string,\r\n        setLoginType: Function,\r\n        resetError: Function\r\n    }\r\n) => {\r\n    const isSelected = props.loginType == props.curLoginType;\r\n    return (\r\n        <button\r\n            className={isSelected ? 'active' : ''}\r\n            onClick={() => {\r\n                if (!isSelected) {\r\n                    props.setLoginType(props.curLoginType);\r\n                    props.resetError();\r\n                }\r\n            }}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nconst TextForm = (\r\n    props: {\r\n        label: string,\r\n        stateValue: string,\r\n        stateSetter: Function,\r\n        isMask: boolean,\r\n        isDisable: boolean\r\n    }\r\n) => {\r\n    useEffect(() => {\r\n        if (props.isDisable) {\r\n            props.stateSetter('');\r\n        }\r\n    }, [props.isDisable]);\r\n    const strLen = props.stateValue.length;\r\n    return (\r\n        <div className={['form', props.isDisable ? 'disable' : ''].join(' ')}>\r\n            <span>{props.label}:</span>\r\n            <input\r\n                className={[\r\n                    !props.isDisable && strLen == 0 ? 'required' : '',\r\n                    !props.isDisable && (strLen < 5 || strLen > 15) ? 'range' : '',\r\n                    !props.isDisable && !isHanEisu(props.stateValue) ? 'ban' : ''\r\n                ].join(' ')}\r\n                type={props.isMask ? 'password' : 'text'}\r\n                value={props.stateValue}\r\n                onChange={(e) => props.stateSetter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isHanEisu = (str: string) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[A-Za-z0-9_!@]*$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LoginFrame;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { useContext } from 'react';\r\nimport './UserPlate.css';\r\n\r\nconst UserPlate = (\r\n    props: {\r\n    }\r\n) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    return (\r\n        <div id=\"user-plate\" className={[''].join(' ')}>\r\n            <div className=\"user-name\">\r\n                <span>{state.login.name}</span>\r\n            </div>\r\n            <div\r\n                className=\"logout\"\r\n\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData({\r\n                        ...state.noteData,\r\n                        dataList: []\r\n                    });\r\n                    dispatcher.setLoginParams({\r\n                        ...state.login,\r\n                        isLogin: false,\r\n                        name: ''\r\n                    });\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                }}>\r\n                <span>LOGOUT</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPlate;","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\nimport LoginFrame from './login/LoginFrame';\r\nimport UserPlate from './user/UserPlate';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                {\r\n                    !state.login.isLogin ?\r\n                        <LoginFrame />\r\n                        :\r\n                        <>\r\n                            <UserPlate />\r\n                            <TabbedPane groupName=\"system-tabs\"\r\n                                tabElements={[\r\n                                    { name: 'Account', disable: true, cont: <div></div> },\r\n                                    { name: 'Palette', disable: true, cont: <div></div> },\r\n                                    { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                                    { name: 'Symbol', disable: true, cont: <div></div> },\r\n                                    { name: 'Sampler', disable: true, cont: <div></div> },\r\n                                    { name: 'Setting', disable: true, cont: <div></div> }\r\n                                ]}\r\n                                activeNo={2}\r\n                            />\r\n                        </>\r\n                }\r\n                {/* <>\r\n                    <LoginFrame />\r\n                    <UserPlate />\r\n                    <TabbedPane groupName=\"system-tabs\"\r\n                        tabElements={[\r\n                            { name: 'Account', disable: true, cont: <div></div> },\r\n                            { name: 'Palette', disable: true, cont: <div></div> },\r\n                            { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                            { name: 'Backing', disable: true, cont: <div></div> },\r\n                            { name: 'Symbol', disable: true, cont: <div></div> },\r\n                            { name: 'Sampler', disable: true, cont: <div></div> },\r\n                            { name: 'Setting', disable: true, cont: <div></div> }\r\n                        ]}\r\n                        activeNo={2}\r\n                    />\r\n                </> */}\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BackingScript, BACKING_LEN_TYPE, BACKING_SIDE, ChordPaletteState, CHORD_MODE, DetailChange, DetailChord, DetailSection, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    if (state.scoreTabIndex != 1) {\r\n        return;\r\n    }\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Section: {\r\n            const detail = selectedData.detail as DetailSection;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callSectionEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.SECTION_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Change: {\r\n            const detail = selectedData.detail as DetailChange;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChangeEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHANGE_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.molecule != null) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                                dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case 'z': {\r\n                                fetch(\"https://vh-sqlite.glitch.me/select\", {\r\n                                    // fetch(\"http://localhost:5000/select\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        sql: 'SELECT * FROM data_tbl where pos = 8'\r\n                                    })\r\n                                })\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(data => {\r\n                                        console.log(JSON.stringify(data));\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'q': {\r\n                                fetch(\"https://vh-sqlite.glitch.me/update\", {\r\n                                    // fetch(\"http://localhost:5000/update\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n\r\n                                        sql: `insert into data_tbl(pos, value) values(${focusIndex}, '${JSON.stringify(detail)}')`\r\n                                    })\r\n                                })\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.BACKING) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        // case 'ArrowRight':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.molecule?.rootIndex + 1 });\r\n                        //     break;\r\n                        // case 'ArrowLeft':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        // case '1':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const backing = state.noteState.backingPaletteState as BackingEditorState;\r\n                    const isCorrect = backing.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.play(false);\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                        // JSON取得（開発用）\r\n                        case 'z': {\r\n                            const script: BackingScript = {\r\n                                isUsePedal: backing.isUsePedal,\r\n                                layers: backing.layers,\r\n                                useChannels: backing.useChannels\r\n                            };\r\n                            alert(JSON.stringify(script));\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'f':\r\n                    dispatcher.score.addChangeElement();\r\n                    break;\r\n                case 'w': {\r\n                    const detail = selectedData.detail as DetailChord;\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            molecule: detail.molecule,\r\n                            denominator: detail.denominator,\r\n                            // rootIndex: detail.molecule?.rootIndex,\r\n                            // isFlat: detail.isFlat,\r\n                            symbolKey: detail.symbolKey,\r\n                            sustain: detail.sustain,\r\n                        } as ChordPaletteState\r\n                    });\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\r\n\r\n// import Tone from 'lib/Tone.min.js';\r\n// import Tone from \"react-tone\";\r\nimport * as Tone from \"tone\";\r\n\r\nimport './desty.css';\r\nimport './App.css';\r\nimport MainFrame from 'contents/MainFrame';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    window.addEventListener(\"keydown\", function (e) {\r\n      // space and arrow keys\r\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n      }\r\n    }, false);\r\n\r\n  }, []);\r\n  return (\r\n    <MainFrame />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}