{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/common/utils.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentBlockDetailBar.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/common/Styles.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/footer/timing/FooterTiming.tsx","contents/systab/score/contTabs/note/footer/ensemble/FooterEnsemble.tsx","contents/systab/score/contTabs/note/footer/NoteFooter.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/floatwnd/section/SectionEditor.tsx","contents/systab/score/contTabs/note/floatwnd/setting/SettingEditor.tsx","contents/systab/score/contTabs/note/floatwnd/change/ChangeEditor.tsx","contents/systab/score/contTabs/note/floatwnd/thema/ThemaLoader.tsx","contents/systab/dialog/SourceDialog.tsx","contents/systab/dialog/ConfirmDialog.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabCommonUtil.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabRoot.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabSustain.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabVoicing.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabCondition.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabCategory.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabPattern.tsx","contents/systab/score/contTabs/thema/ScoreContThemaTab.tsx","contents/systab/score/contTabs/tune/SoundFontNames.tsx","contents/systab/score/contTabs/tune/ScoreContTuneTab.tsx","contents/systab/score/contTabs/preview/ScoreContPreviewTab.tsx","contents/systab/score/ScoreTab.tsx","contents/keyboad/KeyboardShortCutAction.tsx","contents/keyboad/KeyboadNoteTabOperation.tsx","contents/keyboad/KeyboadTuneTabOperation.tsx","contents/redux/dispatcher.tsx","contents/login/LoginFrame.tsx","contents/user/UserPlate.tsx","contents/systab/sampler/SamplerTab.tsx","contents/MainFrame.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSignatures","KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","id","groupName","tabElements","map","tab","index","disable","undefined","selectTabIndex","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","SymbolType","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","SYMBOL_PARAMS_LIST","key","MAJOR","category","TRIAD","MINOR","SUS4","DIM","AUG","MAJ7","TETRAD7TH","SEVENTH","MIN7","MINOR_MAJ7","ADD9","ADD9TH","MINOR_ADD9","SIXTH_9TH","MINOR_MINUS5","MIN7_MINUS5","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","isFlat","DIATONIC_MINOR_SCALE_LIST","getSymbolTypeName","symbolType","TETRAD6TH","SEVENTH_9TH","getSymbolParams","symbol","forEach","data","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","ChangeType","ModulateRelation","TempoRelation","TypeNoteElement","getAdjustSusValue","value","ret","toString","getChordRoot","rootInfo","keyIndex","rootIndex","getSymbolName","sendQueryRequestToAPI","queryType","sql","fetch","API_DOMAIN","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","applyOnChord","molRootIndex","denRootIndex","denInterval","fixedIntervals","fixedStruct","isAdded","intervals","cur","i","length","struct","ActionType","initialState","login","isLogin","dialog","left","top","contents","scoreTabIndex","noteData","scoreName","chordMode","SCALE","soundFont","gain","dataList","columnList","noteState","cuScoreId","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","defaultSustain","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","molecule","denominator","sustain","headAdjust","tailAdjust","backingPaletteState","backingThreads","ensembleInfo","fileURL","audio","Audio","startPosition","volume","isLoad","cloneRange","cloneDataList","tuneState","usingLen","columnIndex","isDiv3","isEdit","isAutoScroll","isPreview","tableRef","intervalRef","measureRef","BlocksRef","themaDataTree","themaName","sustains","themaState","focusRef","themaCacheList","form","root","src","beat","pattern","def","condition","tgtSymbols","minRootIndex","maxRootIndex","voicing","isCreate","reffers","sampler","Sampler","toDestination","instrument","soundUseList","Array","dinamicCache","formDispatcher","reducer","state","action","type","payload","SET_LOGIN","SET_DIALOG","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","scale","Fixed","label","labelName","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","SET_DATA_LIST","SET_NOTE_STATE","SET_TUNE_STATE","SET_THEMA_STATE","SET_THEMA_DATA","SET_SAMPLER","SET_INSTRUMENT","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","editorState","useChannels","BACKING_TOGGLE_MATRIX","sideIndex","lenIndex","channelIndex","divIndex","script","layers","table","isUse","DINAMIC_CACHE","SET_FORM_DISPATCHER","getDegreeRoot","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeMolRoot","degreeDenRoot","chordMolRoot","init","chordDenRoot","symbolName","isDiatonic","degreeName","chordName","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Change","prevCache","changeInnerJsx","changeType","MODULATE","relation","modulateRelation","isValuable","DOMINANT","KEY","oldKeyIndex","oldIsMinor","newKeyIndex","newIsMinor","domminantValue","keyAdjust","RELATIVE","PARALLEL","oldKeyName","newKeyName","TEMPO","tempoRelation","oldTempo","newTempo","DIFF","tempoDiff","RATE","tempoRate","ABSOLUTE","tempoAbsolute","BEAT","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","isMajor","rootKey","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","TRANSPLANT","CLONE","isReverse","start","end","getCloneRangeStyle","some","setSelectedList","selectorElementClickAction","setCloneRange","onContextMenu","e","setDinamicCache","INIT_PALETTE","style","clientX","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","addChangeElement","setNoteData","callChordSelector","callBackingEditor","callThemaAccessor","setCriteria","setCloneCriteria","callSectionEditor","callChangeEditor","deleteCurElement","menuList","ChordSelector","canvasRef","PREVIEW","canvas","width","height","updatePianoView","ctx","getContext","list","denIndex","fillStyle","fillRect","WIDTH","posX","keyboadList","color","isBlack","HEIGHT","keyboad","strokeRect","save","chordList","symbolList","beatList","operationJsx","isDirect","degS","degF","chdS","chdF","isHalf","isDenominator","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getAdjustOprJsx","offset","cls","callback","scaleMatrixRowJsxList","getScaleMatrixRowJsx","titleLabel","chordInfoList","boxJsxList","info","degreeList","souondList","degreeRoot","soundRoot","BLANK","Adjuster","CurrentBlockDetailBar","curData","innerJsx","chordRoot","baseBlockJsx","buildInfoBlock","chordBlockJsx","String","structList","len","interval","sound","sectionBlockJsx","changeInfo","changeBlockJsx","dataRecordList","jsxList","BackingOperation","paletteState","curSideScript","selectedLenIndex","curLenBean","lens","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","buttonList","button","channelRowSize","onChange","newValue","parseInt","target","diff","layer","record","j","abs","setPaletteState","val","isDisabled","getActiveState","curLayerIndex","lineIndex","back","curCellRange","getCellRange","backLenBean","k","backRange","isOverlapJudge","range1","range2","head","getLenSize","size","NotesMatrix","channelList","matrixLayersJsx","l","linesJsx","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","curLayer","sustainLength","measureInner","measureLength","cnt","isLimit","limitLeft","limitJsx","BackingTable","testPlaySound","channelJsxList","blankAdjust","curIndex","isExist","soundFullName","volumeList","isEditPattern","setLayerIndex","isUsePedal","setUsePedal","styled","div","backgroundColor","padding","margin","textAlign","defaultProps","opacity","_Text","span","fontSize","fontWeight","StructMatrix","isDispVoicing","structTable","sort","a","b","octave","structIndex","overVoicingList","structs","cols","soundName","soundIndex","floor","isNone","channel","isOverVoicing","setUseChannels","BackingContext","createContext","getChannelList","BackingEditor","BACKING_PALETTE","triggerAttack","setTimeout","triggerRelease","operation","isCorrect","preview","stop","play","setCurBackingScript","thema","applyBackingPattern","applyBackingVoicing","Provider","FIXED_BLANK","getAdjustCls","FooterTiming","dataCount","scrollRef","blockJsxList","setBlockJsxList","measureJsxList","setMeasureJsxList","total","setTotal","chordDetail","isCur","isNear","scrollTo","behavior","totalWidth","FooterEnsemble","isPlay","setPlay","setStartPosition","paused","setNoteState","files","objectURL","window","URL","createObjectURL","min","max","Number","onerror","currentTime","pause","NoteFooter","curType","activeTabIndex","setActiveTabIndex","InitEditor","setTempo","setRythm","setKey","setScale","initBean","setInitParam","getItemSelector","optionsJsx","display","item","SectionEditor","setLabelName","SECTION_PALETTE","sectionBean","section","setSectionParam","SettingEditor","SETTING_EDITOR","defsus","sustainJsxList","getItemSelectorJsx","getItemNumberRangeJsx","ChangeEditor","setChangeType","setModulateRelation","setDomminantValue","setKeyAdjust","setTempoRelation","setTempoRate","setTempoDiff","setTempoAbsolute","setBeat","isInputOK","setInputOK","CHANGE_PALETTE","bean","checkInput","itemsJsxList","concat","Object","values","filter","str","change","applyChangeParams","ThemaLoader","patterns","setPatterns","THEMA_ACCESSOR","sus","Soundfont","AudioContext","release","then","setInstruments","schedule","time","note","duration","itemJsxList","_Item","_Wrap","_WrapList","_WrapMatrix","SourceDialog","source","setSource","closeDialog","parse","ConfirmDialog","_MainFrame","_Message","message","_Button","EditModeBorder","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","totalBeat","totalMsec","lastBar","bar","isModalBlind","callDialog","curScoreId","console","log","alert","ScoreContLiblaryTab","focus","setFocus","setMessage","recordList","setRecordList","titleList","setTitleList","setEdit","title","setTitle","setChordMode","setLoad","reload","initFocus","response","json","results","catch","error","chord_mode","createButton","createInfoRecored","isDisplayMsg","selectedRecord","result","data_cnt","createFixedForm","createTextForm","createSelectForm","optionJSXList","createButtonRecord","buttonJSXList","disabled","ThemaTabRoot","getFocusElement","setThemaState","setThemaeData","addChildSustain","ThemaTabSustain","validate","addChildPattern","ThemaTabVoicing","param","getList","callBackingVoicingEditor","ThemaTabCondition","parent","voicings","addChildVoicing","ThemaTabCategory","v","isNaN","addChildCondition","ThemaTabPattern","getChannel","notes","count","line","cell","getNotes","callBackingPatternEditor","tgtTypes","addChildCategory","ScoreContThemaTab","dataIndexies","treeItemJsxList","setTreeItemJsxList","buildIndex","activeRefList","depth","symbols","indentWidth","ChildCnt","isClose","createTreeItemJsx","FluidR3_GM","ScoreContTuneTab","curColumn","len4","len8","len16","len4div3","len8div3","tune","setColumnList","setState","totalColumnSize","useMemo","column","barJsx","_Bar","_Scale","isHead","columnJsxList","_Block","_Size","lineJsxList","isNotes","_Line","playSoundFont","adjustScrollY","getSoundName","_Notes","isScale","_Box","boxList","intervalListJSX","num","_Interval","_Num","_SoundName","createSwitch","_LenSwitch","createLenSwitch","createExecuteButton","_ExecuteButton","_Header","_Editor","_Operation","soundFontName","_SoundFont","isEditable","setSoundFont","_Gain","step","getSoundFontSelectorJsx","addColumn","remooveCur","adjustWidth","stopPreview","playPreview","moveAll","_WrapInterval","_WrapTimeLine","_Measure","_BlockLine","_TableWrap","onScroll","scrollLeft","scrollTop","_Table","select","input","_ButtonBase","css","BEAT_WIDTH","NOTES_HEIGHT","ScoreContPreviewTab","notesTable","setNotesTable","blocks","setBlocks","barPos","setBarPos","setCurIndex","bpm","setBpm","limit","setLimist","curPos","block","tabY","m","posAdjust","widthAdjust","reverse","blockListJsx","_Sus","_ChordName","boxListJsx","box","right","lineListJsx","notesListJsx","taskList","clearTimeout","thr","clearInterval","releaseAll","progressValue","_Current","ScoreTab","isScoreEdit","keyboardShortCutAction","selectedData","selectedCache","diatonicChord","apllyFlashCur","releaseCriteria","baseBacking","apllyFlashList","releaseCloneCriteria","isFirstCurLen","getCurLenIndex","updateLenIndex","isLastCurLen","getCurVelocity","updateCurVolume","changeLayerIndex","setCurLen","getCurLenBean","getSideScript","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","insertCloneData","keyboadNoteTabOperation","applyState","applyColumn","prevSoundIndex","keyboadTuneTabOperation","Dispatcher","dispatchBase","setLoginParams","arg","setFormDispatcher","setSampler","sample","loadSampler","apllyFlasah","cloneData","getInitElement","setEditMode","addNoteElement","side","LEFT","RIGHT","backingState","selectedChannelIndex","setChannelRowSize","sideScript","velocity","use","setCorrect","baseLayers","channelCount","lensSplitCount","baseTable","y","x","isScore","threads","totalTime","pastTime","audioHead","adjust","curTime","Date","getTime","limitIndex","next","editor","barMs","boxMs","adjustOverlap","headMs","lenValue","replace","curLenMs","tail","lag","patternDef","patternEl","sustainEl","VoicingDef","themaTree","rootBean","sustainBean","patternBean","categoryBean","conditions","conditionBean","voicingBean","isAdd","totalDiv3","subLen4","subLen8","this","LoginTypeSwitch","loginType","curLoginType","setLoginType","resetError","TextForm","stateSetter","strLen","stateValue","isHanEisu","isMask","match","LoginFrame","userName","setUserName","password","setPassword","passConfirm","setPassConfirm","isError","setError","isLoading","setLoading","enterDisable","UserPlate","SamplerTab","samples","setSamples","url","checked","createRecoredJsxList","samplesList","getSamplesList","MainFrame","useReducer","actionType","tabIndex","onKeyDown","App","document","oncontextmenu","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a6cb500.chunk.js","sourcesContent":["import { ChangeType } from \"contents/redux/store\";\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport enum TimeSignatures {\r\n    BEAT_4ON4 = '4/4',\r\n    BEAT_2ON4 = '2/4',\r\n    BEAT_3ON4 = '3/4',\r\n    BEAT_6ON8 = '6/8',\r\n    BEAT_12ON8 = '12/8',\r\n}\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\n\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n]\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n    MIN7_MINUS5,\r\n}\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD6TH,\r\n    ADD9TH,\r\n    SEVENTH_9TH,\r\n    SIXTH_9TH\r\n}\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    category: SymbolType;\r\n    name: string;\r\n    struct: string[];\r\n    intervals: number[];\r\n}\r\n\r\n// export const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n//     { key: SymbolKey.MAJOR, category: SymbolType.TRIAD, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n//     { key: SymbolKey.MINOR, category: SymbolType.TRIAD, sortNo: 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n//     { key: SymbolKey.SUS4, category: SymbolType.TRIAD, sortNo: 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n//     { key: SymbolKey.DIM, category: SymbolType.TRIAD, sortNo: 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n//     { key: SymbolKey.AUG, category: SymbolType.TRIAD, sortNo: 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n//     { key: SymbolKey.MAJ7, category: SymbolType.TETRAD7TH, sortNo: 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n//     { key: SymbolKey.SEVENTH, category: SymbolType.TETRAD7TH, sortNo: 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n//     { key: SymbolKey.MIN7, category: SymbolType.TETRAD7TH, sortNo: 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n//     { key: SymbolKey.MINOR_MAJ7, category: SymbolType.TETRAD7TH, sortNo: 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n//     { key: SymbolKey.ADD9, category: SymbolType.TETRAD9TH, sortNo: 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n//     { key: SymbolKey.MINOR_ADD9, category: SymbolType.TETRAD9TH, sortNo: 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n//     { key: SymbolKey.SIXTH_9TH, category: SymbolType.OTHER, sortNo: 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n//     { key: SymbolKey.MINOR_MINUS5, category: SymbolType.TRIAD, sortNo: 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n// ];\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, category: SymbolType.TRIAD, name: \"\", \"struct\": ['p1', 'M3', 'p5'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, category: SymbolType.TRIAD, name: \"m\", \"struct\": ['p1', 'm3', 'p5'], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, category: SymbolType.TRIAD, name: \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, category: SymbolType.TRIAD, name: \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, category: SymbolType.TRIAD, name: \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, category: SymbolType.TETRAD7TH, name: \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, category: SymbolType.TETRAD7TH, name: \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, category: SymbolType.TETRAD7TH, name: \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, category: SymbolType.TETRAD7TH, name: \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, category: SymbolType.ADD9TH, name: \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, category: SymbolType.ADD9TH, name: \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, category: SymbolType.SIXTH_9TH, name: \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, category: SymbolType.TRIAD, name: \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.MIN7_MINUS5, category: SymbolType.TETRAD7TH, name: \"m7(-5)\", \"struct\": ['p1', 'm3', 'd5', 'm7'], \"intervals\": [0, 3, 6, 10] },\r\n];\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.ADD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n    isFlat: boolean;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR, isFlat: false},\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR, isFlat: false },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR, isFlat: false },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5, isFlat: false },\r\n];\r\n\r\nexport const DIATONIC_MINOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR_MINUS5, isFlat: false },\r\n    { degreeIndex: 3, symbolKey: SymbolKey.MAJOR, isFlat: true },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 8, symbolKey: SymbolKey.MAJOR, isFlat: true },\r\n    { degreeIndex: 10, symbolKey: SymbolKey.MAJOR, isFlat: true },\r\n];\r\n\r\nexport const getChangeTypeLabel = (changeType: ChangeType) => {\r\n    switch(changeType) {\r\n        case ChangeType.MODULATE: return 'MODULATE';\r\n        case ChangeType.TEMPO: return 'TEMPO';\r\n        case ChangeType.BEAT: return 'BEAT';\r\n    }\r\n}\r\n\r\nexport const API_DOMAIN = 'https://vh-sqlite.glitch.me';\r\n// export const API_DOMAIN = 'http://localhost:5000';","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // const [tabList, setTabList] = useState<JSX.Element[]>([]);\r\n    // const [contList, setContList] = useState<JSX.Element[]>([]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const tabList: JSX.Element[] = [];\r\n    //     const contList: JSX.Element[] = [];\r\n    //     props.tabElements.forEach((tab, index) => {\r\n    //         tabList.push(\r\n    //             <TabLabel\r\n    //                 key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n    //                 selectTab={() => selectTabIndex(index)}\r\n    //             />)\r\n    //             ;\r\n    //         contList.push(\r\n    //             <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n    //         );\r\n    //     });\r\n    //     setTabList(tabList);\r\n    //     setContList(contList);\r\n    //     console.log('create TabbedPane');\r\n    // }, [activeNo]);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return <div className={[\r\n        'tab-cont',\r\n        !props.isActive ? 'hidden' : ''\r\n    ].join(' ')}>{props.cont}</div>;\r\n}\r\n\r\nexport default TabbedPane;","import { Key12Info } from \"contents/redux/store\";\r\nimport { Sampler } from \"tone\";\r\nimport { API_DOMAIN, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SymbolType, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport const initDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\nexport const loadSampler = (sample: Object) => {\r\n    return new Sampler(sample).toDestination();\r\n}\r\n\r\nexport const getSymbolTypeName = (symbolType: SymbolType): string => {\r\n    return ((): string => {\r\n        switch (symbolType) {\r\n            case SymbolType.TRIAD: return 'Triad'\r\n            case SymbolType.TETRAD7TH: return '7th'\r\n            case SymbolType.TETRAD6TH: return '6th'\r\n            case SymbolType.ADD9TH: return 'Add9th'\r\n            case SymbolType.SIXTH_9TH: return '6th-9th'\r\n            case SymbolType.SEVENTH_9TH: return '7th-9th'\r\n        }\r\n    })();\r\n}\r\n\r\nexport const getSymbolsIncludeCategory = (symbolType: SymbolType): SymbolKey[] => {\r\n    return SYMBOL_PARAMS_LIST.filter((symbol)=>{\r\n        return symbolType === symbol.category;\r\n    }).map((symbol) => symbol.key);\r\n}\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n\r\nexport const getAdjustSusValue = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = '+' + value;\r\n        else ret = value.toString();\r\n    }\r\n    return ret;\r\n}\r\n\r\n/**　コードネームを返す */\r\nexport const getChordRoot = (rootInfo: Key12Info | null, keyIndex: number): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n        name = list[(rootInfo.rootIndex + keyIndex) % 12];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　シンボルを返す */\r\nexport const getSymbolName = (symbolKey: SymbolKey): string => {\r\n    let name = '';\r\n    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n        if (symbol.key == symbolKey) {\r\n            name = symbol.name;\r\n        }\r\n    });\r\n    return name;\r\n}\r\n\r\nexport const createQueryRequestInit = (sql: string): RequestInit => {\r\n    return {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ sql })\r\n    }\r\n}\r\n\r\nexport const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n    return fetch(API_DOMAIN + '/' + queryType,\r\n        createQueryRequestInit(sql)\r\n    );\r\n}\r\n\r\nexport const applyOnChord = (symbol: SymbolParams, molRootIndex: number, denRootIndex: number) => {\r\n\r\n    // 分母とコードルートの差分を算出\r\n    let denInterval = denRootIndex - molRootIndex;\r\n    if (denInterval < 0) {\r\n        denInterval += 12;\r\n    }\r\n    const fixedIntervals: number[] = [];\r\n    const fixedStruct: string[] = [];\r\n    let isAdded = false;\r\n    symbol.intervals.forEach((cur, i) => {\r\n        if (i < symbol.intervals.length) {\r\n            // const next = symbol.intervals[i + 1];\r\n            // if(cur <= denInterval && denInterval < next) {\r\n            if (!isAdded && denInterval < cur) {\r\n                fixedIntervals.push(denInterval);\r\n                fixedStruct.push('den');\r\n                isAdded = true;\r\n            }\r\n            if (denInterval != cur) {\r\n                fixedIntervals.push(cur);\r\n                fixedStruct.push(symbol.struct[i]);\r\n            }\r\n        }\r\n    });\r\n    if (!isAdded) {\r\n        fixedIntervals.push(denInterval);\r\n        fixedStruct.push('den');\r\n    }\r\n    symbol.intervals = fixedIntervals;\r\n    symbol.struct = fixedStruct;\r\n\r\n}","import { SymbolKey, SymbolType, SYMBOL_PARAMS_LIST, TimeSignatures } from 'contents/common/define'\r\nimport { initDefaultSampler } from 'contents/common/utils'\r\nimport { Sampler } from 'tone'\r\nimport Soundfont from 'soundfont-player';\r\nimport { Instrument } from 'tone/build/esm/instrument/Instrument'\r\nimport { ActionType } from './reducer'\r\nimport { FormDispatcher } from './store/FormDispatcher';\r\nimport { TuneState } from './store/TuneState';\r\n\r\nexport type Store = {\r\n    login: LoginParams;\r\n    dialog: Dialog;\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    tuneState: TuneState;\r\n    themaDataTree: ThemaDataTree;\r\n    themaState: ThemaState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    instrument: null | Soundfont.Player;\r\n    soundUseList: number[];\r\n    dinamicCache: null | object;\r\n    formDispatcher: FormDispatcher;\r\n}\r\n\r\nexport type LoginParams = {\r\n    isLogin: boolean,\r\n    id: number,\r\n    name: string\r\n}\r\n\r\nexport type Dialog = {\r\n    left: number;\r\n    top: number;\r\n    arg?: object;\r\n    contents: null | JSX.Element;\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\nexport type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    changePalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE,\r\n    CONTEXT_MENU,\r\n    CHORD_PALETTE,\r\n    SECTION_PALETTE,\r\n    CHANGE_PALETTE,\r\n    INIT_PALETTE,\r\n    BACKING_PALETTE,\r\n    SETTING_EDITOR,\r\n    THEMA_ACCESSOR,\r\n}\r\n\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    // rootIndex: number;\r\n    // isFlat: false;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain, Adjuster\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    target: BackingEditTarget;\r\n    isDispVoicing: boolean;\r\n    isEditPattern: boolean;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    channelRowSize: number;\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type BackingEditTarget = 'note' | 'thema-pattern' | 'thema-voicing';\r\n\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    soundFont: SoundFontProp;\r\n    dataList: NoteElement[];\r\n    columnList: Column[];\r\n}\r\n\r\nexport type SoundFontProp = {\r\n    name: null | Soundfont.InstrumentName;\r\n    gain: number;\r\n}\r\n\r\nexport type Column = {\r\n    len4: number;\r\n    len8: number;\r\n    len16: number;\r\n    len4div3: number;\r\n    len8div3: number;\r\n    soundIndex: number;\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    cuScoreId: number;\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    defaultSustain: number;\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: null | BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n    ensembleInfo: EnsembleInfo;\r\n    cloneRange: number[];\r\n    cloneDataList: NoteElement[];\r\n}\r\n\r\nexport type ThemaState = {\r\n    focusIndex: number;\r\n    focusRef: null | ThemaReffer;\r\n    themaCacheList: ThemaIndexedElement[];\r\n    form: ThemaForm;\r\n    isCreate: boolean;\r\n}\r\n\r\nexport type ThemaForm = {\r\n    root: ThemaFormRoot;\r\n    sustain: ThemaFormSustain;\r\n    pattern: ThemaFormPattern;\r\n    category: ThemaFormCategory;\r\n    condition: ThemaFormCondition;\r\n    voicing: ThemaFormVoicing;\r\n}\r\n\r\nexport interface ThemaFormRoot {\r\n    themaName: string;\r\n    src: string;\r\n}\r\nexport interface ThemaFormSustain {\r\n    beat: null | number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport interface ThemaFormPattern {\r\n    name: string;\r\n    def: null | BackingPattern;\r\n    src: string;\r\n}\r\nexport interface ThemaFormCategory {\r\n    category: null | SymbolType;\r\n}\r\nexport interface ThemaFormCondition {\r\n    tgtSymbols: SymbolKey[];\r\n    minRootIndex: number;\r\n    maxRootIndex: number;\r\n}\r\nexport interface ThemaFormVoicing {\r\n    def: null | BackingVoicing;\r\n    src: string;\r\n}\r\n\r\nexport type ThemaIndexedElement = {\r\n    isClose: boolean;\r\n    ChildCnt: number;\r\n    type: ThemaElementType;\r\n    reffer: ThemaReffer;\r\n    parent: null | ThemaIndexedElement;\r\n}\r\n\r\nexport type ThemaReffer = ThemaDataTree | BTSustain | BTPattern | VoicingTargetType | VoicingTargetCondition | BTVoicing;\r\n\r\nexport type ThemaElementType = 'root' | 'sustain' | 'pattern' | 'category' | 'condition' | 'voicing';\r\n\r\nexport type ThemaDataTree = {\r\n    themaName: string;\r\n    sustains: BTSustain[];\r\n}\r\n\r\nexport type BTSustain = {\r\n    beat: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    patterns: BTPattern[];\r\n}\r\n\r\nexport type BTPattern = {\r\n    name: string;\r\n    def: null | BackingPattern;\r\n    tgtTypes: VoicingTargetType[];\r\n}\r\n\r\nexport type BackingPattern = {\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type VoicingTargetType = {\r\n    symbolType: SymbolType;\r\n    conditions: VoicingTargetCondition[];\r\n}\r\n\r\nexport type VoicingTargetCondition = {\r\n    tgtSymbols: SymbolKey[];\r\n    minRootIndex: number;\r\n    maxRootIndex: number;\r\n    voicings: BTVoicing[];\r\n}\r\n\r\nexport type BTVoicing = {\r\n    def: null | BackingVoicing;\r\n}\r\n\r\nexport type BackingVoicing = {\r\n    useChannels: ChannelParam[];\r\n}\r\n\r\ntype EnsembleInfo = {\r\n    fileURL: string;\r\n    audio: HTMLAudioElement;\r\n    startPosition: number;\r\n    volume: number;\r\n    isLoad: boolean;\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    TRANSPLANT,\r\n    CLONE,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    labelName: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    molecule: Key12Info | null;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type Key12Info = {\r\n    rootIndex: number;\r\n    isFlat: boolean;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailChange = {\r\n    changeType: null | ChangeType;\r\n    modulateRelation: null | ModulateRelation;\r\n    domminantValue: number;\r\n    keyAdjust: number;\r\n    tempoRelation: null | TempoRelation;\r\n    tempoDiff: number;\r\n    tempoRate: number;\r\n    tempoAbsolute: number;\r\n    beat: null | TimeSignatures;\r\n}\r\n\r\nexport enum ChangeType {\r\n    MODULATE = 'Modulate',\r\n    TEMPO = 'Tempo',\r\n    BEAT = 'Beat'\r\n}\r\n\r\n// export type ChangeModulation = {\r\n//     relation: ModulateRelation;\r\n//     value: number;\r\n// }\r\n\r\nexport enum ModulateRelation {\r\n    DOMINANT = 'Domminant',\r\n    PARALLEL = 'Parallel',\r\n    RELATIVE = 'Relative',\r\n    KEY = 'Key',\r\n}\r\n\r\n// export type ChangeBeat = {\r\n//     value: number;\r\n// }\r\n\r\n// export type ChangeTempo = {\r\n//     relation: TempoRelation;\r\n//     value: number;\r\n// }\r\n\r\nexport enum TempoRelation {\r\n    DIFF = 'Diff',\r\n    RATE = 'Rate',\r\n    ABSOLUTE = 'Absolute'\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailChange | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Change = 'Change',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    login: {\r\n        isLogin: false,\r\n        id: -1,\r\n        name: ''\r\n    },\r\n    dialog: {\r\n        left: 0,\r\n        top: 0,\r\n        contents: null\r\n    },\r\n    scoreTabIndex: 0,\r\n    noteData: {\r\n        scoreName: '',\r\n        chordMode: CHORD_MODE.SCALE,\r\n        soundFont: {\r\n            name: null,\r\n            gain: 1\r\n        },\r\n        dataList: [],\r\n        columnList: []\r\n    },\r\n    noteState: {\r\n        cuScoreId: -1,\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        defaultSustain: 2,\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            molecule: { rootIndex: 0, isFlat: false },\r\n            denominator: null,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4,\r\n            headAdjust: 0,\r\n            tailAdjust: 0\r\n        },\r\n        backingPaletteState: null,\r\n        backingThreads: [],\r\n        ensembleInfo: {\r\n            fileURL: '',\r\n            audio: new Audio(),\r\n            startPosition: 0,\r\n            volume: 3,\r\n            isLoad: false\r\n        },\r\n        cloneRange: [],\r\n        cloneDataList: []\r\n    },\r\n    tuneState: {\r\n        usingLen: 4,\r\n        columnIndex: 0,\r\n        isDiv3: false,\r\n        isEdit: false,\r\n        isAutoScroll: false,\r\n        isPreview: false,\r\n        tableRef: {} as React.MutableRefObject<HTMLDivElement>,\r\n        intervalRef: {} as React.MutableRefObject<HTMLDivElement>,\r\n        measureRef: {} as React.MutableRefObject<HTMLDivElement>,\r\n        BlocksRef: {} as React.MutableRefObject<HTMLDivElement>\r\n    },\r\n    themaDataTree: {\r\n        themaName: 'thema001',\r\n        sustains: []\r\n    },\r\n    themaState: {\r\n        focusIndex: 0,\r\n        focusRef: null,\r\n        themaCacheList: [],\r\n        form: {\r\n            root: {\r\n                themaName: '',\r\n                src: ''\r\n            },\r\n            sustain: {\r\n                beat: null,\r\n                headAdjust: 0,\r\n                tailAdjust: 0\r\n            },\r\n            pattern: {\r\n                name: '',\r\n                def: null,\r\n                src: ''\r\n            },\r\n            category: {\r\n                category: SymbolType.TRIAD\r\n            },\r\n            condition: {\r\n                tgtSymbols: [],\r\n                minRootIndex: 0,\r\n                maxRootIndex: 11\r\n            },\r\n            voicing: {\r\n                def: null,\r\n                src: ''\r\n            }\r\n        },\r\n        isCreate: false\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initDefaultSampler(),\r\n    instrument: null,\r\n    soundUseList: new Array(88),\r\n    dinamicCache: null,\r\n    formDispatcher: {}\r\n};","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache, BackingEditorState } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_LOGIN,\r\n    SET_DIALOG,\r\n    SELECT_SCORETAB,\r\n    ADD_SECTION,\r\n    SET_DEGREE_INDEX,\r\n    SET_SYMBOL_KEY,\r\n    DETAIL_PARAMS_SETTER,\r\n    GET_ELEMENT_REFFER,\r\n    INIT_DEFAULT_ELEMENTS,\r\n    SELECT_NOTE_ELEMENT,\r\n    GET_REFFER,\r\n    GET_REFFER_CONTEXT,\r\n    GET_REFFER_CHORD_PALETTE,\r\n    GET_REFFER_SECTION_PALETTE,\r\n    GET_REFFER_BACKING_PALETTE,\r\n    FLOATWND_STATE,\r\n    CHORD_PALETTE_SETTER,\r\n    SET_NOTE_DATA,\r\n    SET_DATA_LIST,\r\n    SET_NOTE_STATE,\r\n    SET_TUNE_STATE,\r\n    SET_THEMA_DATA,\r\n    SET_THEMA_STATE,\r\n    SET_SAMPLER,\r\n    SET_INSTRUMENT,\r\n    INIT_BACKING_PALETTE,\r\n    SET_USE_CHANNELS,\r\n    BACKING_TOGGLE_MATRIX,\r\n    DINAMIC_CACHE,\r\n    SET_FORM_DISPATCHER\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_LOGIN:\r\n            return { ...state, login: payload.login };\r\n        case ActionType.SET_DIALOG:\r\n            return { ...state, dialog: payload.dialog };\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            if (detail.molecule == null) {\r\n                detail.molecule = { rootIndex: payload.degreeIndex, isFlat: false };\r\n            } else {\r\n                detail.molecule.rootIndex = payload.degreeIndex;\r\n            }\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 80,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                labelName: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.SET_TUNE_STATE: {\r\n            return {\r\n                ...state, tuneState: payload.tuneState\r\n            };\r\n        }\r\n        case ActionType.SET_THEMA_STATE: {\r\n            return {\r\n                ...state, themaState: payload.themaState\r\n            };\r\n        }\r\n        case ActionType.SET_THEMA_DATA: {\r\n            return {\r\n                ...state, themaDataTree: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_SAMPLER: {\r\n            return {\r\n                ...state, sampler: payload.sampler\r\n            };\r\n        }\r\n        case ActionType.SET_INSTRUMENT: {\r\n            return {\r\n                ...state, instrument: payload.instrument\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const editorState = state.noteState.backingPaletteState as BackingEditorState;\r\n            // const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            // const script: BackingLayer[] = new Array(2);\r\n            // for (let i = 0; i < 2; i++) {\r\n            //     const channelCount = backingPaletteState.useChannels.length;\r\n            //     const lensSplitCount = baseScript[i].lens.length;\r\n            //     const baseTable = baseScript[i].table;\r\n            //     const table: boolean[][][] = new Array(channelCount);\r\n\r\n            //     for (let y = 0; y < channelCount; y++) {\r\n            //         if (y < baseTable.length) {\r\n            //             table[y] = baseTable[y];\r\n            //         } else {\r\n            //             table[y] = new Array(lensSplitCount);\r\n            //             for (let x = 0; x < lensSplitCount; x++) {\r\n            //                 table[y][x] = new Array(1);\r\n            //                 table[y][x][0] = false;\r\n            //             }\r\n            //         }\r\n            //     }\r\n            //     script[i] = {\r\n            //         ...baseScript[i],\r\n            //         table,\r\n            //     };\r\n            // }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...editorState,\r\n                        useChannels,\r\n                        // layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const editorState = state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = editorState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...editorState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DINAMIC_CACHE: {\r\n            return {\r\n                ...state, dinamicCache: payload.dinamicCache\r\n            };\r\n        }\r\n        case ActionType.SET_FORM_DISPATCHER: {\r\n            return {\r\n                ...state, formDispatcher: payload.formDispatcher\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, DIATONIC_MINOR_SCALE_LIST, DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES, getChangeTypeLabel, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getChordRoot, getSymbolName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailChange, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress, Key12Info, ChangeType, ModulateRelation, TempoRelation } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Scale: </span>\r\n                        <span>{detail.scale}</span>\r\n                    </div>\r\n                );\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Key: </span>\r\n                        {/* <span>{detail.key}</span> */}\r\n                        <span>{\r\n                            detail.scale == SCALE_LIST[0] ?\r\n                                KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                        }</span>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            const degreeMolRoot = getDegreeRoot(detail.molecule);\r\n            const degreeDenRoot = getDegreeRoot(detail.denominator);\r\n            const chordMolRoot = getChordRoot(detail.molecule, cache.init.keyIndex);\r\n            const chordDenRoot = getChordRoot(detail.denominator, cache.init.keyIndex);\r\n            let symbolName = '';\r\n            let isDiatonic = false;\r\n            let degreeName = 'blank';\r\n            let chordName = '-';\r\n            if (degreeMolRoot != null) {\r\n                symbolName = getSymbolName(detail.symbolKey);\r\n                const diatonitChordList = cache.init.scale == 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES : DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n                isDiatonic = diatonitChordList.includes(degreeMolRoot + symbolName);\r\n                degreeName = `${degreeMolRoot}${symbolName}${degreeDenRoot == null ? '' : '/' + degreeDenRoot}`;\r\n                chordName = `${chordMolRoot}${symbolName}${chordDenRoot == null ? '' : '/' + chordDenRoot}`;\r\n            }\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.molecule == null ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        // ダイレクトモード時は非表示\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}\r\n                    >\r\n                        <span>{degreeName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.labelName}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Change: {\r\n            const detail = props.noteElement.detail as DetailChange;\r\n            const prevCache = state.noteState.cacheList[props.index - 1];\r\n            let changeInnerJsx = <></>;\r\n            switch (detail.changeType) {\r\n                case null: {\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>No setting</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>***</span>]\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.MODULATE: {\r\n                    const relation = detail.modulateRelation === null ? 'None' : detail.modulateRelation.toString();\r\n                    const isValuable = detail.modulateRelation === ModulateRelation.DOMINANT || detail.modulateRelation === ModulateRelation.KEY;\r\n                    let value = 0;\r\n                    const oldKeyIndex = prevCache.init.keyIndex;\r\n                    const oldIsMinor = prevCache.init.scale == 'minor';\r\n                    const newKeyIndex = cache.init.keyIndex;\r\n                    const newIsMinor = cache.init.scale == 'minor';\r\n                    switch (detail.modulateRelation) {\r\n                        case ModulateRelation.DOMINANT: {\r\n                            value = detail.domminantValue;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.KEY: {\r\n                            value = detail.keyAdjust;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.RELATIVE: { } break;\r\n                        case ModulateRelation.PARALLEL: { } break;\r\n                    }\r\n                    const oldKeyName = (!oldIsMinor ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST)[oldKeyIndex];\r\n                    const newKeyName = (!newIsMinor ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST)[newKeyIndex];\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>{relation + (isValuable ? ': ' : '')}</span>\r\n                                {isValuable ? (<span>{value}</span>) : <></>}\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>{oldKeyName} → {newKeyName}</span>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.TEMPO: {\r\n                    const relation = detail.tempoRelation === null ? 'None' : detail.tempoRelation.toString();\r\n                    let value = 0;\r\n                    const oldTempo = prevCache.init.tempo;\r\n                    const newTempo = cache.init.tempo;\r\n                    switch (detail.tempoRelation) {\r\n                        case TempoRelation.DIFF: {\r\n                            value = detail.tempoDiff;\r\n                        }\r\n                            break;\r\n                        case TempoRelation.RATE: {\r\n                            value = detail.tempoRate;\r\n                        }\r\n                            break;\r\n                        case TempoRelation.ABSOLUTE: {\r\n                            value = detail.tempoAbsolute;\r\n                        }\r\n                            break;\r\n                    }\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>{relation + ': '}</span>\r\n                                <span>{value}</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>{`${oldTempo} → ${newTempo}`}</span>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.BEAT: {\r\n                    changeInnerJsx = (\r\n                        <>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n            }\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n            }\r\n            return (\r\n                <>\r\n                    <div className=\"change-type\">\r\n                        {/* <span>{detail.changeType === null ? '' : getChangeTypeLabel(detail.changeType)}</span> */}\r\n                        <span>{detail.changeType === null ? 'Change' : detail.changeType.toString()}</span>\r\n                    </div>\r\n                    {changeInnerJsx}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**　ディグリーネームを返す */\r\nconst getDegreeRoot = (rootInfo: Key12Info | null): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        name = list[rootInfo.rootIndex];\r\n    }\r\n    return name;\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailChange, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport CurrentElementInfo from '../sideDetail/CurrentElementInfo';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Change: return 'detail-change';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.TRANSPLANT) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.molecule != null;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getCloneRangeStyle = (): string => {\r\n        if (editMode != EditMode.CLONE) return '';\r\n\r\n        if (![TypeNoteElement.Fixed, TypeNoteElement.Init].includes(type)) {\r\n            const cloneRange = state.noteState.cloneRange;\r\n            const isReverse = cloneRange[0] > cloneRange[1];\r\n            const start = cloneRange[isReverse ? 1 : 0];\r\n            const end = cloneRange[isReverse ? 0 : 1];\r\n            if (props.index >= start && props.index <= end) {\r\n                return 'copy-selected';\r\n            } else {\r\n                return 'copy-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n                const isMajor = cache.init.scale == 'major';\r\n                const scaleList = isMajor ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n                const rootKey = scaleList[cache.init.keyIndex];\r\n                // スケールモード時のみ調性を表示\r\n                if (chordMode === CHORD_MODE.SCALE) {\r\n                    retJsxList.push(\r\n                        <div key={retJsxList.length}\r\n                            className={[\r\n                                'scale',\r\n                                isMajor ? 'maj' : 'min'\r\n                            ].join(' ')}>\r\n                            <span>[{rootKey}]</span>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord,\r\n                            TypeNoteElement.Change,\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle(),\r\n                        getCloneRangeStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else if (editMode == EditMode.TRANSPLANT) {\r\n                            selectorElementClickAction();\r\n                        } else if (editMode == EditMode.CLONE) {\r\n                            dispatcher.score.setCloneRange(props.index);\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init: {\r\n                                    dispatcher.setDinamicCache(props.noteElement.detail);\r\n                                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                case TypeNoteElement.Change:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { SYMBOL_PARAMS_LIST, SYMBOL_TYPE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { ChordPaletteState, DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.CONTEXT_MENU) {\r\n    //     return (<></>);\r\n    // }\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        molecule: { rootIndex: 0, isFlat: false },\r\n                        denominator: null,\r\n                        symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                        sustain: state.noteState.defaultSustain,\r\n                    } as ChordPaletteState\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT CHANGE', keyName: 'F', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChangeElement();\r\n                close();\r\n            }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'SET BLANK', keyName: 'D', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        const noteData = state.noteData;\r\n                        const detail = noteData.dataList[state.noteState.focusIndex].detail as DetailChord;\r\n                        detail.molecule = null;\r\n                        detail.denominator = null;\r\n                        dispatcher.score.setNoteData(noteData);\r\n                        // dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callChordSelector();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'THEMA', keyName: 'T', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callThemaAccessor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'COPY BACKING', keyName: 'X', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.setCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'CLONE BLOCK', keyName: 'Q', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.setCloneCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callSectionEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Change: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHANGE', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callChangeEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.deleteCurElement();\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: 'call' | 'order';\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { getSymbolName, getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE, ChordPaletteState, EditMode } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordSelector.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n    const isPreview = state.noteState.editMode === EditMode.PREVIEW;\r\n    useEffect(() => {\r\n        // if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n        const canvas: any = canvasRef.current;\r\n        canvas.width = 590;\r\n        canvas.height = 66;\r\n        // }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n            updatePianoView(\r\n                editorState.molecule.rootIndex,\r\n                editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                editorState.symbolKey\r\n            );\r\n        }\r\n    }, [editorState, state.noteState.floatwndState]);\r\n\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.CHORD_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n    const updatePianoView = (molRootIndex: number, denRootIndex: number, symbolKey: SymbolKey) => {\r\n        const ctx = (canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        const keyIndex = (cache.init.keyIndex + molRootIndex) % 12;\r\n        const intervalList = (getSymbolParams(symbolKey) as SymbolParams).intervals;\r\n        const list = intervalList.map((value) => keyIndex + value);\r\n        let denIndex = -1;\r\n        if (denRootIndex != -1) {\r\n            denIndex = cache.init.keyIndex + denRootIndex;\r\n        }\r\n        ctx.fillStyle = '#008';\r\n        ctx.fillRect(0, 0, 594, 70);\r\n        const WIDTH = 34;\r\n        const HEIGHT = 60;\r\n        const BLACK_RATE_W = 0.5;\r\n        const BLACK_RATE_H = 0.6;\r\n        const MARGIN_W = 1;\r\n        const START_ADJUST = 1;\r\n        let posX = 0;\r\n        const keyboadList: {\r\n            posX: number;\r\n            fillStyle: string;\r\n            width: number;\r\n            height: number;\r\n            isBlack: boolean;\r\n        }[] = [];\r\n        for (let i = 0; i < 27; i++) {\r\n            let color = '#eee';\r\n            let width = WIDTH;\r\n            let height = HEIGHT;\r\n            const isBlack = [1, 3, 6, 8, 10].includes(i % 12);\r\n            if (isBlack) {\r\n                color = '#111';\r\n                width = WIDTH * BLACK_RATE_W;\r\n                height = HEIGHT * BLACK_RATE_H;\r\n            }\r\n            if (list.includes(i)) {\r\n                color = '#fa0';\r\n            }\r\n            if (denIndex == i) {\r\n                color = '#ff0000';\r\n            }\r\n            keyboadList.push({ posX: 15 + posX, fillStyle: color, width, height, isBlack });\r\n\r\n            switch (i % 12) {\r\n                case 0: case 2: case 5: case 7: case 9:\r\n                    //次が黒鍵\r\n                    posX += WIDTH - WIDTH * BLACK_RATE_W / 2;\r\n                    break;\r\n                case 1: case 3: case 6: case 8: case 10:\r\n                    //黒鍵\r\n                    posX += WIDTH * BLACK_RATE_W / 2 + MARGIN_W;\r\n                    break;\r\n                default:\r\n                    //次が白鍵\r\n                    posX += WIDTH + MARGIN_W;\r\n            }\r\n        }\r\n        keyboadList.forEach((keyboad) => {\r\n            if (!keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        keyboadList.forEach((keyboad) => {\r\n            if (keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n                ctx.fillStyle = '#f00';\r\n                ctx.strokeRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        ctx.save();\r\n    }\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operationJsx: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = cache.init.keyIndex;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.molecule.rootIndex == i;\r\n            const isDenominator = (editorState.denominator == null ? -1 : editorState.denominator.rootIndex) == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={[\r\n                                isSelected ? 'active' : '',\r\n                                isDenominator ? 'denominator' : ''\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                const denominator = !isDenominator ? editorState.denominator : null;\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     i,\r\n                                //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                if (isSelected) return;\r\n                                const denominator = (!isDenominator ? { rootIndex: i, isFlat: false } : null);\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     editorState.molecule.rootIndex,\r\n                                //     i,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && !editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && !editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && !editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: false } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: true }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: true } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                        // updatePianoView(\r\n                        //     editorState.molecule.rootIndex,\r\n                        //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                        //     symbol.key\r\n                        // );\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operationJsx = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            {/* <div\r\n                className={[\r\n                    chordDetail.backing == null ? 'disable' : ''\r\n                ].join(' ')}\r\n                onClick={() => {\r\n                    if (!isPreview) {\r\n                        dispatcher.backing.play(true);\r\n                    } else {\r\n                        dispatcher.preview.stop();\r\n                    }\r\n                }}>\r\n                <span>{!isPreview ? 'Play' : 'Stop'}</span>\r\n            </div> */}\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    const getAdjustOprJsx = (type: 'h' | 't', offset: number): JSX.Element => {\r\n        let [label, cls, isActive, callback] = type == 'h' ?\r\n            ['h', 'head', editorState.headAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, headAdjust: offset\r\n                    }\r\n                })] :\r\n            ['t', 'tail', editorState.tailAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, tailAdjust: offset\r\n                    }\r\n                })];\r\n        if (offset >= 0) {\r\n            label += (offset > 0 ? '+' : '±');\r\n        }\r\n        return (\r\n            <div\r\n                className={[\r\n                    cls,\r\n                    isActive ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label + offset}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const scaleMatrixRowJsxList: JSX.Element[] = [];\r\n    const getScaleMatrixRowJsx = (\r\n        titleLabel: JSX.Element,\r\n        chordInfoList: {\r\n            rootIndex: number,\r\n            isFlat: boolean,\r\n            symbolKey: SymbolKey\r\n        }[]\r\n    ): JSX.Element => {\r\n        const boxJsxList: JSX.Element[] = [];\r\n        chordInfoList.forEach((info, i) => {\r\n            if (info.rootIndex === -1) {\r\n                boxJsxList.push(\r\n                    <div key={i} className=\"box blank\" />\r\n                );\r\n            } else {\r\n                const degreeList = info.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n                const souondList = info.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n                const degreeRoot = degreeList[info.rootIndex];\r\n                const soundRoot = souondList[info.rootIndex];\r\n                const symbol = getSymbolParams(info.symbolKey) as SymbolParams;\r\n                const isSelected = (\r\n                    info.rootIndex === editorState.molecule.rootIndex &&\r\n                    info.isFlat === editorState.molecule.isFlat &&\r\n                    info.symbolKey === editorState.symbolKey\r\n                );\r\n                boxJsxList.push(\r\n                    <div\r\n                        key={i}\r\n                        className={[\r\n                            'box',\r\n                            isSelected ? 'active' : ''\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            if (!isSelected) {\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        molecule: { rootIndex: info.rootIndex, isFlat: info.isFlat },\r\n                                        symbolKey: info.symbolKey\r\n                                    } as ChordPaletteState\r\n                                });\r\n                            }\r\n                        }}>\r\n                        <div className=\"degree\">\r\n                            {degreeRoot}{symbol.name}\r\n                        </div>\r\n                        <div className=\"chord\">\r\n                            {soundRoot}{symbol.name}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        return (\r\n            <div key={scaleMatrixRowJsxList.length} className=\"scale-row\">\r\n                <div className=\"header\">\r\n                    <span>{titleLabel}</span>\r\n                </div>\r\n                {boxJsxList}\r\n            </div>\r\n        );\r\n    }\r\n    const BLANK = { rootIndex: -1, isFlat: false, symbolKey: {} as SymbolKey };\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Diatonic<br />Triad</>,\r\n            [\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 2, isFlat: false, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 5, isFlat: false, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 7, isFlat: false, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 11, isFlat: false, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n            ]\r\n        )\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Diatonic<br />Tetrad</>,\r\n            [\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.MAJ7 },\r\n                { rootIndex: 2, isFlat: false, symbolKey: SymbolKey.MIN7 },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.MIN7 },\r\n                { rootIndex: 5, isFlat: false, symbolKey: SymbolKey.MAJ7 },\r\n                { rootIndex: 7, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.MIN7 },\r\n                { rootIndex: 11, isFlat: false, symbolKey: SymbolKey.MIN7_MINUS5 },\r\n            ]\r\n        )\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Sus4</>,\r\n            [\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.SUS4 },\r\n                BLANK,\r\n                BLANK,\r\n                BLANK,\r\n                { rootIndex: 7, isFlat: false, symbolKey: SymbolKey.SUS4 },\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.SUS4 },\r\n                BLANK,\r\n            ]\r\n        ),\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Parallel</>,\r\n            [\r\n                { rootIndex: 0, isFlat: true, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 2, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 3, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 5, isFlat: true, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 7, isFlat: true, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 8, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 10, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n            ]\r\n        ),\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Secondary<br />Dominant</>,\r\n            [\r\n                BLANK,\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 11, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 2, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                BLANK,\r\n            ]\r\n        ),\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Secondary<br />Non Root</>,\r\n            [\r\n                BLANK,\r\n                { rootIndex: 1, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 3, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 6, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 8, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                BLANK\r\n            ]\r\n        ),\r\n    );\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                                <div className={'scale-matrix'}>\r\n                                    {scaleMatrixRowJsxList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Direct', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'piano-view'}>\r\n                <canvas ref={canvasRef} />\r\n            </div>\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className={'adjuster' + (editorState.selectedLine == ChordPaletteLine.Adjuster ? ' active' : '')}>\r\n                {getAdjustOprJsx('h', -0.5)}\r\n                {getAdjustOprJsx('h', -0.25)}\r\n                {getAdjustOprJsx('h', 0)}\r\n                {getAdjustOprJsx('h', 0.25)}\r\n                {getAdjustOprJsx('h', 0.5)}\r\n                {getAdjustOprJsx('t', -0.5)}\r\n                {getAdjustOprJsx('t', -0.25)}\r\n                {getAdjustOprJsx('t', 0)}\r\n                {getAdjustOprJsx('t', 0.25)}\r\n                {getAdjustOprJsx('t', 0.5)}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operationJsx}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChordSelector;","import { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SCALE_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getAdjustSusValue, getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, DetailSection, TypeNoteElement, DetailChange} from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentBlockDetailBar.css';\r\n\r\nconst CurrentBlockDetailBar = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const curData = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let innerJsx: JSX.Element = <></>;\r\n    switch (curData.type) {\r\n        // コードブロック選択時\r\n        case TypeNoteElement.Chord: {\r\n            const detail = curData.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.molecule != null) {\r\n                const rootIndex = detail.molecule.rootIndex;\r\n                const degreeRoot = DEGREE12_SHARP_LIST[rootIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[rootIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.molecule != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const baseBlockJsx = buildInfoBlock('Base', [\r\n                { labelName: 'Tempo', value: '' + cache.init.tempo, disable: false },\r\n                { labelName: 'Beat', value: cache.init.rythm, disable: false },\r\n                { labelName: 'Key', value: KEY12_SHARP_LIST[cache.init.keyIndex], disable: false },\r\n                { labelName: 'Scale', value: cache.init.scale, disable: false },\r\n            ]);\r\n\r\n            const chordBlockJsx = buildInfoBlock('Chord', [\r\n                { labelName: 'Root', value: root, disable: root == '-' },\r\n                { labelName: 'Symbol', value: symbolName, disable: symbolName == '-' },\r\n                { labelName: 'On chord', value: '-', disable: true },\r\n                { labelName: 'Sustain', value: String(detail.sustain), disable: false },\r\n                { labelName: 'Adjsut-H', value: getAdjustSusValue(detail.headAdjust), disable: detail.headAdjust == 0 },\r\n                { labelName: 'Adjsut-T', value: getAdjustSusValue(detail.tailAdjust), disable: detail.tailAdjust == 0 },\r\n            ]);\r\n\r\n            innerJsx = (\r\n                <div\r\n                    className={\r\n                        'block'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {baseBlockJsx}\r\n                        {chordBlockJsx}\r\n                        {(() => {\r\n\r\n                            if (detail.molecule != null) {\r\n                                const structList: JSX.Element[] = [];\r\n                                const symbol = getSymbolParams(detail.symbolKey);\r\n                                const list = symbol?.intervals;\r\n                                const len = list?.length as number;\r\n                                for (let i = 0; i < 7; i++) {\r\n                                    if (i < len) {\r\n                                        const interval = symbol?.intervals[i] as number;\r\n                                        const struct = symbol?.struct[i];\r\n                                        const sound = KEY12_SHARP_LIST[(detail.molecule.rootIndex + interval) % 12];\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record\">\r\n                                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                                <div className=\"sound\"><span>{sound}</span></div>\r\n                                            </div>\r\n                                        );\r\n                                    } else {\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record disable\">\r\n                                                <div className=\"interval\"></div>\r\n                                                <div className=\"struct\"></div>\r\n                                                <div className=\"sound\"></div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return (<>\r\n                                    <div className=\"title\">\r\n                                        <span>Struct</span>\r\n                                    </div>\r\n                                    <div className=\"symbol-struct\">\r\n                                        {structList}\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<></>);\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        // セクションブロック選択時\r\n        case TypeNoteElement.Section: {\r\n            const detail = curData.detail as DetailSection;\r\n\r\n            const sectionBlockJsx = buildInfoBlock('Section', [\r\n                { labelName: 'label', value: detail.labelName, disable: false },\r\n                { labelName: 'box count', value: '-', disable: true },\r\n                { labelName: 'total bar', value: '-', disable: true },\r\n                { labelName: 'total time', value: '-', disable: true }\r\n            ]);\r\n            innerJsx = (\r\n                <div\r\n                    className={\r\n                        'block'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {sectionBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n\r\n        // チェンジブロック選択時\r\n        case TypeNoteElement.Change: {\r\n            const detail = curData.detail as DetailChange;\r\n            let changeInfo = ['-','-','-','-','-','-','-','-','-'];\r\n\r\n            if(detail.changeType != null){\r\n                changeInfo[0] = String(detail.changeType);\r\n            }\r\n\r\n            if(detail.modulateRelation != null){\r\n                changeInfo[1] = String(detail.modulateRelation);\r\n            }\r\n\r\n            if(detail.domminantValue != 0){\r\n                changeInfo[2] = String(detail.domminantValue);\r\n            }\r\n\r\n            if(detail.keyAdjust != 0){\r\n                changeInfo[3] = String(detail.keyAdjust);\r\n            }\r\n            \r\n            if(detail.tempoRelation != null){\r\n                changeInfo[4] = String(detail.tempoRelation);\r\n            }\r\n\r\n            if(detail.tempoDiff != 0){\r\n                changeInfo[5] = String(detail.tempoDiff);\r\n            }\r\n\r\n            if(detail.tempoRate != 0){\r\n                changeInfo[6] = String(detail.tempoRate);\r\n            }\r\n\r\n            if(detail.tempoAbsolute != 0){\r\n                changeInfo[7] = String(detail.tempoAbsolute);\r\n            }\r\n\r\n            if(detail.beat != null){\r\n                changeInfo[8] = String(detail.beat);\r\n            }\r\n\r\n            const changeBlockJsx = buildInfoBlock('Change', [\r\n                { labelName: 'type', value: changeInfo[0], disable: changeInfo[0] == '-' },\r\n                { labelName: 'modulate', value: changeInfo[1], disable: changeInfo[1] == '-' },\r\n                { labelName: 'domm', value: changeInfo[2], disable: changeInfo[2] == '-' },\r\n                { labelName: 'key', value: changeInfo[3], disable: changeInfo[3] == '-' },\r\n                { labelName: 'tempo', value: changeInfo[4], disable: changeInfo[4] == '-' },\r\n                { labelName: 'diff', value: changeInfo[5], disable: changeInfo[5] == '-' },\r\n                { labelName: 'rate', value: changeInfo[6], disable: changeInfo[6] == '-' },\r\n                { labelName: 'absolute', value: changeInfo[7], disable: changeInfo[7] == '-' },\r\n                { labelName: 'beat', value: changeInfo[8], disable: changeInfo[8] == '-' },\r\n            ]);\r\n            innerJsx = (\r\n                <div\r\n                    className={\r\n                        'block'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {changeBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {innerJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentBlockDetailBar;\r\n\r\n/**\r\n * 情報レコードのプロパティ\r\n */\r\ntype DataRecord = {\r\n    /** 表示タイトル */\r\n    labelName: string;\r\n    /** 値 */\r\n    value: string;\r\n    /** 非活性にするかどうか（true: 非活性） */\r\n    disable: boolean;\r\n}\r\n\r\n/**\r\n * タイトルと情報レコードを持つブロックのJSXを生成します。\r\n *\r\n * @param {string} titleLabel ブロックのタイトル\r\n * @param {DataRecord[]} dataRecordList データレコード要素のリスト\r\n * @return {*}  {JSX.Element} 生成するJSX\r\n */\r\nconst buildInfoBlock = (titleLabel: string, dataRecordList: DataRecord[]): JSX.Element => {\r\n    const jsxList: JSX.Element[] = [];\r\n    dataRecordList.forEach((state, i) => {\r\n        jsxList.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (state.disable ? ' disable' : '')\r\n                }>\r\n                <div className=\"title\"><span>{state.labelName}:</span></div>\r\n                <div className=\"value\"><span>{state.value}</span></div>\r\n            </div>\r\n        );\r\n    });\r\n    return (<>\r\n        <div className=\"title\">\r\n            <span>{titleLabel}</span>\r\n        </div>\r\n        <div className=\"current-state\">\r\n            {jsxList}\r\n        </div>\r\n    </>);\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps = {\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        // {\r\n        //     label: 'all clear',\r\n        //     isActive: false,\r\n        //     isDisable: false,\r\n        //     callback: () => {\r\n        //         const backingState: BackingEditorState = {\r\n        //             useChannels: [],\r\n        //             isUsePedal: false,\r\n        //             sideIndex: 0,\r\n        //             selectedLenIndex: 0,\r\n        //             selectedChannelIndex: -1,\r\n        //             layers: [\r\n        //                 {\r\n        //                     lens: [{\r\n        //                         len: BACKING_LEN_TYPE.LEN4,\r\n        //                         isDiv3: false,\r\n        //                         isHalf: false\r\n        //                     }],\r\n        //                     side: BACKING_SIDE.LEFT,\r\n        //                     table: [],\r\n        //                     vels: [5]\r\n        //                 },\r\n        //                 {\r\n        //                     lens: [{\r\n        //                         len: BACKING_LEN_TYPE.LEN4,\r\n        //                         isDiv3: false,\r\n        //                         isHalf: false\r\n        //                     }],\r\n        //                     side: BACKING_SIDE.RIGHT,\r\n        //                     table: [],\r\n        //                     vels: [5]\r\n        //                 }\r\n        //             ],\r\n        //             isCorrect: true\r\n        //         };\r\n        //         dispatcher.initBackingPalette(backingState);\r\n        //     }\r\n        // }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <select\r\n            value={paletteState.channelRowSize}\r\n            onChange={(e) => {\r\n                const backing = props.paletteState;\r\n                const newValue = parseInt(e.target.value);\r\n                const diff = newValue - backing.channelRowSize;\r\n                const layers = backing.layers;\r\n                if (diff > 0) {\r\n                    layers.forEach((layer) => {\r\n                        for (let i = 0; i < diff; i++) {\r\n                            const record: boolean[][] = [];\r\n                            for (let j = 0; j < layer.lens.length; j++) {\r\n                                record.push([false]);\r\n                            }\r\n                            layer.table.splice(backing.channelRowSize, 0, record);\r\n                        }\r\n                    });\r\n                } else if (diff < 0) {\r\n                    layers.forEach((layer) => {\r\n                        layer.table.splice(newValue, Math.abs(diff));\r\n                    });\r\n                }\r\n                backing.channelRowSize = newValue;\r\n                dispatcher.backing.setPaletteState(props.paletteState);\r\n            }}>\r\n            {(() => {\r\n                const list: JSX.Element[] = [];\r\n                for (let i = 0; i < 12; i++) {\r\n                    const val = i + 1;\r\n                    const isDisabled = val < paletteState.channelRowSize;\r\n                    list.push(\r\n                        <option\r\n                            key={i}\r\n                            value={val}\r\n                            className={isDisabled ? 'del' : ''}\r\n                        >\r\n                            {val}\r\n                        </option>\r\n                    );\r\n                }\r\n                return list;\r\n            })()}\r\n        </select>\r\n        {buttonList}\r\n    </>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    // const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = paletteState.channelRowSize - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    // setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingEditorState, BackingLayer, BACKING_LEN_TYPE, DetailChord } from \"contents/redux/store\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    paletteState: BackingEditorState;\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curLayer = props.layer;\r\n    const paletteState = props.paletteState;\r\n    const sustainLength = (paletteState.sustain + paletteState.headAdjust + paletteState.tailAdjust) * 4;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 0;\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    // コードブロックの拍の方が長い場合は上書き\r\n    const isLimit = measureLength > sustainLength;\r\n    measureLength = (!isLimit ? sustainLength : measureLength);\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const pos = i + (paletteState.headAdjust * 4);\r\n        const getLen = () => {\r\n            if (pos % 2 == 0) {\r\n                if (pos % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLimit = false;//i == sustainLength;\r\n        measureInner.push(<div key={i} className={getLen() + (isLimit ? ' limit' : '')} />);\r\n    }\r\n\r\n    const limitLeft = sustainLength * 31;\r\n    const limitJsx = !isLimit ?\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: '5px'\r\n        }} className=\"safe\"></div>)\r\n        :\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: `${(measureLength - sustainLength) * 31}px`\r\n        }} className=\"over\"></div>);\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n            {limitJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam, DetailChord } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curLayer = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    // チャンネル数に対してボイシングが足りなければ、その数（高音）だけ空白を設定する\r\n    const blankAdjust = paletteState.channelRowSize - channelList.length;\r\n    for (let i = 0; i < paletteState.channelRowSize; i++) {\r\n        // ブランクの数だけボイシングから取得するインデックスを調整する\r\n        const curIndex = i - blankAdjust;\r\n        // チャンネルに音が設定済みかどうか\r\n        const isExist = curIndex >= 0;\r\n        let soundFullName = '-';\r\n        if (isExist) {\r\n            soundFullName = channelList[curIndex].soundFullName;\r\n        }\r\n        channelJsxList.push(\r\n            <div key={i}>\r\n                <div\r\n                    className={[\r\n                        'channel',\r\n                        !isExist ? 'blank' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (isExist) {\r\n                            testPlaySound(soundFullName)\r\n                        }\r\n                    }}\r\n                >\r\n                    <span>{soundFullName}</span>\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'opr',\r\n                        props.paletteState.channelRowSize == 1 ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        const backing = props.paletteState;\r\n                        const layers = backing.layers;\r\n                        const index = backing.channelRowSize - (i + 1);\r\n                        layers.forEach((layer) => {\r\n                            layer.table.splice(index, 1);\r\n                        });\r\n                        backing.channelRowSize = backing.channelRowSize - 1;\r\n                        dispatcher.backing.setPaletteState(props.paletteState);\r\n                    }}\r\n                >\r\n                    <span>-</span>\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'opr',\r\n                        props.paletteState.channelRowSize == 12 ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        const backing = props.paletteState;\r\n                        const layers = backing.layers;\r\n                        const index = backing.channelRowSize - (i + 1);\r\n                        layers.forEach((layer) => {\r\n                            const record: boolean[][] = [];\r\n                            for (let j = 0; j < layer.lens.length; j++) {\r\n                                record.push([false]);\r\n                            }\r\n                            layer.table.splice(index, 0, record);\r\n                        });\r\n                        backing.channelRowSize = backing.channelRowSize + 1;\r\n                        dispatcher.backing.setPaletteState(props.paletteState);\r\n                    }}\r\n                >\r\n                    <span>+</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curLayer.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={[\r\n            'backing-table',\r\n            paletteState.isEditPattern ? '' : 'disable'\r\n        ].join(' ')}>\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>R-Layer</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>L-Layer</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    paletteState={paletteState}\r\n                    layer={curLayer}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import styled from \"styled-components\";\r\n\r\n\r\nexport const _Record = styled.div<{\r\n    backgroundColor?: string,\r\n    textAlign?: string,\r\n    padding?: string,\r\n    margin?: string,\r\n}>`\r\n    display: inline-block;\r\n    background-color: ${(props) => props.backgroundColor};\r\n    width: 100%;\r\n    padding: ${(props) => props.padding};\r\n    margin: ${(props) => props.margin};\r\n    text-align: ${(props) => props.textAlign};\r\n    box-sizing: border-box;\r\n`;\r\n_Record.defaultProps = {\r\n    backgroundColor: 'inherit',\r\n    textAlign: 'inherit',\r\n    padding: '0',\r\n    margin: '0'\r\n}\r\n\r\nexport const _Hide = styled.div`\r\n    opacity: ${(props: { opacity: number }) => props.opacity}\r\n`;\r\n\r\nexport const _Text = styled.span<{\r\n    fontSize?: string,\r\n    color?: string,\r\n    fontWeight?: string\r\n}>`\r\n    font-size: ${(props)=> props.fontSize};\r\n    color: ${(props)=> props.color};\r\n    font-weight: ${(props)=> props.fontWeight};\r\n`;\r\n_Text.defaultProps = {\r\n    fontSize: 'inherit',\r\n    color: 'inherit',\r\n    fontWeight: 'inherit'\r\n}","import { SymbolParams } from \"contents/common/define\";\r\nimport { _Text } from \"contents/common/Styles\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\nexport const StructMatrix = (props: {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}) => {\r\n    if(!props.paletteState.isDispVoicing) {\r\n        return <></>;\r\n    }\r\n    const useChannels = props.paletteState.useChannels;\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    \r\n    // 音程の降順にソート\r\n    useChannels.sort((a, b) => {\r\n        return (a.octave * 12 + a.structIndex) - (b.octave * 12 + b.structIndex);\r\n    });\r\n    const overVoicingList = useChannels.slice(props.paletteState.channelRowSize);\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.structs.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const hasDom = props.structs.length - props.symbol.intervals.length == 1;\r\n            const index = hasDom ? i - 1 : i;\r\n            const interval = index == -1 ? -1 : props.symbol.intervals[index];\r\n            const relation = index == -1 ? 'dom' : props.symbol.struct[index];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: <_Text color=\"#000\">{soundName}</_Text></span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + interval + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = soundName + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                // const isLimit = props.paletteState.useChannels.length >= props.paletteState.channelRowSize && !isSelected;\r\n                const isLimit = useChannels.length >= 12 && !isSelected;\r\n\r\n                // if(isSelected) {\r\n                //     useChannels.forEach((channel, k) =>{\r\n                //         if (channel.octave == j && channel.structIndex == i) {\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n                let isOverVoicing = false;\r\n                overVoicingList.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isOverVoicing = true;\r\n                    }\r\n                });\r\n\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={[\r\n                            'col',\r\n                            (isNone || isLimit ? 'disable' : ''),\r\n                            (isSelected ? 'active' : ''),\r\n                            (isOverVoicing ? 'over' : '')\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { applyOnChord, getChordRoot, getSymbolParams, getSymbolTypeName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam, Key12Info, EditMode } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\ntype BackingContextType = {\r\n    // isCorrect: boolean;\r\n    // setCorrect: (isCorrect: boolean) => void;\r\n    editorState: BackingEditorState;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [isCorrect, setCorrect] = useState(true);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     dispatcher.backing.setCorrect(isCorrect);\r\n    // }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n    const isPreview = state.noteState.editMode === EditMode.PREVIEW;\r\n    const paletteState = state.noteState.backingPaletteState as BackingEditorState;\r\n\r\n    // const foocusIndex = state.noteState.focusIndex;\r\n    // const detail = state.noteData.dataList[foocusIndex].detail as DetailChord;\r\n    // const cache = state.noteState.cacheList[foocusIndex];\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    // let rootIndex = (detail.molecule as Key12Info).rootIndex;\r\n    // const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n\r\n    const molecule = paletteState.molecule as Key12Info;\r\n    const denominator = paletteState.denominator;\r\n    const symbol: SymbolParams = { ...(getSymbolParams(paletteState.symbolKey) as SymbolParams) };\r\n    const sustain = paletteState.sustain;\r\n    const headAdjust = paletteState.headAdjust;\r\n    const tailAdjust = paletteState.tailAdjust;\r\n\r\n    const root = KEY12_SHARP_LIST[molecule.rootIndex];\r\n    let chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    //オンコードの追加\r\n    if (denominator != null) {\r\n\r\n        // コードネームの修正\r\n        chordName += `/${getChordRoot(denominator, 0)}`;\r\n\r\n        // オンコードをシンボル情報に反映する\r\n        applyOnChord(symbol, molecule.rootIndex, denominator.rootIndex);\r\n    }\r\n    symbol.intervals.forEach((value) => {\r\n        // structs.push(KEY12_SHARP_LIST[(cache.init.keyIndex + rootIndex + value) % 12]);\r\n        structs.push(KEY12_SHARP_LIST[(molecule.rootIndex + value) % 12]);\r\n    });\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, molecule.rootIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div className={[\r\n            isPreview ? 'disable' : ''\r\n        ].join(' ')}\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                !paletteState.isCorrect ? 'disable' : ''\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                if (!isPreview) {\r\n                    dispatcher.backing.play(false);\r\n                } else {\r\n                    dispatcher.preview.stop();\r\n                }\r\n            }}>\r\n            <span>{!isPreview ? 'Play' : 'Stop'}</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                isPreview || !paletteState.isCorrect ? 'disable' : ''\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                switch (paletteState.target) {\r\n                    case 'note': {\r\n                        dispatcher.backing.setCurBackingScript();\r\n                    }\r\n                        break;\r\n                    case 'thema-pattern': {\r\n                        dispatcher.thema.applyBackingPattern();\r\n                    }\r\n                        break;\r\n                    case 'thema-voicing': {\r\n                        dispatcher.thema.applyBackingVoicing();\r\n                    }\r\n                        break;\r\n                }\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            editorState: paletteState\r\n            // isCorrect: isCorrect,\r\n            // setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                // id=\"backing-palette\"\r\n                className={[\r\n                    'backing-palette',\r\n                    'floatwnd',\r\n                    state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : ''\r\n                ].join(' ')}\r\n                // className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                // className=\"floatwnd\"\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className={[\r\n                        'record',\r\n                        paletteState.isDispVoicing ? '' : 'hidden'\r\n                    ].join(' ')}>\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className={[\r\n                        'record',\r\n                        paletteState.isDispVoicing ? '' : 'hidden'\r\n                    ].join(' ')}>\r\n                        <div className=\"title\"><span>Category:</span></div>\r\n                        <div className=\"value\"><span>{getSymbolTypeName(symbol.category)}</span></div>\r\n                    </div>\r\n                    <div className={[\r\n                        'record',\r\n                        paletteState.isDispVoicing ? '' : 'hidden'\r\n                    ].join(' ')}>\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{sustain + headAdjust + tailAdjust}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={molecule.rootIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\nimport './FooterTiming.css';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from 'styled-components';\r\n\r\nconst MEM_WIDTH = 16;\r\nconst FIXED_BLANK = 100;\r\n\r\nconst StyleTest = styled.div`\r\n    font-size: 0;\r\n    display: inline-inline-block;\r\n`;\r\n\r\n\r\n\r\nconst FooterTiming: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n    const [measureJsxList, setMeasureJsxList] = useState([] as JSX.Element[]);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const chordDetail = dataList[focusIndex].type == TypeNoteElement.Chord ?\r\n        (dataList[focusIndex].detail as DetailChord) : null;\r\n    const sustain = chordDetail == null ? 0 : chordDetail.sustain;\r\n    const headAdjust = chordDetail == null ? 0 : chordDetail.headAdjust;\r\n    const tailAdjust = chordDetail == null ? 0 : chordDetail.tailAdjust;\r\n    useEffect(() => {\r\n        let total = 0;\r\n        const blockJsxList: JSX.Element[] = [];\r\n        const measureJsxList: JSX.Element[] = [];\r\n        const dataList = state.noteData.dataList;\r\n\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                        ].join(' ')}\r\n                        style={{ width: `${FIXED_BLANK}px` }}\r\n                    />\r\n                )\r\n            }\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                const detail = data.detail as DetailChord;\r\n                const len = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                const width = len * MEM_WIDTH * 4;\r\n                const isCur = focusIndex == i;\r\n                const isNear = focusIndex == i - 1 || focusIndex == i + 1;\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                            isCur ? 'active' : '',\r\n                            isNear ? 'near' : '',\r\n                        ].join(' ')}\r\n                        style={{ width: `${width - 1}px` }}\r\n                    >\r\n                        <div className=\"sus\">\r\n                            <span>{detail.sustain}</span>\r\n                        </div>\r\n                        <div className=\"adjust\">\r\n                            <span className={getAdjustCls(detail.headAdjust)}>\r\n                                {getAdjustSusValue(detail.headAdjust)}\r\n                            </span>\r\n                            <span className={getAdjustCls(detail.tailAdjust)}>\r\n                                {getAdjustSusValue(detail.tailAdjust)}\r\n                            </span>\r\n                        </div>\r\n                    </div >\r\n                );\r\n                if (isCur) {\r\n                    scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n                }\r\n                total += len * 4;\r\n            }\r\n        });\r\n\r\n        // measureJsxList.push(\r\n        //     <div key={measureJsxList.length} className=\"blank\" style={{ left: `${0}px` }} />\r\n        // )\r\n        for (let i = 0; i < total; i++) {\r\n            let name = '';\r\n            const isBar = i % 16 == 0;\r\n            /** 小節数 */\r\n            const barCount = 1 + (i / 16);\r\n            if (isBar) {\r\n                name = 'mem-bar';\r\n            } else {\r\n                switch (i % 4) {\r\n                    case 0: name = 'mem4'; break;\r\n                    case 2: name = 'mem8'; break;\r\n                    default: name = 'mem16'; break;\r\n                }\r\n            }\r\n            measureJsxList.push(\r\n                <div key={measureJsxList.length} className={name} style={{ left: `${FIXED_BLANK + i * MEM_WIDTH}px` }}>{\r\n                    i % 16 == 0 ?\r\n                        <div className=\"bar\" style={{ left: `${-14}px`, top: '24px' }}>{barCount}</div>\r\n                        :\r\n                        <></>\r\n                }</div>\r\n            );\r\n        }\r\n        // alert(measureJsxList.length);\r\n        setBlockJsxList(blockJsxList);\r\n        setMeasureJsxList(measureJsxList);\r\n        setTotal(total);\r\n    }, [dataCount, focusIndex, sustain, headAdjust, tailAdjust]);\r\n\r\n    if (chordDetail == null) {\r\n        return (<></>);\r\n    }\r\n\r\n    const totalWidth = FIXED_BLANK * 2 + total * MEM_WIDTH;\r\n    return (\r\n        <div id=\"footer-timing\" className=\"footer-child\">\r\n            <div className=\"scroll\" ref={scrollRef}>\r\n                <div className=\"blocks\" style={{ width: `${totalWidth}px` }}>\r\n                    {blockJsxList}\r\n                </div>\r\n                <div className=\"measure\" style={{ width: `${totalWidth}px` }}>\r\n                    {measureJsxList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getAdjustCls = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = 'aug';\r\n        else ret = 'dim';\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport default FooterTiming;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\n// import './FooterEnsemble.css';\r\n\r\nconst FooterEnsemble: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isPlay, setPlay] = useState<boolean>(false);\r\n    const [startPosition, setStartPosition] = useState<string>('0');\r\n\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n    const info = state.noteState.ensembleInfo;\r\n\r\n    useEffect(() => {\r\n        setPlay(!info.audio.paused);\r\n    }, [info.audio.paused]);\r\n\r\n    // useEffect(() => {\r\n    //     // setLoad(!isNaN(info.audio.duration));\r\n    //     alert(info.audio);\r\n    //     info.volume = 1;\r\n    //     dispatcher.score.setNoteState({\r\n    //         ...state.noteState, ensembleInfo: info\r\n    //     });\r\n    // }, [info.audio]);\r\n\r\n    // const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n\r\n    return (\r\n        <div id=\"footer-ensemble\" className=\"footer-child\">\r\n            <div className={[\r\n                'record data',\r\n                info.isLoad ? 'disable' : ''\r\n            ].join(' ')}>\r\n                <input type=\"text\" value={info.fileURL} onChange={(e) => {\r\n                    info.fileURL = e.target.value;\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState, ensembleInfo: info\r\n                    });\r\n                }} />\r\n                <input type=\"file\" onChange={(e) => {\r\n                    if (e.target.files != null && e.target.files[0] != null) {\r\n                        const objectURL = window.URL.createObjectURL(e.target.files[0]);\r\n                        info.fileURL = objectURL;\r\n                        dispatcher.score.setNoteState({\r\n                            ...state.noteState, ensembleInfo: info\r\n                        });\r\n                    }\r\n                }} />\r\n            </div>\r\n            <div className={[\r\n                'record adjust',\r\n                info.isLoad ? 'disable' : ''\r\n            ].join(' ')}>\r\n                <input type=\"text\" value={startPosition} onChange={(e) => {\r\n                    setStartPosition(e.target.value);\r\n                }} />\r\n                <input type=\"range\" min={1} max={100} value={info.volume} onChange={(e) => {\r\n                    info.volume = Number(e.target.value);\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState, ensembleInfo: info\r\n                    });\r\n                }} />\r\n                <button\r\n                    className={[\r\n                        isPlay ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if(startPosition === '') return;\r\n                        try {\r\n                            info.startPosition = Number(startPosition);\r\n                            info.isLoad = true;\r\n                            const audio = new Audio();\r\n                            audio.onerror = () => {\r\n                                info.isLoad = false;\r\n                                dispatcher.score.setNoteState({\r\n                                    ...state.noteState, ensembleInfo: info\r\n                                });\r\n                            }\r\n                            audio.src = info.fileURL;\r\n                            audio.currentTime = info.startPosition * 0.001;\r\n                            audio.volume = info.volume * 0.01;\r\n                            info.audio = audio;\r\n                            dispatcher.score.setNoteState({\r\n                                ...state.noteState, ensembleInfo: info\r\n                            });\r\n                        } catch (e) {\r\n                            info.isLoad = false;\r\n                            dispatcher.score.setNoteState({\r\n                                ...state.noteState, ensembleInfo: info\r\n                            });\r\n                        }\r\n                    }}>Aplly</button>\r\n            </div>\r\n            <div className={[\r\n                'record',\r\n                !info.isLoad ? 'disable' : ''\r\n            ].join(' ')}>\r\n                <button\r\n                    className={[\r\n                        isPlay ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio = new Audio();\r\n                        info.isLoad = false;\r\n                        dispatcher.score.setNoteState({\r\n                            ...state.noteState, ensembleInfo: info\r\n                        });\r\n                    }}>Remove</button>\r\n                <button\r\n                    className={[\r\n                        isPlay ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio.play();\r\n                        setPlay(true);\r\n                    }}>Play</button>\r\n                <button\r\n                    className={[\r\n                        !isPlay ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio.pause();\r\n                        setPlay(false);\r\n                    }}>Stop</button>\r\n                <button\r\n                    className={[\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio.currentTime = info.startPosition * 0.001;\r\n                    }}>Reset</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FooterEnsemble;","\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport FooterTiming from './timing/FooterTiming';\r\nimport './NoteFooter.css';\r\nimport FooterEnsemble from './ensemble/FooterEnsemble';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { TypeNoteElement } from 'contents/redux/store';\r\n\r\nconst NoteFooter = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const curType = state.noteData.dataList[state.noteState.focusIndex].type;\r\n\r\n    const [activeTabIndex, setActiveTabIndex] = useState<number>(0);\r\n\r\n    useEffect(()=>{\r\n        if(curType) {\r\n            setActiveTabIndex(curType !== TypeNoteElement.Init ? 0 : 2);\r\n        }\r\n    }, [state.noteState.focusIndex]);\r\n    return (\r\n        <div id=\"score-footer\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Progress', disable: true, cont: <FooterTiming /> },\r\n                    { name: 'Target', disable: true, cont: <div></div> },\r\n                    { name: 'Ensemble', disable: true, cont: <FooterEnsemble /> }\r\n                ]}\r\n                activeNo={activeTabIndex}\r\n            // selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteFooter;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, DetailInit, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(state.noteState.floatwndState === FloatWndState.INIT_PALETTE) {\r\n            const initBean = state.dinamicCache as DetailInit;\r\n            dispatcher.setDinamicCache(null);\r\n            setTempo(initBean.tempo);\r\n            setRythm(initBean.rythm);\r\n            setKey(initBean.keyIndex);\r\n            setScale(initBean.scale);\r\n        }\r\n    }, [state.noteState.floatwndState]);\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.INIT_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    {/* <span>{tempo}</span> */}\r\n                    <input\r\n                        type=\"number\" value={tempo} min=\"30\" max=\"180\"\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { DetailSection, FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './SectionEditor.css';\r\n\r\nconst SectionEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    useEffect(() => {\r\n        if(state.noteState.floatwndState === FloatWndState.SECTION_PALETTE) {\r\n            const sectionBean = state.dinamicCache as DetailSection;\r\n            setLabelName(sectionBean.labelName);\r\n        }\r\n    }, [state.noteState.floatwndState]);\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.SECTION_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.section.setSectionParam(labelName);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const getTextForm = (label: string, value: string, callback: (value: string) => void): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"section-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.SECTION_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getTextForm('Name', labelName, (value: string) => { setLabelName(value) })}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionEditor;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './SettingEditor.css';\r\n\r\nconst SettingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    if (state.noteState.floatwndState != FloatWndState.SETTING_EDITOR) {\r\n        return (<></>);\r\n    }\r\n    const defsus = state.noteState.defaultSustain;\r\n    const sustainJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        sustainJsxList.push(\r\n            <div\r\n                key={sustainJsxList.length}\r\n                className={[\r\n                    i + 1 <= defsus ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={()=>{\r\n                    dispatcher.score.setNoteState({...state.noteState, defaultSustain: i + 1});\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <div id=\"setting-editor\"\r\n            className=\"floatwnd active\">\r\n            <div className=\"sustain\">{sustainJsxList}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingEditor;\r\n","\r\nimport { RYTHM_LIST, TimeSignatures } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { ChangeType, CHORD_MODE, DetailChange, FloatWndState, ModulateRelation, TempoRelation } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './ChangeEditor.css';\r\n\r\nconst ChangeEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        // dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [changeType, setChangeType] = useState<string>('');\r\n    const [modulateRelation, setModulateRelation] = useState<string>('');\r\n    const [domminantValue, setDomminantValue] = useState<'' | number>('');\r\n    const [keyAdjust, setKeyAdjust] = useState<'' | number>('');\r\n    const [tempoRelation, setTempoRelation] = useState<string>('');\r\n    const [tempoRate, setTempoRate] = useState<'' | number>('');\r\n    const [tempoDiff, setTempoDiff] = useState<'' | number>('');\r\n    const [tempoAbsolute, setTempoAbsolute] = useState<'' | number>('');\r\n    const [beat, setBeat] = useState<string>('');\r\n\r\n    const [isInputOK, setInputOK] = useState<boolean>(false);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n\r\n    const checkInput = () => {\r\n        setInputOK(false);\r\n        switch (changeType) {\r\n            case ChangeType.MODULATE: {\r\n                switch (modulateRelation) {\r\n                    case ModulateRelation.DOMINANT: {\r\n                        if (domminantValue !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.KEY: {\r\n                        if (keyAdjust !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.RELATIVE: {\r\n                        setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.PARALLEL: {\r\n                        setInputOK(true);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case ChangeType.TEMPO: {\r\n                switch (tempoRelation) {\r\n                    case TempoRelation.DIFF: {\r\n                        if (tempoDiff !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case TempoRelation.RATE: {\r\n                        if (tempoRate !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case TempoRelation.ABSOLUTE: {\r\n                        if (tempoAbsolute !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case ChangeType.BEAT: {\r\n                if (beat !== '') setInputOK(true);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (state.noteState.floatwndState === FloatWndState.CHANGE_PALETTE) {\r\n            const bean = state.dinamicCache as DetailChange;\r\n            setChangeType(bean.changeType == null ? '' : bean.changeType);\r\n            setModulateRelation(bean.modulateRelation == null ? '' : bean.modulateRelation);\r\n            setDomminantValue(bean.domminantValue);\r\n            setKeyAdjust(bean.keyAdjust);\r\n            setTempoRelation(bean.tempoRelation == null ? '' : bean.tempoRelation?.toString());\r\n            setTempoRate(bean.tempoRate);\r\n            setTempoDiff(bean.tempoDiff);\r\n            setTempoAbsolute(bean.tempoAbsolute);\r\n            setBeat(bean.beat == null ? '' : bean.beat);\r\n        }\r\n    }, [state.noteState.floatwndState]);\r\n\r\n    useEffect(() => {\r\n        checkInput();\r\n    }, [changeType, modulateRelation, domminantValue, keyAdjust,\r\n        tempoRelation, tempoDiff, tempoRate, tempoAbsolute, beat\r\n    ]);\r\n\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.CHANGE_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n    const directModeFilter = (type: ChangeType) => !(chordMode === CHORD_MODE.DIRECT && type === ChangeType.MODULATE);\r\n    let itemsJsxList: JSX.Element[] = [];\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Change Type', changeType,\r\n            (value: string) => {\r\n                setChangeType(value);\r\n                if (value !== ChangeType.MODULATE) {\r\n                    setModulateRelation('');\r\n                    setDomminantValue('');\r\n                    setKeyAdjust('');\r\n                }\r\n                if (value !== ChangeType.TEMPO) {\r\n                    setTempoRelation('');\r\n                    setTempoRate('');\r\n                    setTempoDiff('');\r\n                    setTempoAbsolute('');\r\n                }\r\n                if (value !== ChangeType.BEAT) {\r\n                    setBeat('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(ChangeType).filter(directModeFilter).map((item) => {\r\n                    return { value: item.toString(), display: item.toString() };\r\n                })\r\n            ),\r\n            false\r\n        )\r\n    );\r\n\r\n    // スケールモード時のみ追加\r\n    if (chordMode === CHORD_MODE.SCALE) {\r\n        itemsJsxList.push(\r\n            getItemSelectorJsx(itemsJsxList.length, 'Modulate Relation', modulateRelation,\r\n                (value: string) => {\r\n                    setModulateRelation(value);\r\n\r\n                    if (value !== ModulateRelation.KEY) {\r\n                        setKeyAdjust('');\r\n                    }\r\n                    if (value !== ModulateRelation.DOMINANT) {\r\n                        setDomminantValue('');\r\n                    }\r\n                },\r\n                // 先頭に空白を挿入\r\n                [{ value: '', display: '' }].concat(\r\n                    Object.values(ModulateRelation).map((item) => {\r\n                        const str = item.toString();\r\n                        return { value: str, display: str };\r\n                    })\r\n                ),\r\n                changeType !== ChangeType.MODULATE.toString()\r\n            )\r\n        );\r\n        itemsJsxList.push(\r\n            getItemNumberRangeJsx(itemsJsxList.length, 'Domminant Value', domminantValue, -3, 3,\r\n                (value: string) => {\r\n                    setDomminantValue(value as '' | number);\r\n                },\r\n                modulateRelation !== ModulateRelation.DOMINANT.toString()\r\n            )\r\n        );\r\n        itemsJsxList.push(\r\n            getItemNumberRangeJsx(itemsJsxList.length, 'Key Adjust', keyAdjust, -3, 3,\r\n                (value: string) => {\r\n                    setKeyAdjust(value as '' | number);\r\n                },\r\n                modulateRelation !== ModulateRelation.KEY.toString()\r\n            )\r\n        );\r\n    }\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Tempo Relation', tempoRelation,\r\n            (value: string) => {\r\n                setTempoRelation(value);\r\n\r\n                if (value !== TempoRelation.RATE) {\r\n                    setTempoRate('');\r\n                }\r\n                if (value !== TempoRelation.DIFF) {\r\n                    setTempoDiff('');\r\n                }\r\n                if (value !== TempoRelation.ABSOLUTE) {\r\n                    setTempoAbsolute('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(TempoRelation).map((item) => {\r\n                    const str = item.toString();\r\n                    return { value: str, display: str };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.TEMPO.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Diff', tempoDiff, -150, 150,\r\n            (value: string) => {\r\n                setTempoDiff(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.DIFF.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Rate', tempoRate, 20, 200,\r\n            (value: string) => {\r\n                setTempoRate(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.RATE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Absolute', tempoAbsolute, 30, 180,\r\n            (value: string) => {\r\n                setTempoAbsolute(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.ABSOLUTE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Beat', beat,\r\n            (value: string) => {\r\n                setBeat(value);\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(TimeSignatures).map((item) => {\r\n                    const key = item.toString();\r\n                    return { value: key, display: key };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.BEAT.toString()\r\n        )\r\n    );\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                isInputOK ? '' : 'disable'\r\n            ].join('')}\r\n            onClick={() => {\r\n                dispatcher.change.applyChangeParams(\r\n                    changeType as ChangeType,\r\n                    modulateRelation === '' ? null : modulateRelation as ModulateRelation,\r\n                    domminantValue === '' ? 0 : domminantValue as number,\r\n                    keyAdjust === '' ? 0 : keyAdjust as number,\r\n                    tempoRelation === '' ? null : tempoRelation as TempoRelation,\r\n                    tempoDiff === '' ? 0 : tempoDiff as number,\r\n                    tempoRate === '' ? 0 : tempoRate as number,\r\n                    tempoAbsolute === '' ? 0 : tempoAbsolute as number,\r\n                    beat === '' ? null : beat as TimeSignatures\r\n                );\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"change-editor\"\r\n            className={[\r\n                'floatwnd',\r\n                state.noteState.floatwndState == FloatWndState.CHANGE_PALETTE ? ' active' : ''\r\n            ].join(' ')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {itemsJsxList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getItemSelectorJsx = (key: number, label: string, value: string,\r\n    callback: (value: string) => void,\r\n    list: { value: string, display: string }[], isDisable: boolean\r\n): JSX.Element => {\r\n    const optionsJsx: JSX.Element[] = [];\r\n    list.forEach((data) => {\r\n        optionsJsx.push(\r\n            <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n        );\r\n    });\r\n    return (\r\n        <div\r\n            key={key}\r\n            className={[\r\n                'record',\r\n                isDisable ? 'disable' : ''\r\n            ].join(' ')}\r\n        >\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"value\">\r\n                <select\r\n                    className={\r\n                        !isDisable && value === '' ? 'error' : ''\r\n                    }\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        callback(e.target.value);\r\n                    }}\r\n                >\r\n                    {optionsJsx}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getItemNumberRangeJsx = (key: number, label: string, value: '' | number,\r\n    min: number, max: number, callback: (value: string) => void, isDisable: boolean\r\n): JSX.Element => {\r\n    return (\r\n        <div\r\n            key={key}\r\n            className={[\r\n                'record',\r\n                isDisable ? 'disable' : ''\r\n            ].join(' ')}\r\n        >\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"value\">\r\n                <input type=\"number\"\r\n                    className={\r\n                        !isDisable && (value === '' || !(value >= min && value <= max)) ? 'error' : ''\r\n                    }\r\n                    value={value} min={min} max={max}\r\n                    onChange={(e) => {\r\n                        callback(e.target.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeEditor;","\r\nimport Soundfont from 'soundfont-player';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { DetailChord, FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport './ThemaLoader.css';\r\n\r\ninterface PatternBean {\r\n    name: string;\r\n\r\n}\r\n\r\nconst ThemaLoader = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [patterns, setPatterns] = useState<PatternBean[]>([]);\r\n\r\n    // const ref = useRef({} as HTMLDivElement);\r\n    // useEffect(() => {\r\n    //     dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        const patterns: PatternBean[] = [];\r\n\r\n        if (state.noteState.floatwndState === FloatWndState.THEMA_ACCESSOR) {\r\n            const bean = state.dinamicCache as DetailChord;\r\n\r\n            for (let sus of state.themaDataTree.sustains) {\r\n                const isSustainMatch = sus.beat === bean.sustain && sus.headAdjust === bean.headAdjust && sus.tailAdjust === bean.tailAdjust;\r\n                if (isSustainMatch) {\r\n\r\n                    sus.patterns.forEach((pattern) => {\r\n                        patterns.push({\r\n                            name: pattern.name,\r\n                        });\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            setPatterns(patterns);\r\n            Soundfont.instrument(new AudioContext(), 'violin', {gain: 4, release: 0.5}).then((instrument) => {\r\n                dispatcher.setInstruments(instrument);\r\n            });\r\n        }\r\n    }, [state.noteState.floatwndState]);\r\n\r\n    const instrument = state.instrument as Soundfont.Player;\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                instrument.stop();\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                // instrument.play('C4', 0).stop(5);\r\n                \r\n                // instrument.start('C4', 2);\r\n                // const nodes: AudioNode[] = [];\r\n                // instrument.stop(1000);\r\n                instrument.schedule(0, [\r\n                    { time: 0, note: 60, duration: 2 },\r\n                    { time: 2.5, note: 63, duration: 2 },\r\n                ]);\r\n\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    patterns.forEach((pattern, i) => {\r\n        itemJsxList.push(\r\n            <_Item key={i}>{pattern.name}</_Item>\r\n        );\r\n    });\r\n    return (\r\n\r\n        <div\r\n            id=\"thema-accessor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.THEMA_ACCESSOR ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <_Wrap>\r\n                <_WrapList>\r\n                    {itemJsxList}\r\n                </_WrapList>\r\n                <_WrapMatrix>\r\n\r\n                </_WrapMatrix>\r\n            </_Wrap>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaLoader;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 250px;\r\n`;\r\n\r\nconst _WrapList = styled.div`\r\n    display: inline-block;\r\n    width: 280px;\r\n    height: 100%;\r\n    background-color: #000000;\r\n    vertical-align: top;\r\n    overflow-y: auto;\r\n`;\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #272727;\r\n    overflow-x: hidden;\r\n    border: solid 1px #b4b4b4;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 25px;\r\n    padding-left: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _WrapMatrix = styled.div`\r\n    display: inline-block;\r\n    width: 280px;\r\n    height: 100%;\r\n    background-color: #868686;\r\n    vertical-align: top;\r\n    overflow-y: auto;\r\n`;\r\n","import { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { useContext, useState } from 'react';\r\nimport './SourceDialog.css';\r\n\r\nconst SourceDialog = (props: { target: 'score' | 'backing' }) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>(JSON.stringify(state.noteData));\r\n    return (\r\n\r\n        <div className=\"source-dialog\">\r\n            <textarea value={source} onChange={(e) => {\r\n                setSource(e.target.value);\r\n            }}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.closeDialog();\r\n                }}\r\n            >\r\n                Cancel\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    switch(props.target) {\r\n                        case 'score': {\r\n                            dispatcher.score.setNoteData(JSON.parse(source));\r\n                        }\r\n                        break;\r\n                        case 'backing': {\r\n                            dispatcher.score.setNoteData(JSON.parse(source));\r\n                        }\r\n                        break;\r\n                    }\r\n                    dispatcher.closeDialog();\r\n                }}\r\n            >\r\n                Aplly\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SourceDialog;","\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ConfirmDialog = (props: {\r\n    message: string,\r\n    callback: () => void\r\n}) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n\r\n        <_MainFrame>\r\n            <_Message>{props.message}</_Message>\r\n            <_Button\r\n                onClick={() => {\r\n                    dispatcher.closeDialog();\r\n                }}\r\n            >\r\n                No\r\n            </_Button>\r\n            <_Button\r\n                onClick={() => {\r\n                    props.callback();\r\n                }}\r\n            >\r\n                Yes\r\n            </_Button>\r\n        </_MainFrame>\r\n    );\r\n}\r\n\r\nexport default ConfirmDialog;\r\n\r\nconst _MainFrame = styled.div`\r\n    display: inline-block;\r\n    width: 250px;\r\n    height: 100px;\r\n    background-color: rgba(0, 0, 0, 0.842);\r\n    border: solid 2px white;\r\n`;\r\n\r\nconst _Message = styled.div`\r\n    display:  inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 5px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    /* line-height: -10px; */\r\n    color: rgba(255, 255, 255, 0.856);\r\n    text-align: left;\r\n`;\r\n\r\nconst _Button = styled.div`\r\n    display:  inline-block;\r\n    width: 70px;\r\n    height: 28px;\r\n    margin: 4px 0 0 4px;\r\n    background-color: rgb(180, 180, 180);\r\n    border: solid 1px rgb(85, 85, 85);\r\n    border-radius: 3px;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    line-height: 25px;\r\n    color: rgba(0, 0, 0, 0.685);\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background-color: rgb(139, 139, 139);\r\n    }\r\n`;","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress, DetailChange, ChangeType, ModulateRelation, TempoRelation } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentBlockDetailBar from './sideDetail/CurrentBlockDetailBar';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport NoteFooter from './footer/NoteFooter';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\nimport SectionEditor from './floatwnd/section/SectionEditor';\r\nimport SettingEditor from './floatwnd/setting/SettingEditor';\r\nimport ChangeEditor from './floatwnd/change/ChangeEditor';\r\nimport ThemaLoader from './floatwnd/thema/ThemaLoader';\r\nimport SourceDialog from 'contents/systab/dialog/SourceDialog';\r\nimport { sendQueryRequestToAPI } from 'contents/common/utils';\r\nimport ConfirmDialog from 'contents/systab/dialog/ConfirmDialog';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                const sustain = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                totalBeat += sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * sustain;\r\n                no++;\r\n            } else if (data.type == TypeNoteElement.Change) {\r\n                const detail = data.detail as DetailChange;\r\n                switch (detail.changeType) {\r\n                    case ChangeType.MODULATE: {\r\n                        let newKeyIndex = cache.init.keyIndex;\r\n                        let newIsMinor = cache.init.scale == 'minor';\r\n                        switch (detail.modulateRelation) {\r\n                            case ModulateRelation.DOMINANT: {\r\n                                newKeyIndex = (24 + newKeyIndex + detail.domminantValue * 7) % 12;\r\n                            }\r\n                                break;\r\n                            case ModulateRelation.KEY: {\r\n                                const keyAdjust = Number(detail.keyAdjust);\r\n                                newKeyIndex = (12 + newKeyIndex + keyAdjust) % 12;\r\n                            }\r\n                                break;\r\n                            case ModulateRelation.RELATIVE: {\r\n                                if (!newIsMinor) {\r\n                                    newKeyIndex = (12 + newKeyIndex - 3) % 12;\r\n                                } else {\r\n                                    newKeyIndex = (12 + newKeyIndex + 3) % 12;\r\n                                }\r\n                                newIsMinor = !newIsMinor;\r\n                            }\r\n                                break;\r\n                            case ModulateRelation.PARALLEL: {\r\n                                newIsMinor = !newIsMinor;\r\n                            }\r\n                                break;\r\n                        }\r\n\r\n                        cache.init.keyIndex = newKeyIndex;\r\n                        cache.init.scale = newIsMinor ? 'minor' : 'major';\r\n                    }\r\n                        break;\r\n                    case ChangeType.TEMPO: {\r\n                        let newTempo: number = cache.init.tempo;\r\n                        switch (detail.tempoRelation) {\r\n                            case TempoRelation.DIFF: {\r\n                                newTempo += Number(detail.tempoDiff);\r\n                            }\r\n                                break;\r\n                            case TempoRelation.RATE: {\r\n                                newTempo = Math.floor(newTempo * detail.tempoRate / 100);\r\n                            }\r\n                                break;\r\n                            case TempoRelation.ABSOLUTE: {\r\n                                newTempo = detail.tempoAbsolute;\r\n                            }\r\n                                break;\r\n                        }\r\n                        cache.init.tempo = newTempo;\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            cacheList[i] = { ...cacheList[i], init: { ...cache.init }, progress };\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).labelName} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList, state.noteData.dataList.length]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={[\r\n                            [EditMode.TRANSPLANT, EditMode.CLONE].includes(editMode) ? 'mode-selector' : '',\r\n                            [EditMode.PREVIEW].includes(editMode) ? 'mode-preview' : ''\r\n                        ].join(' ')}\r\n                    >\r\n                        {/* <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                        }}><span>BACK</span></button> */}\r\n                        <button className=\"\" onClick={() => {\r\n\r\n                            dispatcher.callDialog(50, 50, <ConfirmDialog message=\"Do you want to save it?\" callback={() => {\r\n                                (async () => {\r\n                                    const curScoreId = state.noteState.cuScoreId;\r\n                                    console.log('----start----');\r\n                                    const values: string[] = [];\r\n                                    state.noteData.dataList.forEach((data, i) => {\r\n                                        values.push(`(${curScoreId}, ${i}, '${JSON.stringify(data)}')`);\r\n                                    });\r\n                                    await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${curScoreId}`);\r\n                                    await sendQueryRequestToAPI('update', `insert into data_tbl values${values.join(',')}`);\r\n                                    console.log('----end----');\r\n                                    alert('The data was saved successfully!');\r\n                                    dispatcher.closeDialog();\r\n                                })();\r\n                            }} />);\r\n                        }}><span>SAVE</span></button>\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatcher.callDialog(50, 50, <SourceDialog target=\"score\" />);\r\n                        }}><span>SOURCE</span></button>\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SETTING_EDITOR })\r\n                        }}> <span>SETTING</span></button>\r\n                        <button className=\"disable\"><span>Help</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={[\r\n                            [EditMode.TRANSPLANT, EditMode.CLONE].includes(editMode) ? 'mode-selector' : '',\r\n                            [EditMode.PREVIEW].includes(editMode) ? 'mode-preview' : ''\r\n                        ].join(' ')}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={[\r\n                            [EditMode.TRANSPLANT, EditMode.CLONE].includes(editMode) ? 'mode-selector' : '',\r\n                            [EditMode.PREVIEW].includes(editMode) ? 'mode-preview' : ''\r\n                        ].join(' ')}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            if (state.noteState.editMode !== EditMode.PREVIEW) {\r\n                                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            }\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <SectionEditor />\r\n                    <ChangeEditor />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                    <SettingEditor />\r\n                    <ThemaLoader />\r\n                </div>\r\n                <NoteFooter />\r\n\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentBlockDetailBar />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.TRANSPLANT ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>TRANSPLANT</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.CLONE ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, NoteData, NoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { API_DOMAIN } from 'contents/common/define';\r\nimport { createQueryRequestInit, sendQueryRequestToAPI } from 'contents/common/utils';\r\n\r\ntype Record = { id: number, title: string, chord_mode: CHORD_MODE, data_cnt: number };\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [message, setMessage] = useState<string>('');\r\n    const [recordList, setRecordList] = useState<Record[]>([]);\r\n    const [titleList, setTitleList] = useState<JSX.Element[]>([]);\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [chordMode, setChordMode] = useState<CHORD_MODE | ''>('');\r\n    const [isLoad, setLoad] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        console.log('create ScoreContLiblaryTab');\r\n    }, []);\r\n\r\n    // 非同期で表示データを更新。\r\n    const reload = (initFocus: number) => {\r\n        // setFocus(initFocus);\r\n        setLoad(true);\r\n        setMessage('Now roading scores...');\r\n        sendQueryRequestToAPI('select', `SELECT s.*, (select count(*) from data_tbl where score = s.id) as data_cnt FROM sclibtbl s where user = ${state.login.id}`)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(results => {\r\n                console.log(`[${state.login.id}]score count: ` + results.length);\r\n                const isExist = results.length > 0;\r\n                if (isExist) {\r\n                    setRecordList(results);\r\n                    setMessage('');\r\n                } else {\r\n                    setMessage('There is no musical score you manage yet.');\r\n                }\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error + \"失敗しました\");\r\n                setLoad(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const list: JSX.Element[] = [];\r\n        recordList.forEach((record, i) => {\r\n            list.push(\r\n                <div\r\n                    key={i}\r\n                    className={[\r\n                        'record',\r\n                        focus == i ? 'focus' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        setFocus(i);\r\n                    }}\r\n                >\r\n                    <span>{record.id}:</span>\r\n                    <span className=\"title\">{record.title}</span>\r\n                    <span>[</span>\r\n                    <span className=\"mode\">{record.chord_mode}</span>\r\n                    <span>]</span>\r\n                </div>\r\n            );\r\n        });\r\n        setTitleList(list);\r\n    }, [recordList, focus]);\r\n\r\n    useEffect(() => {\r\n        if (!isEdit) {\r\n            reload(-1);\r\n        }\r\n\r\n    }, [isEdit]);\r\n\r\n    const createButton = (label: string, isDisable: boolean, callback: () => void, isActive: boolean = false): JSX.Element => {\r\n        return (\r\n            <button className={[\r\n                isDisable ? 'disable' : '',\r\n                isActive ? 'active' : ''\r\n            ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label}</span>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    const createInfoRecored = (label: string, innerJsx: JSX.Element): JSX.Element => {\r\n        return (\r\n            <div\r\n                className=\"info-record\"\r\n            >\r\n                <span>{label}</span>\r\n                <span>{': '}</span>\r\n                {innerJsx}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const isDisplayMsg = message != '';\r\n    const selectedRecord = recordList[focus];\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                {/* <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button> */}\r\n                <div className=\"opr\">\r\n                    {createButton('Create', isEdit || isLoad, () => {\r\n                        setMessage('Create...');\r\n                        sendQueryRequestToAPI('update', `INSERT INTO sclibtbl(user, title, chord_mode) VALUES(${state.login.id}, 'new_title', '')`)\r\n                            .then((result) => {\r\n                                reload(recordList.length);\r\n                                return result;\r\n                            })\r\n                    })}\r\n                    {createButton('Update', focus == -1 || isLoad, () => {\r\n                        if (!isEdit) {\r\n                            setEdit(true);\r\n                            setTitle(selectedRecord.title);\r\n                            setChordMode(selectedRecord.chord_mode);\r\n                        }\r\n                    }, isEdit)}\r\n                    {createButton('Delete', focus == -1 || isEdit || isLoad, () => {\r\n                        (async () => {\r\n                            setMessage('Delete...');\r\n                            console.log('----start----');\r\n                            await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${recordList[focus].id}`);\r\n                            await sendQueryRequestToAPI('update', `delete from sclibtbl where id = ${recordList[focus].id}`);\r\n                            reload(-1);\r\n                            setFocus(-1);\r\n                            console.log('----end----');\r\n                        })();\r\n                    })}\r\n                </div>\r\n                <div className={[\r\n                    'lib',\r\n                    isEdit ? 'disable' : ''\r\n                ].join(' ')}>\r\n                    <div className={[\r\n                        'message',\r\n                        !isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        <span>{message}</span>\r\n                    </div>\r\n                    <div className={[\r\n                        'list',\r\n                        isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        {titleList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <div className=\"opr\">\r\n                    {createButton('Cancel', !isEdit || isLoad, () => {\r\n                        dispatcher.score.setNoteData({...state.noteData, dataList: []});\r\n                        setEdit(false);\r\n                    })}\r\n                    {createButton('Save', !isEdit || chordMode === '' || isLoad, () => {\r\n                        setLoad(true);\r\n                        (async () => {\r\n                            console.log('----start----');\r\n                            const values: string[] = [];\r\n                            await sendQueryRequestToAPI('update', `update sclibtbl set title = '${title}', chord_mode = '${chordMode}' where id = ${selectedRecord.id}`);\r\n                            if (state.noteData.dataList.length > 0) {\r\n                                state.noteData.dataList.forEach((data, i) => {\r\n                                    values.push(`(${selectedRecord.id}, ${i}, '${JSON.stringify(data)}')`);\r\n                                });\r\n                                await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${selectedRecord.id}`);\r\n                                await sendQueryRequestToAPI('update', `insert into data_tbl values${values.join(',')}`);\r\n                            }\r\n                            console.log('----end----');\r\n                            alert('The data was saved successfully!');\r\n                            // setEdit(false);\r\n                            setLoad(false);\r\n                        })();\r\n                    })}\r\n                    {createButton('Edit', !isEdit || chordMode === '' || isLoad, () => {\r\n                        setLoad(true);\r\n                        (async () => {\r\n                            if (selectedRecord.data_cnt == 0) {\r\n                                dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                            } else {\r\n                                const response = await sendQueryRequestToAPI('select', `SELECT json from data_tbl where score = ${selectedRecord.id} order by seq`);\r\n                                const results = await response.json();\r\n                                // alert(JSON.stringify(results));\r\n                                const dataList: NoteElement[] = [];\r\n                                results.forEach((result: { json: string }) => {\r\n                                    dataList.push(JSON.parse(result.json));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList, chordMode: chordMode as CHORD_MODE  });\r\n                            }\r\n                            state.noteState.cuScoreId = selectedRecord.id;\r\n                            dispatcher.score.setNoteState({...state.noteState});\r\n                            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: 2 });\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                            setLoad(false);\r\n                        })();\r\n                    })}\r\n                </div>\r\n                {\r\n                    !isEdit ? <></> : (\r\n                        <div className=\"data\">\r\n                            {createInfoRecored('Id', (\r\n                                <span className=\"value\">{selectedRecord.id}</span>\r\n                            ))}\r\n                            {createInfoRecored('Title', (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        // recordList[focus].title = e.target.value;\r\n                                        // setRecordList(recordList);\r\n                                        setTitle(e.target.value);\r\n                                    }}\r\n                                    value={title}\r\n                                />\r\n                            ))}\r\n                            {createInfoRecored('Mode', (\r\n                                // <span className=\"value\">{selectedRecord.chord_mode}</span>\r\n                                <select className={[\r\n                                    'value',\r\n                                    selectedRecord.data_cnt > 0 ? 'disable' : ''\r\n                                ].join(' ')}\r\n                                    value={chordMode}\r\n                                    onChange={(e) => {\r\n                                        setChordMode(e.target.value as CHORD_MODE | '');\r\n                                    }}>\r\n                                    <option value=''></option>\r\n                                    <option value={CHORD_MODE.SCALE}>{CHORD_MODE.SCALE}</option>\r\n                                    <option value={CHORD_MODE.DIRECT}>{CHORD_MODE.DIRECT}</option>\r\n                                </select>\r\n                            ))}\r\n                            {createInfoRecored('Show', (\r\n                                <span className=\"value\">{'PRIVATE'}</span>\r\n                            ))}\r\n                            {createInfoRecored('Data', (\r\n                                <span className=\"value\">{selectedRecord.data_cnt}</span>\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","\r\nexport const createFixedForm = (label: string, value: string): JSX.Element => {\r\n    return (\r\n        <div className=\"record\">\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"fixed\">{value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createTextForm = (\r\n    label: string, value: string,\r\n    callback: (e: React.ChangeEvent<HTMLInputElement>) => void): JSX.Element => {\r\n    return (\r\n        <div className=\"record\">\r\n            <div className=\"label\">{label}</div>\r\n            <input type=\"text\" value={value} onChange={(e) => callback(e)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createSelectForm = (\r\n    label: string, value: string,\r\n    list: { value: string, display: string }[],\r\n    callback: (e: React.ChangeEvent<HTMLSelectElement>) => void): JSX.Element => {\r\n\r\n    const optionJSXList: JSX.Element[] = [];\r\n    list.forEach((item, i) => {\r\n        optionJSXList.push(\r\n            <option key={i} value={item.value}>{item.display}</option>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"record\">\r\n            <div className=\"label\">{label}</div>\r\n            <select value={value} onChange={(e) => callback(e)}>\r\n                {optionJSXList}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createButtonRecord = (list: { label: string, disabled: boolean, callback: () => void }[]) => {\r\n\r\n    const buttonJSXList: JSX.Element[] = [];\r\n    list.forEach((item, i) => {\r\n        buttonJSXList.push(\r\n            <button\r\n                key={i}\r\n                className={[item.disabled ? 'disable' : ''].join(' ')}\r\n                onClick={() => item.callback()}\r\n            >{item.label}</button>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"record\">{buttonJSXList}</div>\r\n    );\r\n}","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTSustain, ThemaDataTree, ThemaIndexedElement } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createSelectForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\n\r\nconst ThemaTabRoot = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.root;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'root') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as ThemaDataTree;\r\n\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createTextForm(\r\n                'Name',\r\n                form.themaName,\r\n                (e) => {\r\n                    form.themaName = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.sustains.length)\r\n            )}\r\n\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            form.themaName = data.themaName;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            data.themaName = form.themaName;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Sustain',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildSustain();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n            <div className=\"src\">\r\n                <textarea value={form.src} onChange={(e) => {\r\n                    form.src = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }} />\r\n            </div>\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Sync',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.setThemaeData(JSON.parse(form.src));\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabRoot;","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTSustain, ThemaIndexedElement } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createSelectForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabSustain = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.sustain;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'sustain') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as BTSustain;\r\n    let sustain = '-';\r\n    if (form.beat != null) {\r\n        sustain = String(form.beat + form.headAdjust + form.tailAdjust);\r\n    }\r\n    const validate = form.beat != null;\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createSelectForm(\r\n                'Beat',\r\n                form.beat ? String(form.beat) : '',\r\n                [\r\n                    { value: '', display: '' },\r\n                    { value: String(1), display: String(1) },\r\n                    { value: String(2), display: String(2) },\r\n                    { value: String(3), display: String(3) },\r\n                    { value: String(4), display: String(4) }\r\n                ],\r\n                (e) => {\r\n                    form.beat = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createSelectForm(\r\n                'Head',\r\n                String(form.headAdjust),\r\n                [\r\n                    { value: String(-0.5), display: String(-0.5) },\r\n                    { value: String(-0.25), display: String(-0.25) },\r\n                    { value: String(0), display: String(0) },\r\n                    { value: String(0.25), display: String(+0.25) },\r\n                    { value: String(0.5), display: String(+0.5) },\r\n                ],\r\n                (e) => {\r\n                    form.headAdjust = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createSelectForm(\r\n                'Tail',\r\n                String(form.tailAdjust),\r\n                [\r\n                    { value: String(-0.5), display: String(-0.5) },\r\n                    { value: String(-0.25), display: String(-0.25) },\r\n                    { value: String(0), display: String(0) },\r\n                    { value: String(0.25), display: String(+0.25) },\r\n                    { value: String(0.5), display: String(+0.5) },\r\n                ],\r\n                (e) => {\r\n                    form.tailAdjust = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createFixedForm('Sustain', sustain)}\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.patterns.length)\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: !validate,\r\n                        callback: () => {\r\n                            data.beat = form.beat as number;\r\n                            data.headAdjust = form.headAdjust;\r\n                            data.tailAdjust = form.tailAdjust;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Pattern',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildPattern(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabSustain;","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTPattern, BTVoicing, ThemaIndexedElement, VoicingTargetCondition } from \"contents/redux/store\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabVoicing = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.voicing;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            form.def = JSON.parse(form.src);\r\n        } catch (e) {\r\n            form.def = null;\r\n        }\r\n    },[form.src]);\r\n\r\n    if (cur.type !== 'voicing') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as BTVoicing;\r\n\r\n    const getList = () => {\r\n        const list:string[] = [];\r\n        if(form.def != null)  {\r\n            form.def.useChannels.forEach(param=>{\r\n                list.push(`${param.octave}-${param.structIndex}`);\r\n            });\r\n        }\r\n        return list.join(' ');\r\n    }\r\n\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n        {createFixedForm('Channel', getList())}\r\n        <div className=\"src\">\r\n            <textarea value={form.src} onChange={(e) => {\r\n                form.src = e.target.value;\r\n                dispatcher.thema.setThemaState(state.themaState);\r\n            }} />\r\n        </div>\r\n        {\r\n            createButtonRecord([\r\n                {\r\n                    label: 'Edit',\r\n                    disabled: false,\r\n                    callback: () => {\r\n                        dispatcher.thema.callBackingVoicingEditor();\r\n                    }\r\n                }\r\n            ])\r\n        }\r\n        {\r\n            createButtonRecord([\r\n                {\r\n                    label: 'Cancel',\r\n                    disabled: state.themaState.isCreate,\r\n                    callback: () => {\r\n\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Update',\r\n                    disabled: false,\r\n                    callback: () => {\r\n                        data.def = JSON.parse(form.src);\r\n                        dispatcher.thema.setThemaeData(thema);\r\n                        state.themaState.isCreate = false;\r\n                        dispatcher.thema.setThemaState(state.themaState);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    disabled: false,\r\n                    callback: () => {\r\n\r\n                    }\r\n                },\r\n            ])\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabVoicing;","import { KEY12_SHARP_LIST, SymbolType } from \"contents/common/define\";\r\nimport { getSymbolName, getSymbolsIncludeCategory, getSymbolTypeName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTPattern, ThemaIndexedElement, VoicingTargetCondition, VoicingTargetType } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createSelectForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabCondition = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.condition;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'condition') {\r\n        return <></>\r\n    }\r\n    const data = cur.reffer as VoicingTargetCondition;\r\n    const parent = cur.parent?.reffer as VoicingTargetType;\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n        {createFixedForm(\r\n            'Category',\r\n            getSymbolTypeName(parent.symbolType)\r\n        )}\r\n            {createSelectForm(\r\n                'Root Min',\r\n                form.minRootIndex.toString(),\r\n                (() => {\r\n                    const list: { value: string, display: string }[] = [];\r\n                    for (let i = 0; i < 12; i++) {\r\n                        list.push({\r\n                            value: String(i),\r\n                            display: KEY12_SHARP_LIST[i]\r\n                        });\r\n                    }\r\n                    return list;\r\n                })(),\r\n                (e) => {\r\n                    form.minRootIndex = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createSelectForm(\r\n                'Root Max',\r\n                form.maxRootIndex.toString(),\r\n                (() => {\r\n                    const list: { value: string, display: string }[] = [];\r\n                    for (let i = 0; i < 12; i++) {\r\n                        list.push({\r\n                            value: String(i),\r\n                            display: KEY12_SHARP_LIST[i]\r\n                        });\r\n                    }\r\n                    return list;\r\n                })(),\r\n                (e) => {\r\n                    form.maxRootIndex = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {/* {createFixedForm(\r\n                'Symbols',\r\n                String(data.tgtSymbols.map((symbol) => `[${getSymbolName(symbol)}]`).join(', '))\r\n            )} */}\r\n            <div className={['selector'].join(' ')}>\r\n                {(() => {\r\n                    const category: SymbolType = (cur.parent?.reffer as VoicingTargetType).symbolType;\r\n                    return getSymbolsIncludeCategory(category).\r\n                        map((symbol, i): JSX.Element => {\r\n                            return (\r\n                                <div key={i} className={[\r\n                                    'item',\r\n                                    form.tgtSymbols.includes(symbol) ? 'active' : ''\r\n                                ].join(' ')}\r\n                                    onClick={() => {\r\n                                        if (!form.tgtSymbols.includes(symbol)) {\r\n                                            form.tgtSymbols.push(symbol);\r\n                                        } else {\r\n                                            form.tgtSymbols = form.tgtSymbols.filter((item) => item !== symbol);\r\n                                        }\r\n                                        dispatcher.thema.setThemaState(state.themaState);\r\n                                    }}\r\n                                >[{getSymbolName(symbol)}]</div>\r\n                            );\r\n                        });\r\n                })()}\r\n            </div>\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.voicings.length)\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            data.minRootIndex = form.minRootIndex;\r\n                            data.maxRootIndex = form.maxRootIndex;\r\n                            data.tgtSymbols = form.tgtSymbols;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Voicing',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildVoicing(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabCondition;","import { SymbolType } from \"contents/common/define\";\r\nimport { getSymbolTypeName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTPattern, ThemaIndexedElement, VoicingTargetType } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createSelectForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabCategory = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.category;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'category') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as VoicingTargetType;\r\n    // alert('cat: ' + state.themaState.themaCacheList[state.themaState.focusIndex].type);\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createSelectForm(\r\n                'Category',\r\n                form.category == null ? '' : form.category.toString(),\r\n                (() => {\r\n                    const list: { value: string, display: string }[] = [];\r\n                    list.push({ value: '', display: '' });\r\n                    Object.values(SymbolType).filter(v => !isNaN(Number(v))).forEach((item, i) => {\r\n                        list.push({\r\n                            value: String(item),\r\n                            display: getSymbolTypeName(Number(item))\r\n                        });\r\n                    });\r\n                    return list;\r\n                })(),\r\n                (e) => {\r\n                    form.category = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            data.symbolType = form.category as SymbolType;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Condition',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildCondition(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabCategory;","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BackingPattern, BTPattern, BTSustain, ThemaIndexedElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabPattern = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.pattern;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            form.def = JSON.parse(form.src);\r\n        } catch (e) {\r\n            form.def = null;\r\n        }\r\n    },[form.src]);\r\n\r\n    if (cur.type !== 'pattern') {\r\n        return <></>\r\n    }\r\n    const data = cur.reffer as BTPattern;\r\n\r\n    const parent = cur.parent?.reffer as BTSustain;\r\n    \r\n\r\n    const getChannel = () => {\r\n        let channel = '-';\r\n        if(form.def != null)  {\r\n            channel = String(form.def.layers[0].table.length);\r\n        }\r\n        return channel;\r\n    }\r\n\r\n    const getNotes = () => {\r\n        let notes = '-';\r\n        if(form.def != null)  {\r\n            const def: BackingPattern = JSON.parse(form.src);\r\n            let count = 0;\r\n            def.layers.forEach(layer => {\r\n                layer.table.forEach(line => {\r\n                    line.forEach(cell => {\r\n                        cell.forEach(isUse => {\r\n                            if (isUse) count++;\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n            notes = String(count);\r\n        }\r\n        return notes;\r\n    }\r\n\r\n    const validate = ():boolean => {\r\n        return form.name != '' && form.def != null;\r\n    };\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createFixedForm('Beat', String(parent.beat))}\r\n            {createFixedForm('Head', String(parent.headAdjust))}\r\n            {createFixedForm('Tail', String(parent.tailAdjust))}\r\n            {createFixedForm('Sustain', String(parent.beat + parent.headAdjust + parent.tailAdjust))}\r\n            {createTextForm(\r\n                'Name',\r\n                form.name,\r\n                (e) => {\r\n                    form.name = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createFixedForm('Channel', getChannel())}\r\n            {createFixedForm('Notes', getNotes())}\r\n            <div className=\"src\">\r\n                <textarea value={form.src} onChange={(e) => {\r\n                    form.src = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }} />\r\n            </div>\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Edit',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.callBackingPatternEditor();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.tgtTypes.length)\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: !validate(),\r\n                        callback: () => {\r\n                            data.name = form.name;\r\n                            data.def = JSON.parse(form.src);\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Category',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildCategory(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabPattern;","import './ScoreContThemaTab.css';\r\n\r\nimport { BTSustain, ThemaDataTree, BTPattern, VoicingTargetType, VoicingTargetCondition, BTVoicing, ThemaElementType, ThemaIndexedElement, FloatWndState, BackingVoicing, ChannelParam } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ThemaTabRoot from './tabs/ThemaTabRoot';\r\nimport { KEY12_SHARP_LIST, SymbolType } from 'contents/common/define';\r\nimport ThemaTabSustain from './tabs/ThemaTabSustain';\r\nimport ThemaTabVoicing from './tabs/ThemaTabVoicing';\r\nimport ThemaTabCondition from './tabs/ThemaTabCondition';\r\nimport ThemaTabCategory from './tabs/ThemaTabCategory';\r\nimport ThemaTabPattern from './tabs/ThemaTabPattern';\r\nimport { getSymbolName, getSymbolTypeName } from 'contents/common/utils';\r\nimport BackingEditor from '../note/floatwnd/backing/BackingEditor';\r\n\r\nconst ScoreContThemaTab = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const themaState = state.themaState;\r\n    const dataIndexies = themaState.themaCacheList;\r\n\r\n    const [treeItemJsxList, setTreeItemJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    // ツリーのインデックス化\r\n    useEffect(() => {\r\n        dispatcher.thema.buildIndex();\r\n    }, [thema]);\r\n\r\n    // インデックスのJSX化\r\n    useEffect(() => {\r\n        const treeItemJsxList: JSX.Element[] = [];\r\n\r\n        const createTreeItemJsx = (data: ThemaIndexedElement, isActive: boolean): JSX.Element => {\r\n            const key = treeItemJsxList.length;\r\n            const depth = ((): number => {\r\n                switch (data.type) {\r\n                    case 'root': return 0;\r\n                    case 'sustain': return 1;\r\n                    case 'pattern': return 2;\r\n                    case 'category': return 3;\r\n                    case 'condition': return 4;\r\n                    case 'voicing': return 5;\r\n                }\r\n            })();\r\n\r\n            const label: JSX.Element = themaState.isCreate && key === themaState.focusIndex ?\r\n                (<span className=\"create\">Creating...</span>)\r\n                : (() => {\r\n                    switch (data.type) {\r\n                        case 'root': {\r\n                            const reffer = data.reffer as ThemaDataTree;\r\n                            return (\r\n                                <span className=\"value\">{reffer.themaName}</span>\r\n                            );\r\n                        }\r\n                        case 'sustain': {\r\n                            const reffer = data.reffer as BTSustain;\r\n                            return (<>\r\n                                <span>beat: </span>\r\n                                <span className=\"value\">{reffer.beat}</span>\r\n                                <span>[head: </span>\r\n                                <span className=\"value\">{reffer.headAdjust}</span>\r\n                                <span>, tail: </span>\r\n                                <span className=\"value\">{reffer.tailAdjust}</span>\r\n                                <span>]</span>\r\n                            </>);\r\n                        }\r\n                        case 'pattern': {\r\n                            const reffer = data.reffer as BTPattern;\r\n                            return (<>\r\n                                <span className=\"value\">{reffer.name}</span>\r\n                                <span> [channel: </span>\r\n                                <span className=\"value\">0</span>\r\n                                <span>, notes: </span>\r\n                                <span className=\"value\">0</span>\r\n                                <span>]</span>\r\n                            </>);\r\n                        }\r\n                        case 'category': {\r\n                            const reffer = data.reffer as VoicingTargetType;\r\n                            return (<>\r\n                                <span className=\"value\">{getSymbolTypeName(reffer.symbolType as SymbolType)}</span>\r\n                            </>);\r\n                        }\r\n                        case 'condition': {\r\n                            const reffer = data.reffer as VoicingTargetCondition;\r\n                            const min = KEY12_SHARP_LIST[reffer.minRootIndex];\r\n                            const max = KEY12_SHARP_LIST[reffer.maxRootIndex];\r\n                            const symbols = reffer.tgtSymbols.map((symbol) => `[${getSymbolName(symbol)}]`).join(', ');\r\n                            return (<>\r\n                                <span className=\"value\">{min}</span>\r\n                                <span>～</span>\r\n                                <span className=\"value\">{max}</span>\r\n                                <span> {'{'}</span>\r\n                                <span className=\"value\">{symbols}</span>\r\n                                <span>{'}'}</span>\r\n                            </>);\r\n                        }\r\n                        case 'voicing': {\r\n                            const reffer = data.reffer as BTVoicing;\r\n                            let src = '';\r\n                            if (reffer.def !== null) {\r\n                                const list = reffer.def.useChannels;\r\n                                const items = list.map((item) => {\r\n                                    return `${item.octave}-${item.structIndex}`;\r\n                                });\r\n                                src = items.join(', ');\r\n                            }\r\n                            return (<>\r\n                                <span>[</span>\r\n                                <span className=\"value\">{src}</span>\r\n                                <span>]</span>\r\n                            </>);\r\n                        }\r\n                    }\r\n                })();\r\n\r\n            const callback: Function = (() => {\r\n                switch (data.type) {\r\n                    case 'root': return () => dispatcher.thema.addChildSustain();\r\n                    case 'sustain': return () => dispatcher.thema.addChildPattern(data);\r\n                    case 'pattern': return () => dispatcher.thema.addChildCategory(data);\r\n                    case 'category': return () => dispatcher.thema.addChildCondition(data);\r\n                    case 'condition': return () => dispatcher.thema.addChildVoicing(data);\r\n                }\r\n                return () => { };\r\n            })();\r\n            const indentWidth = 10 + depth * 50;\r\n            return (\r\n                <div\r\n                    key={key}\r\n                    className={[\r\n                        'item',\r\n                        isActive ? 'active' : '',\r\n                        themaState.isCreate && themaState.focusIndex !== key ? 'lock' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <div className=\"indent\" style={{ width: indentWidth + 'px' }}></div>\r\n                    <div className={[\r\n                        'opener',\r\n                        data.ChildCnt == 0 ? 'hidden' : ''\r\n                    ].join(' ')} onClick={() => {\r\n                        data.isClose = !data.isClose;\r\n                        themaState.themaCacheList = dataIndexies.slice();\r\n                        dispatcher.thema.setThemaState(themaState);\r\n                    }}>\r\n                        <span>{data.isClose ? '＋' : '－'}</span>\r\n                    </div>\r\n                    {((): JSX.Element => {\r\n                        switch (data.type) {\r\n                            case 'root': return (<div className=\"type root\"><span>ROOT</span></div>);\r\n                            case 'sustain': return (<div className=\"type sustain\"><span>SUSTAIN</span></div>);\r\n                            case 'pattern': return (<div className=\"type pattern\"><span>PATTERN</span></div>);\r\n                            case 'category': return (<div className=\"type category\"><span>CATEGORY</span></div>);\r\n                            case 'condition': return (<div className=\"type condition\"><span>CONDITION</span></div>);\r\n                            case 'voicing': return (<div className=\"type voicing\"><span>VOICING</span></div>);\r\n                        }\r\n                    })()}\r\n                    <div\r\n                        className={[\r\n                            'label',\r\n                            themaState.focusIndex === key ? 'active' : ''\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            themaState.focusIndex = key;\r\n                            const cur = themaState.themaCacheList[themaState.focusIndex];\r\n                            switch (cur.type) {\r\n                                case 'root': {\r\n                                    const data = cur.reffer as ThemaDataTree;\r\n                                    const form = themaState.form.root;\r\n                                    form.themaName = data.themaName;\r\n                                    form.src = JSON.stringify(thema);\r\n                                }\r\n                                    break;\r\n                                case 'sustain': {\r\n                                    const data = cur.reffer as BTSustain;\r\n                                    const form = themaState.form.sustain;\r\n                                    form.beat = data.beat;\r\n                                    form.headAdjust = data.headAdjust;\r\n                                    form.tailAdjust = data.tailAdjust;\r\n                                }\r\n                                    break;\r\n                                case 'pattern': {\r\n                                    const data = cur.reffer as BTPattern;\r\n                                    const form = themaState.form.pattern;\r\n                                    form.name = data.name;\r\n                                    form.def = null;\r\n                                    form.src = JSON.stringify(data.def);\r\n                                }\r\n                                    break;\r\n                                case 'category': {\r\n                                    const data = cur.reffer as VoicingTargetType;\r\n                                    const form = themaState.form.category;\r\n                                    form.category = data.symbolType as SymbolType;\r\n                                }\r\n                                    break;\r\n                                case 'condition': {\r\n                                    const data = cur.reffer as VoicingTargetCondition;\r\n                                    const form = themaState.form.condition;\r\n                                    form.tgtSymbols = data.tgtSymbols;\r\n                                    form.minRootIndex = data.minRootIndex;\r\n                                    form.maxRootIndex = data.maxRootIndex;\r\n                                }\r\n                                    break;\r\n                                case 'voicing': {\r\n                                    const data = cur.reffer as BTVoicing;\r\n                                    const form = themaState.form.voicing;\r\n                                    form.def = null;\r\n                                    form.src = JSON.stringify(data.def);\r\n                                }\r\n                                    break;\r\n                            }\r\n                            dispatcher.thema.setThemaState(themaState);\r\n                        }}\r\n                        onContextMenu={() => callback()}\r\n                    >{label}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const activeRefList: ThemaIndexedElement[] = [];\r\n        let ref: null | ThemaIndexedElement = dataIndexies[themaState.focusIndex];\r\n        while (ref != null) {\r\n            activeRefList.push(ref);\r\n            ref = ref.parent;\r\n        }\r\n        // for (let ref = dataIndexies[themaState.focusIndex]; ref.parent !== null; ref = ref.parent) {\r\n        //     activeRefList.push(ref);\r\n        // }\r\n        // activeRefList.push(dataIndexies[0]);\r\n        dataIndexies.forEach((data) => {\r\n            treeItemJsxList.push(\r\n                createTreeItemJsx(data, activeRefList.includes(data))\r\n            );\r\n        });\r\n\r\n        setTreeItemJsxList(treeItemJsxList);\r\n    }, [dataIndexies, themaState.focusIndex]);\r\n\r\n\r\n    if (dataIndexies.length === 0) {\r\n        return (<></>);\r\n    }\r\n    const cur = dataIndexies[themaState.focusIndex];\r\n\r\n    return (\r\n        <div id=\"scorecont-thematab-root\">\r\n            <BackingEditor />\r\n            <div className=\"cont left\">\r\n                <div className=\"loader\">\r\n\r\n                </div>\r\n                <div className={[\r\n                    'tree',\r\n                    themaState.isCreate ? 'lock' : ''\r\n                ].join(' ')}>\r\n                    {treeItemJsxList}\r\n                </div>\r\n                <div className=\"operation\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"cont right\">\r\n\r\n                <div id=\"themainfotab-root\">\r\n                    <TabbedPane groupName=\"themainfo-tabs\"\r\n                        tabElements={[\r\n                            { name: 'Root', disable: true, cont: <ThemaTabRoot /> },\r\n                            { name: 'Sustain', disable: true, cont: <ThemaTabSustain /> },\r\n                            { name: 'Pattern', disable: true, cont: <ThemaTabPattern /> },\r\n                            { name: 'Type', disable: true, cont: <ThemaTabCategory /> },\r\n                            { name: 'Condition', disable: true, cont: <ThemaTabCondition /> },\r\n                            { name: 'Voicing', disable: true, cont: <ThemaTabVoicing /> },\r\n                        ]}\r\n                        activeNo={(\r\n                            (): number => {\r\n                                switch (cur.type) {\r\n                                    case 'root': return 0;\r\n                                    case 'sustain': return 1;\r\n                                    case 'pattern': return 2;\r\n                                    case 'category': return 3;\r\n                                    case 'condition': return 4;\r\n                                    case 'voicing': return 5;\r\n                                }\r\n                            }\r\n                        )()}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ScoreContThemaTab;\r\n","export const FluidR3_GM = [\r\n    \"accordion\",\r\n    \"acoustic_bass\",\r\n    \"acoustic_grand_piano\",\r\n    \"acoustic_guitar_nylon\",\r\n    \"acoustic_guitar_steel\",\r\n    \"agogo\",\r\n    \"alto_sax\",\r\n    \"applause\",\r\n    \"bagpipe\",\r\n    \"banjo\",\r\n    \"baritone_sax\",\r\n    \"bassoon\",\r\n    \"bird_tweet\",\r\n    \"blown_bottle\",\r\n    \"brass_section\",\r\n    \"breath_noise\",\r\n    \"bright_acoustic_piano\",\r\n    \"celesta\",\r\n    \"cello\",\r\n    \"choir_aahs\",\r\n    \"church_organ\",\r\n    \"clarinet\",\r\n    \"clavinet\",\r\n    \"contrabass\",\r\n    \"distortion_guitar\",\r\n    \"drawbar_organ\",\r\n    \"dulcimer\",\r\n    \"electric_bass_finger\",\r\n    \"electric_bass_pick\",\r\n    \"electric_grand_piano\",\r\n    \"electric_guitar_clean\",\r\n    \"electric_guitar_jazz\",\r\n    \"electric_guitar_muted\",\r\n    \"electric_piano_1\",\r\n    \"electric_piano_2\",\r\n    \"english_horn\",\r\n    \"fiddle\",\r\n    \"flute\",\r\n    \"french_horn\",\r\n    \"fretless_bass\",\r\n    \"fx_1_rain\",\r\n    \"fx_2_soundtrack\",\r\n    \"fx_3_crystal\",\r\n    \"fx_4_atmosphere\",\r\n    \"fx_5_brightness\",\r\n    \"fx_6_goblins\",\r\n    \"fx_7_echoes\",\r\n    \"fx_8_scifi\",\r\n    \"glockenspiel\",\r\n    \"guitar_fret_noise\",\r\n    \"guitar_harmonics\",\r\n    \"gunshot\",\r\n    \"harmonica\",\r\n    \"harpsichord\",\r\n    \"helicopter\",\r\n    \"honkytonk_piano\",\r\n    \"kalimba\",\r\n    \"koto\",\r\n    \"lead_1_square\",\r\n    \"lead_2_sawtooth\",\r\n    \"lead_3_calliope\",\r\n    \"lead_4_chiff\",\r\n    \"lead_5_charang\",\r\n    \"lead_6_voice\",\r\n    \"lead_7_fifths\",\r\n    \"lead_8_bass__lead\",\r\n    \"marimba\",\r\n    \"melodic_tom\",\r\n    \"music_box\",\r\n    \"muted_trumpet\",\r\n    \"oboe\",\r\n    \"ocarina\",\r\n    \"orchestra_hit\",\r\n    \"orchestral_harp\",\r\n    \"overdriven_guitar\",\r\n    \"pad_1_new_age\",\r\n    \"pad_2_warm\",\r\n    \"pad_3_polysynth\",\r\n    \"pad_4_choir\",\r\n    \"pad_5_bowed\",\r\n    \"pad_6_metallic\",\r\n    \"pad_7_halo\",\r\n    \"pad_8_sweep\",\r\n    \"pan_flute\",\r\n    \"percussive_organ\",\r\n    \"percussion\",\r\n    \"piccolo\",\r\n    \"pizzicato_strings\",\r\n    \"recorder\",\r\n    \"reed_organ\",\r\n    \"reverse_cymbal\",\r\n    \"rock_organ\",\r\n    \"seashore\",\r\n    \"shakuhachi\",\r\n    \"shamisen\",\r\n    \"shanai\",\r\n    \"sitar\",\r\n    \"slap_bass_1\",\r\n    \"slap_bass_2\",\r\n    \"soprano_sax\",\r\n    \"steel_drums\",\r\n    \"string_ensemble_1\",\r\n    \"string_ensemble_2\",\r\n    \"synth_bass_1\",\r\n    \"synth_bass_2\",\r\n    \"synth_brass_1\",\r\n    \"synth_brass_2\",\r\n    \"synth_choir\",\r\n    \"synth_drum\",\r\n    \"synth_strings_1\",\r\n    \"synth_strings_2\",\r\n    \"taiko_drum\",\r\n    \"tango_accordion\",\r\n    \"telephone_ring\",\r\n    \"tenor_sax\",\r\n    \"timpani\",\r\n    \"tinkle_bell\",\r\n    \"tremolo_strings\",\r\n    \"trombone\",\r\n    \"trumpet\",\r\n    \"tuba\",\r\n    \"tubular_bells\",\r\n    \"vibraphone\",\r\n    \"viola\",\r\n    \"violin\",\r\n    \"voice_oohs\",\r\n    \"whistle\",\r\n    \"woodblock\",\r\n    \"xylophone\"\r\n]","import { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, Column } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport styled, { css } from 'styled-components';\r\nimport { KEY12_SHARP_LIST } from 'contents/common/define';\r\nimport { FluidR3_GM } from './SoundFontNames';\r\nimport Soundfont from 'soundfont-player';\r\n\r\nconst BEAT_WIDTH = 160;\r\nconst NOTES_HEIGHT = 22;\r\n\r\nconst ScoreContTuneTab = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [len, setLen] = useState<number>(4);\r\n    // const [isDiv3, setDiv3] = useState<boolean>(false);\r\n    // const [soundFont, setSoundFont] = useState<Soundfont.InstrumentName>('viola');\r\n    // const [columnList, setColumnList] = useState<Column[]>([]);\r\n    // const [columnIndex, setColumnIndex] = useState<number>(0);\r\n    // const [isEdit, setEdit] = useState<boolean>(false);\r\n    const [isLoad, setLoad] = useState<boolean>(false);\r\n\r\n    const tableRef = useRef({} as HTMLDivElement);\r\n    const intervalRef = useRef({} as HTMLDivElement);\r\n    const measureRef = useRef({} as HTMLDivElement);\r\n    const BlocksRef = useRef({} as HTMLDivElement);\r\n\r\n    const instrument = state.instrument as Soundfont.Player;\r\n    const tuneState = state.tuneState;\r\n    const columnList = state.noteData.columnList;\r\n    const curColumn = columnList[tuneState.columnIndex];\r\n    const soundFont = state.noteData.soundFont;\r\n\r\n    useEffect(() => {\r\n        const columnList: Column[] = [];\r\n        columnList.push({\r\n            len4: 1,\r\n            len8: 0,\r\n            len16: 0,\r\n            len4div3: 0,\r\n            len8div3: 0,\r\n            soundIndex: -1\r\n        });\r\n        dispatcher.tune.setColumnList(columnList);\r\n        // dispatcher.tune.setState({ ...state.tuneState, soundFont: 'violin' });\r\n        tuneState.tableRef = tableRef;\r\n        tuneState.intervalRef = intervalRef;\r\n        tuneState.BlocksRef = BlocksRef;\r\n        tuneState.measureRef = measureRef;\r\n        dispatcher.tune.setState(tuneState);\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     const formDispatcher = {...state.formDispatcher};\r\n    //     formDispatcher.tune = {\r\n    //         move: (value)=> {\r\n    //             setColumnIndex(columnIndex + value);\r\n    //         },\r\n    //         switchEditOn: ()=> {\r\n    //             setEdit(true);\r\n    //         },\r\n    //         switchEditOff: ()=> {\r\n    //             setEdit(false);\r\n    //         },\r\n    //         expandWidth: ()=> {\r\n\r\n    //         },\r\n    //         intentWidth: ()=> {\r\n\r\n    //         }\r\n    //     }\r\n    //     dispatcher.setFormDispatcher(formDispatcher);\r\n    // }, [columnIndex]);\r\n\r\n    const totalColumnSize: number = useMemo(() => {\r\n        let size = 0;\r\n        columnList.forEach(column => {\r\n            size += column.len4;\r\n            size += column.len8 / 2;\r\n            size += column.len16 / 4;\r\n            size += column.len4div3 / 3;\r\n            size += column.len8div3 / 6;\r\n        });\r\n        return size;\r\n    }, [columnList]);\r\n\r\n    const measureJsxList: JSX.Element[] = useMemo(() => {\r\n        const jsxList: JSX.Element[] = [];\r\n        for (let i = 0; i <= totalColumnSize * 4; i++) {\r\n            let barJsx = <></>;\r\n            if (i % 16 == 0) {\r\n                barJsx = <_Bar>{Math.floor(i / 16) + 1}</_Bar>\r\n            }\r\n            jsxList.push(\r\n                <_Scale key={i} isHead={i % 4 === 0}>{barJsx}</_Scale>\r\n            );\r\n        }\r\n        return jsxList;\r\n    }, [totalColumnSize]);\r\n\r\n    const [columnJsxList, boxList]: [JSX.Element[], JSX.Element[]] = useMemo(() => {\r\n        const columnJsxList: JSX.Element[] = [];\r\n        const boxJsxList: JSX.Element[] = [];\r\n        let pos = 0;\r\n        state.noteData.columnList.forEach((column, i) => {\r\n            const width = (column.len4 + column.len8 / 2 + column.len16 / 4 + column.len4div3 / 3 + column.len8div3 / 6) * BEAT_WIDTH;\r\n            const isActive = i === tuneState.columnIndex;\r\n            columnJsxList.push(\r\n                <_Block key={i} pos={pos} width={width} isActive={isActive}\r\n                    onClick={() => {\r\n                        // setColumnIndex(i);\r\n                        // setEdit(false);\r\n                        dispatcher.tune.setState({ ...tuneState, columnIndex: i, isEdit: false });\r\n                    }}\r\n                >\r\n                    {/* <_Sus>{block.sustain}</_Sus>\r\n                    <_ChordName>{block.chordName}</_ChordName> */}\r\n                    <_Size>{column.len4}</_Size>\r\n                    <_Size>{column.len8}</_Size>\r\n                    <_Size>{column.len16}</_Size>\r\n                </_Block>\r\n            );\r\n            const lineJsxList: JSX.Element[] = [];\r\n            for (let j = 0; j < 88; j++) {\r\n                const octave = Math.floor((87 + 9 - j) / 12);\r\n                const keyIndex = (87 + 9 - j) % 12;\r\n                const chordName = KEY12_SHARP_LIST[keyIndex];\r\n                const soundName = chordName + octave;\r\n                const isNotes = j === column.soundIndex;\r\n                lineJsxList.push(\r\n                    <_Line key={j} soundIndex={j % 12} onClick={() => {\r\n                        // setColumnIndex(i);\r\n                        // setEdit(true);\r\n                        dispatcher.tune.setState({ ...tuneState, columnIndex: i, isEdit: true });\r\n                        // 音声の再生\r\n                        if (columnList[i].soundIndex === j) {\r\n                            columnList[i].soundIndex = -1;\r\n                        } else {\r\n                            columnList[i].soundIndex = j;\r\n                            // instrument.stop();\r\n                            // instrument.play(soundName, 0, { duration: 0.5 });\r\n                            dispatcher.tune.playSoundFont(soundName, 0.5);\r\n                        }\r\n                        dispatcher.tune.setColumnList(columnList.slice());\r\n                        if (tuneState.isAutoScroll) {\r\n                            dispatcher.tune.adjustScrollY();\r\n                        }\r\n                    }} onContextMenu={() => {\r\n                        // setColumnIndex(i);\r\n                        // setEdit(true);\r\n                        dispatcher.tune.setState({ ...tuneState, columnIndex: i, isEdit: true });\r\n                        const soundIndex = columnList[i].soundIndex;\r\n                        if (soundIndex !== -1) {\r\n                            // instrument.stop();\r\n                            // instrument.play(getSoundName(soundIndex), 0, { duration: 0.5 });\r\n                            dispatcher.tune.playSoundFont(getSoundName(soundIndex), 0.5);\r\n                        }\r\n                        if (tuneState.isAutoScroll) {\r\n                            dispatcher.tune.adjustScrollY();\r\n                        }\r\n                    }}>\r\n                        {isNotes ? <_Notes isScale={isScale(0, keyIndex)}>{soundName}</_Notes> : ''}\r\n                    </_Line>\r\n                );\r\n            }\r\n            boxJsxList.push(\r\n                <_Box key={i} isActive={isActive} isEdit={isActive && tuneState.isEdit} pos={pos} width={width}\r\n                >\r\n                    {lineJsxList}\r\n                </_Box>\r\n            );\r\n            pos += width;\r\n        });\r\n        return [columnJsxList, boxJsxList];\r\n    }, [instrument, columnList, tuneState.columnIndex, tuneState.isEdit]);\r\n\r\n    const intervalListJSX: JSX.Element[] = useMemo(() => {\r\n        const intervalListJSX: JSX.Element[] = [];\r\n        for (let i = 0; i < 88; i++) {\r\n            const num = 88 - (i);\r\n            const octave = Math.floor((87 + 9 - i) / 12);\r\n            const chordName = KEY12_SHARP_LIST[(87 + 9 - i) % 12];\r\n            const soundName = chordName + octave;\r\n            const isActive = curColumn && tuneState.isEdit ? curColumn.soundIndex === i : false;\r\n            intervalListJSX.push(\r\n                <_Interval key={i} isActive={isActive} onClick={() => {\r\n                    // instrument.stop();\r\n                    // instrument.play(soundName, 0, { duration: 0.5 });\r\n                    dispatcher.tune.playSoundFont(soundName, 0.5);\r\n                }}>\r\n                    <_Num>{num}</_Num> <_SoundName>{soundName}</_SoundName>\r\n                </_Interval>\r\n            );\r\n        }\r\n        return intervalListJSX;\r\n    }, [instrument, columnList, tuneState.isEdit, tuneState.columnIndex]);\r\n\r\n    const getSoundFontSelectorJsx = (): JSX.Element => {\r\n        const soundFontName = soundFont.name as Soundfont.InstrumentName;\r\n        return (\r\n            <>\r\n                <_SoundFont isEditable={!isLoad} value={soundFontName} onChange={(e) => {\r\n                    const name = e.target.value as Soundfont.InstrumentName;\r\n                    soundFont.name = name;\r\n                    dispatcher.tune.setSoundFont(soundFont);\r\n                }}>\r\n                    {FluidR3_GM.map((name, i) => {\r\n                        return <option key={i} value={name}>{name}</option>\r\n                    })}\r\n                </_SoundFont>\r\n                <_Gain isEditable={!isLoad} type=\"number\" min=\"1\" max=\"15\" step=\"0.2\" value={soundFont.gain} onChange={(e) => {\r\n                    soundFont.gain = Number(e.target.value);\r\n                    dispatcher.tune.setSoundFont(soundFont);\r\n                }} />\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    const createSwitch = (name: string, isActive: boolean, callback: () => void): JSX.Element => {\r\n        return <_LenSwitch onClick={callback} isActive={isActive}>{name}</_LenSwitch>;\r\n    }\r\n    const createLenSwitch = (value: number): JSX.Element => {\r\n        // return createSwitch(String(value), len === value, () => setLen(value));\r\n        return createSwitch(String(value), tuneState.usingLen === value,\r\n            () => {\r\n                tuneState.usingLen = value;\r\n                dispatcher.tune.setState(tuneState);\r\n            }\r\n        );\r\n    }\r\n    const createExecuteButton = (name: string, callback: () => void): JSX.Element => {\r\n        return <_ExecuteButton onClick={callback}>{name}</_ExecuteButton>;\r\n    }\r\n\r\n    return (\r\n        <_Wrap>\r\n            <_Header>\r\n\r\n            </_Header>\r\n            <_Editor>\r\n                <_Operation>\r\n                    {getSoundFontSelectorJsx()}\r\n                    {createExecuteButton(isLoad ? 'del' : 'load', () => {\r\n                        if (!isLoad) {\r\n                            if (soundFont.name != null) {\r\n                                Soundfont.instrument(new AudioContext(), soundFont.name, { gain: soundFont.gain, release: 0.5 }).then((instrument) => {\r\n                                    // alert('load')\r\n                                    dispatcher.setInstruments(instrument);\r\n                                });\r\n                            }\r\n                        } else {\r\n                            dispatcher.setInstruments(null);\r\n                        }\r\n                        setLoad(!isLoad);\r\n                    })}\r\n                    {createLenSwitch(16)}\r\n                    {createLenSwitch(8)}\r\n                    {createLenSwitch(4)}\r\n                    {/* {createSwitch('/3', tuneState.isDiv3, () => setDiv3(!isDiv3))} */}\r\n                    {createSwitch('/3', tuneState.isDiv3,\r\n                        () => {\r\n                            tuneState.isDiv3 = !tuneState.isDiv3;\r\n                            dispatcher.tune.setState(tuneState)\r\n                        }\r\n                    )}\r\n                    {createExecuteButton('add', () => {\r\n                        dispatcher.tune.addColumn();\r\n                    })}\r\n                    {createExecuteButton('del', () => {\r\n                        dispatcher.tune.remooveCur();\r\n                    })}\r\n                    {createExecuteButton('|->>', () => {\r\n                        dispatcher.tune.adjustWidth(true);\r\n                    })}\r\n                    {createExecuteButton('|<<-', () => {\r\n                        dispatcher.tune.adjustWidth(false);\r\n                    })}\r\n                    {createSwitch('scr', tuneState.isAutoScroll,\r\n                        () => dispatcher.tune.setState({ ...tuneState, isAutoScroll: !tuneState.isAutoScroll })\r\n                    )}\r\n                    {createSwitch(!tuneState.isPreview ? 'play' : 'stop', tuneState.isPreview,\r\n                        () => {\r\n                            if (!tuneState.isPreview) {\r\n                                dispatcher.tune.playPreview();\r\n                            } else {\r\n                                dispatcher.tune.stopPreview();\r\n                            }\r\n                            tuneState.isPreview = !tuneState.isPreview;\r\n                            dispatcher.tune.setState(tuneState);\r\n                        }\r\n                    )}\r\n                    {createExecuteButton('up', () => {\r\n                        dispatcher.tune.moveAll(-1);\r\n                    })}\r\n                    {createExecuteButton('down', () => {\r\n                        dispatcher.tune.moveAll(1);\r\n                    })}\r\n                </_Operation>\r\n\r\n                <_WrapInterval ref={intervalRef} onClick={() => {\r\n\r\n                }}>\r\n                    {intervalListJSX}\r\n                </_WrapInterval>\r\n                <_WrapTimeLine>\r\n                    <_Measure ref={measureRef}>\r\n                        {measureJsxList}\r\n                    </_Measure>\r\n                    <_BlockLine ref={BlocksRef}>\r\n                        {columnJsxList}\r\n                    </_BlockLine>\r\n                    <_TableWrap ref={tableRef} onScroll={() => {\r\n\r\n                        const scrollLeft = tableRef.current.scrollLeft;\r\n                        const scrollTop = tableRef.current.scrollTop;\r\n                        measureRef.current.scrollTo({ left: scrollLeft });\r\n                        BlocksRef.current.scrollTo({ left: scrollLeft });\r\n                        intervalRef.current.scrollTo({ top: scrollTop });\r\n                    }}>\r\n                        <_Table width={totalColumnSize * BEAT_WIDTH} >\r\n                            {boxList}\r\n                        </_Table>\r\n                    </_TableWrap>\r\n                </_WrapTimeLine>\r\n            </_Editor>\r\n        </_Wrap>\r\n    );\r\n}\r\n\r\nexport default ScoreContTuneTab;\r\n\r\nconst isScale = (key: number, soundIndex: number): boolean => {\r\n    switch (soundIndex) {\r\n        case 0 + key:\r\n        case 2 + key:\r\n        case 4 + key:\r\n        case 5 + key:\r\n        case 7 + key:\r\n        case 9 + key:\r\n        case 11 + key: return true;\r\n        default: return false;\r\n    }\r\n}\r\n\r\nconst getSoundName = (soundIndex: number) => {\r\n\r\n    const octave = Math.floor((87 + 9 - soundIndex) / 12);\r\n    const keyIndex = (87 + 9 - soundIndex) % 12;\r\n    const chordName = KEY12_SHARP_LIST[keyIndex];\r\n    return chordName + octave;\r\n}\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n`;\r\n\r\nconst _Header = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: #707070;\r\n`;\r\n\r\nconst _Editor = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 40px);\r\n    background-color: #000000;\r\n`;\r\n\r\nconst _Operation = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 40px;\r\n    text-align: left;\r\n    background-color: #16213b;\r\n    & * {\r\n        display: inline-block;\r\n        vertical-align: top;\r\n        margin-left: 5px;\r\n        height: 30px;\r\n        margin-top: 5px;\r\n    }\r\n`;\r\n\r\nconst _SoundFont = styled.select<{\r\n    isEditable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 160px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: ${props => props.isEditable ? 'black' : 'blue'};\r\n    ${props => props.isEditable ? '' : 'pointer-events: none;'}\r\n    background-color: #8197a0;\r\n    border: solid 1px #e2e9ee;\r\n    border-radius: 2px;\r\n    & option {\r\n        /* width: 100%;\r\n        height: 30px; */\r\n        background-color: #97aec4;\r\n        color: red;\r\n    }\r\n`;\r\nconst _Gain = styled.input<{\r\n    isEditable: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 60px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: ${props => props.isEditable ? 'black' : 'blue'};\r\n    ${props => props.isEditable ? '' : 'pointer-events: none;'}\r\n    background-color: #8197a0;\r\n    border: solid 1px #e2e9ee;\r\n    border-radius: 2px;\r\n`;\r\n\r\nconst _ButtonBase = styled.div`\r\n    display: inline-block;\r\n    padding: 0 10px 0 10px;\r\n    width: 80px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst _LenSwitch = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 10px 0 10px;\r\n    width: 80px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 28px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    ${props => !props.isActive ?\r\n        css`\r\n            background-color: #5662a0;\r\n            color: #f5f5f5;\r\n            border: solid 1px #acc0d6;\r\n        ` :\r\n        css`\r\n            background-color: #f4ff5f;\r\n            color: #fa0000;\r\n            border: solid 1px #fa0000;\r\n        `\r\n    }\r\n    &:hover {\r\n        background-color: #7a88ca;\r\n    }\r\n`;\r\n\r\nconst _ExecuteButton = styled(_ButtonBase)`\r\n    background-color: #535353;\r\n    color: #f5f5f5;\r\n    border: solid 1px #ffffff;\r\n    &:hover {\r\n        background-color: #919191;\r\n    }\r\n`;\r\n\r\nconst _WrapInterval = styled.div`\r\n    display: inline-block;\r\n    background-color: #e7e7e7;\r\n    width: 80px;\r\n    height: calc(100% - 150px);\r\n    vertical-align: top;\r\n    margin-top: 100px;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nconst _Interval = styled.div<{\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    background-color: ${props => props.isActive ? '#568abb' : '#205f99'};\r\n    width: 100%;\r\n    height: 22px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    border: solid 1px #0000003b;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Num = styled.span`\r\n    color: #7a7a7a;\r\n`;\r\nconst _SoundName = styled.span`\r\n    color: #3740c0;\r\n`;\r\nconst _WrapTimeLine = styled.div`\r\n    display: inline-block;\r\n    background-color: black;\r\n    width: calc(100% - 80px);\r\n    height: calc(100% - 40px);\r\n    vertical-align: top;\r\n    text-align: left;\r\n`;\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    background: linear-gradient(to bottom, #ffffff, #808080);\r\n    width: calc(100% - 10px);\r\n    height: 40px;\r\n    text-align: left;\r\n    border-top: solid 2px #000;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n`;\r\nconst _Scale = styled.div<{\r\n    isHead: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: relative;\r\n    /* background-color: #ffffffbe; */\r\n    width: ${BEAT_WIDTH / 4}px;\r\n    vertical-align: top;\r\n    height: ${props => props.isHead ? '15px' : '10px'};\r\n    box-sizing: border-box;\r\n    border-left: solid ${props => props.isHead ? '2px' : '1px'} #000;\r\n`;\r\nconst _Bar = styled.div`\r\n    display: inline-block;\r\n    position: absolute;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: #ec0000;\r\n    left: -5px;\r\n    top: 20px;\r\n`;\r\nconst _BlockLine = styled.div`\r\n    display: inline-block;\r\n    background-color: #6e639ea1;\r\n    width: calc(100% - 10px);\r\n    height: 60px;\r\n    position: relative;\r\n    overflow-x: hidden;\r\n`;\r\nconst _Block = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #0077ff67;\r\n    left: ${(props) => props.pos}px;\r\n    width: ${(props) => props.width}px;\r\n    height: 100%;\r\n    /* color: #002575d1; */\r\n    text-align: left;\r\n    padding-left: 5px;\r\n    border: ${props => !props.isActive ?\r\n        'solid 1px #ffffff4c' :\r\n        'solid 2px #ffffff4c'\r\n    };\r\n    opacity: ${(props) => props.isActive ? '1' : '0.5'};\r\n`;\r\nconst _Size = styled.span`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #ffffffd1;\r\n`;\r\n\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    overflow: scroll;\r\n    text-align: left;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst _Table = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #000000;\r\n    width: ${(props) => props.width}px;\r\n    /* height: 100%; */\r\n    /* text-align: left; */\r\n    position: relative;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Box = styled.div<{\r\n    isActive: boolean;\r\n    isEdit: boolean;\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => props.pos}px;\r\n    background-color: ${props => !props.isActive ? '#0000ff5c' : '#8787db76'};\r\n    border: ${props => !props.isActive ?\r\n        'solid 1px #ffffff4c' :\r\n        'solid 2px #ffffff4c'\r\n    };\r\n    box-sizing: border-box;\r\n    width: ${(props) => props.width}px;\r\n    height: ${NOTES_HEIGHT * 88}px;\r\n    opacity: ${(props) => props.isEdit ? '1' : '0.5'};\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    soundIndex: number;\r\n}>`\r\n    display: table;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${NOTES_HEIGHT}px;\r\n    background-color: ${(props) => {\r\n        switch (props.soundIndex) {\r\n            case 0: return '#ffffff57';\r\n            case 1: return '#dadfe457';\r\n            case 2: return '#e9e9e957';\r\n            case 3: return '#dadfe457';\r\n            case 4: return '#e9e9e957';\r\n            case 5: return '#dfdfdf57';\r\n            case 6: return '#dadfe457';\r\n            case 7: return '#e9e9e957';\r\n            case 8: return '#dadfe457';\r\n            case 9: return '#e9e9e957';\r\n            case 10: return '#dadfe457';\r\n            case 11: return '#e9e9e957';\r\n        }\r\n    }};\r\n    /* margin-bottom: 1px; */\r\n`;\r\nconst _Notes = styled.div<{\r\n    isScale: boolean;\r\n}>`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${(props) => props.isScale ? '#eeff00fc' : '#ffd000'};\r\n    box-shadow: 2px 2px 25px 4px #ffe81b47;\r\n    border: solid 1px #ffffff;\r\n    box-sizing: border-box;\r\n    font-size: 8px;\r\n    font-weight: 600;\r\n    padding-left: 2px;\r\n    color: #ff0000;\r\n    border-radius: 2px;\r\n    overflow-x: hidden;\r\n`;\r\n\r\nconst _Current = styled.div<{\r\n    pos: number\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${(props) => props.pos}px;\r\n    width: 2px;\r\n    height: 1056px;\r\n    background-color: red;\r\n        box-shadow: 2px 2px 15px 4px #ff727290;\r\n    z-index: 99;\r\n`;","import { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, DetailChord, BACKING_LEN_TYPE } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport styled, { css } from \"styled-components\";\r\nimport { applyOnChord, getSymbolParams } from 'contents/common/utils';\r\nimport { KEY12_SHARP_LIST, SymbolParams } from 'contents/common/define';\r\n\r\ntype NotesInfo = {\r\n    pos: number,\r\n    width: number,\r\n    layer: 'left' | 'right',\r\n    soundName: string\r\n};\r\ntype BlockInfo = {\r\n    pos: number,\r\n    width: number,\r\n    sustain: number,\r\n    chordName: string\r\n};\r\n\r\nconst BEAT_WIDTH = 120;\r\nconst NOTES_HEIGHT = 22;\r\n\r\nconst ScoreContPreviewTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [notesTable, setNotesTable] = useState<NotesInfo[][][]>([]);\r\n    const [blocks, setBlocks] = useState<BlockInfo[]>([]);\r\n    const [barPos, setBarPos] = useState<number>(0);\r\n    const [curIndex, setCurIndex] = useState<number>(0);\r\n    const [isPlay, setPlay] = useState<boolean>(false);\r\n    const [bpm, setBpm] = useState<number>(0);\r\n\r\n    const [limit, setLimist] = useState<number>(0);\r\n\r\n    const tableRef = useRef({} as HTMLDivElement);\r\n    const intervalRef = useRef({} as HTMLDivElement);\r\n    const measureRef = useRef({} as HTMLDivElement);\r\n    const BlocksRef = useRef({} as HTMLDivElement);\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex === 5) {\r\n\r\n            const notesTable: NotesInfo[][][] = [];\r\n            const blocks: BlockInfo[] = [];\r\n\r\n            let curPos = 0;\r\n            state.noteData.dataList.forEach((block, i) => {\r\n\r\n                const key = state.noteState.cacheList[i].init.keyIndex;\r\n                if (block.type === TypeNoteElement.Chord) {\r\n                    console.log(i);\r\n\r\n                    const table: NotesInfo[][] = [];\r\n                    for (let i = 0; i < 88; i++) {\r\n                        table.push([]);\r\n                    }\r\n                    // BPMの設定\r\n                    setBpm(state.noteState.cacheList[i].init.tempo);\r\n\r\n                    // フォーカスの設定\r\n                    if (state.noteState.focusIndex == i) {\r\n                        setCurIndex(blocks.length);\r\n                        setBarPos(curPos * BEAT_WIDTH);\r\n                    }\r\n\r\n                    const chord = block.detail as DetailChord;\r\n                    const sustain = chord.sustain + chord.headAdjust + chord.tailAdjust;\r\n                    const rootIndex = ((chord.molecule?.rootIndex as number) + key) % 12;\r\n                    let symbol = getSymbolParams(chord.symbolKey) as SymbolParams;\r\n                    if (chord.denominator != null) {\r\n                        symbol = { ...symbol };\r\n                        applyOnChord(symbol, rootIndex, chord.denominator.rootIndex)\r\n                    }\r\n                    blocks.push({\r\n                        pos: curPos * BEAT_WIDTH,\r\n                        width: sustain * BEAT_WIDTH,\r\n                        sustain: sustain,\r\n                        chordName: KEY12_SHARP_LIST[rootIndex] + symbol.name\r\n                    });\r\n                    //最終要素のみリミットの設定\r\n                    setLimist(curPos * BEAT_WIDTH + sustain * BEAT_WIDTH);\r\n\r\n                    const backing = chord.backing;\r\n                    backing.layers.forEach((layer, j) => {\r\n                        layer.table.forEach((tabY, k) => {\r\n                            let index = 0;\r\n                            if (backing.useChannels.length - 1 >= k) {\r\n                                const channel = backing.useChannels[k];\r\n                                index = rootIndex + channel.octave * 12 + symbol.intervals[channel.structIndex] - 9;\r\n                            }\r\n                            let pos = curPos;\r\n                            console.log(`index=${index}, lenSize=${layer.lens.length}, k=${k}, tableSize=${layer.table.length}`);\r\n                            tabY.forEach((notes, l) => {\r\n                                let width = 0;\r\n                                switch (layer.lens[l].len) {\r\n                                    case BACKING_LEN_TYPE.LEN1: width = 4; break;\r\n                                    case BACKING_LEN_TYPE.LEN2: width = 2; break;\r\n                                    case BACKING_LEN_TYPE.LEN4: width = 1; break;\r\n                                    case BACKING_LEN_TYPE.LEN8: width = 1 / 2; break;\r\n                                    case BACKING_LEN_TYPE.LEN16: width = 1 / 4; break;\r\n                                }\r\n                                if (layer.lens[l].isHalf) {\r\n                                    width *= 1.5;\r\n                                }\r\n                                if (!layer.lens[l].isDiv3) {\r\n                                    if (notes[0]) {\r\n                                        table[index].push({\r\n                                            pos: pos * BEAT_WIDTH,\r\n                                            width: width * BEAT_WIDTH,\r\n                                            layer: j == 0 ? 'left' : 'right',\r\n                                            soundName: KEY12_SHARP_LIST[(index + 9) % 12] + Math.floor((index + 9) / 12)\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    console.log(JSON.stringify(notes));\r\n                                    notes.forEach((note, m) => {\r\n                                        if (note) {\r\n                                            const posAdjust = pos + width / 3 * m;\r\n                                            const widthAdjust = width / 3;\r\n                                            table[index].push({\r\n                                                pos: posAdjust * BEAT_WIDTH,\r\n                                                width: widthAdjust * BEAT_WIDTH,\r\n                                                layer: j == 0 ? 'left' : 'right',\r\n                                                soundName: KEY12_SHARP_LIST[index % 12] + Math.floor(index / 12)\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                                pos += width;\r\n                            });\r\n                        });\r\n                    });\r\n                    curPos += sustain;\r\n                    notesTable.push(table.reverse());\r\n                }\r\n            });\r\n            setNotesTable(notesTable);\r\n            setBlocks(blocks);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    useEffect(() => {\r\n        tableRef.current.scrollTo({ left: barPos - 400, behavior: 'smooth' });\r\n        BlocksRef.current.scrollTo({ left: barPos - 400, behavior: 'smooth' });\r\n\r\n    }, [curIndex]);\r\n    useEffect(() => {\r\n        if (\r\n            blocks.length > curIndex + 1 &&\r\n            (barPos >= blocks[curIndex + 1].pos)\r\n        ) {\r\n            setCurIndex(curIndex + 1);\r\n        }\r\n    }, [barPos]);\r\n\r\n    const blockListJsx: JSX.Element[] = useMemo(() => {\r\n        const blockListJsx: JSX.Element[] = [];\r\n        blocks.forEach((block, i) => {\r\n            const left = block.pos;\r\n            const right = left + block.width;\r\n            // if (\r\n            //     !isPlay ||\r\n            //     (barPos > left - 500 && barPos < right + 700)\r\n            // ) {\r\n            blockListJsx.push(\r\n                <_Block key={i} pos={block.pos} width={block.width} isActive={i === curIndex}\r\n                    onClick={() => {\r\n                        setCurIndex(i);\r\n                        setBarPos(block.pos);\r\n                    }}\r\n                >\r\n                    <_Sus>{block.sustain}</_Sus>\r\n                    <_ChordName>{block.chordName}</_ChordName>\r\n                </_Block>\r\n            );\r\n            // }\r\n        });\r\n        return blockListJsx;\r\n    }, [notesTable, curIndex]);\r\n\r\n    const boxListJsx: JSX.Element[] = useMemo(() => {\r\n        const boxListJsx: JSX.Element[] = [];\r\n        notesTable.forEach((box, i) => {\r\n            const left = blocks[i].pos;\r\n            const right = left + blocks[i].width;\r\n            if (\r\n                !isPlay ||\r\n                (barPos > left - 500 && barPos < right + 700)\r\n            ) {\r\n                const lineListJsx: JSX.Element[] = [];\r\n                box.forEach((line, j) => {\r\n                    const notesListJsx: JSX.Element[] = [];\r\n                    line.forEach((notes, k) => {\r\n                        const isActive = notes.pos <= barPos && notes.pos + notes.width >= barPos;\r\n                        // if (notes.pos + notes.width > pos && pos < notes.pos + 500) {\r\n                        notesListJsx.push(\r\n                            <_Notes key={k} pos={notes.pos - blocks[i].pos} width={notes.width} layer={notes.layer} isActive={isActive}>\r\n                                {notes.soundName}\r\n                            </_Notes>\r\n                        );\r\n                        // }\r\n                    });\r\n                    lineListJsx.push(\r\n                        <_Line key={j} soundIndex={j % 12}>\r\n                            {notesListJsx}\r\n                        </_Line>\r\n                    );\r\n                });\r\n                boxListJsx.push(\r\n                    <_Box\r\n                        key={i}\r\n                        isActive={barPos >= left && barPos < right}\r\n                        pos={left}\r\n                        width={blocks[i].width}\r\n                    >\r\n                        {lineListJsx}\r\n                    </_Box>\r\n                );\r\n            }\r\n        });\r\n        return boxListJsx;\r\n    }, [notesTable, barPos]);\r\n\r\n    const intervalListJSX: JSX.Element[] = useMemo(() => {\r\n        const intervalListJSX: JSX.Element[] = [];\r\n        for (let i = 0; i < 88; i++) {\r\n            const num = 88 - (i);\r\n            const octave = Math.floor((87 + 9 - i) / 12);\r\n            const chordName = KEY12_SHARP_LIST[(87 + 9 - i) % 12];\r\n            intervalListJSX.push(\r\n                <_Interval\r\n                    key={i}\r\n                >\r\n                    <_Num>{num}</_Num> <_SoundName>{chordName + octave}</_SoundName>\r\n                </_Interval>\r\n            );\r\n        }\r\n        return intervalListJSX;\r\n    }, []);\r\n    // console.log('intervalListJSX:' + intervalListJSX.length);\r\n    return (\r\n        <>\r\n            <_WrapInterval ref={intervalRef} onClick={() => {\r\n                setBarPos(barPos + 100);\r\n            }}>\r\n                {intervalListJSX}\r\n            </_WrapInterval>\r\n            <_WrapTimeLine>\r\n                <_Measure ref={measureRef}>\r\n\r\n                </_Measure>\r\n                <_BlockLine ref={BlocksRef}>\r\n                    {blockListJsx}\r\n                </_BlockLine>\r\n                <_TableWrap ref={tableRef} onScroll={() => {\r\n\r\n                    const scrollLeft = tableRef.current.scrollLeft;\r\n                    const scrollTop = tableRef.current.scrollTop;\r\n                    measureRef.current.scrollTo({ left: scrollLeft });\r\n                    BlocksRef.current.scrollTo({ left: scrollLeft });\r\n                    intervalRef.current.scrollTo({ top: scrollTop });\r\n                }}>\r\n                    <_Table width={limit} >\r\n                        {boxListJsx}\r\n                        <_Current pos={barPos} />\r\n                    </_Table>\r\n                </_TableWrap>\r\n            </_WrapTimeLine>\r\n            <_Button onClick={() => {\r\n                const taskList: NodeJS.Timeout[] = [];\r\n                if (!isPlay) {\r\n                    setPlay(true);\r\n                    dispatcher.preview.play();\r\n                    const progressValue = bpm * BEAT_WIDTH / 600;\r\n                    for (let i = 0; i < 900; i++) {\r\n                        const id = setTimeout(() => {\r\n                            setBarPos(progressValue * i);\r\n                            console.log('time: ' + barPos);\r\n                        }, i * 100);\r\n                        taskList.push(id);\r\n                    }\r\n                } else {\r\n                    setPlay(false);\r\n                    taskList.forEach((id) => {\r\n                        clearTimeout(id);\r\n                    });\r\n\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n            }}>{!isPlay ? 'Play' : 'Stop'}</_Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScoreContPreviewTab;\r\n\r\nconst _WrapInterval = styled.div`\r\n    display: inline-block;\r\n    background-color: #e7e7e7;\r\n    width: 80px;\r\n    height: calc(100% - 140px);\r\n    vertical-align: top;\r\n    margin-top: 100px;\r\n    overflow-y: hidden;\r\n`;\r\nconst _Interval = styled.div`\r\n    display: inline-block;\r\n    background-color: #205f99;\r\n    width: 100%;\r\n    height: ${NOTES_HEIGHT}px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    border: solid 1px #0000003b;\r\n    padding-left: 5px;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Num = styled.span`\r\n    color: #7a7a7a;\r\n`;\r\nconst _SoundName = styled.span`\r\n    color: #3740c0;\r\n`;\r\nconst _WrapTimeLine = styled.div`\r\n    display: inline-block;\r\n    background-color: black;\r\n    width: calc(100% - 80px);\r\n    height: calc(100% - 40px);\r\n    vertical-align: top;\r\n`;\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    background-color: #ffffffbe;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _BlockLine = styled.div`\r\n    display: inline-block;\r\n    background-color: #9e6363a2;\r\n    width: 100%;\r\n    height: 60px;\r\n    position: relative;\r\n    overflow-x: hidden;\r\n`;\r\nconst _Block = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #0077ff67;\r\n    left: ${(props) => props.pos}px;\r\n    width: ${(props) => props.width}px;\r\n    height: 100%;\r\n    /* color: #002575d1; */\r\n    text-align: center;\r\n    border: solid 1px #0077ffd5;\r\n    opacity: ${(props) => props.isActive ? '1' : '0.5'};\r\n    & * {\r\n        display: inline-block;\r\n        width: 100%;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\nconst _Sus = styled.span`\r\n    color: #ffffffd1;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #002575d1;\r\n`;\r\n\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    overflow-x: auto;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Table = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #000000;\r\n    width: ${(props) => props.width}px;\r\n    /* height: 100%; */\r\n    text-align: left;\r\n    position: relative;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Box = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => props.pos}px;\r\n    background-color: #0000ff2d;\r\n    /* border-right: solid 3px #0004dfc1; */\r\n    box-sizing: border-box;\r\n    width: ${(props) => props.width}px;\r\n    height: ${NOTES_HEIGHT * 88}px;\r\n    opacity: ${(props) => props.isActive ? '1' : '0.5'};\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    soundIndex: number;\r\n}>`\r\n    display: table;\r\n    position: relative;\r\n    width: 100%;\r\n    height: ${NOTES_HEIGHT}px;\r\n    background-color: ${(props) => {\r\n        switch (props.soundIndex) {\r\n            case 0: return '#ffffff23';\r\n            case 1: return '#dadfe423';\r\n            case 2: return '#e9e9e923';\r\n            case 3: return '#dadfe423';\r\n            case 4: return '#e9e9e923';\r\n            case 5: return '#dfdfdf23';\r\n            case 6: return '#dadfe423';\r\n            case 7: return '#e9e9e923';\r\n            case 8: return '#dadfe423';\r\n            case 9: return '#e9e9e923';\r\n            case 10: return '#dadfe423';\r\n            case 11: return '#e9e9e923';\r\n        }\r\n        return '#a00';\r\n    }};\r\n    /* margin-bottom: 1px; */\r\n`;\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    layer: 'left' | 'right';\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${(props) => props.pos}px;\r\n    width: ${(props) => props.width}px;\r\n    height: 100%;\r\n    background-color: ${(props) => props.layer == 'left' ? '#e95500c8' : '#d6007dd3'};\r\n    ${(props) => props.isActive ? css`\r\n        background-color: #dddd00;\r\n        box-shadow: 2px 2px 25px 4px #ffe81b47;\r\n    ` : ''}\r\n    transition: background-color 200ms, box-shadow 1000ms;\r\n    border: solid 1px #666666;\r\n    box-sizing: border-box;\r\n    font-size: 8px;\r\n    font-weight: 600;\r\n    padding-left: 2px;\r\n    color: #ffffff;\r\n    border-radius: 2px;\r\n    /* &:hover {\r\n        background-color: #dddd00;\r\n        box-shadow: 2px 2px 15px 4px #ffe81b47;\r\n    } */\r\n`;\r\n\r\nconst _Current = styled.div<{\r\n    pos: number\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${(props) => props.pos}px;\r\n    width: 2px;\r\n    height: ${NOTES_HEIGHT * 88}px;\r\n    background-color: red;\r\n        box-shadow: 2px 2px 15px 4px #ff727290;\r\n    z-index: 99;\r\n`;\r\n\r\nconst _Button = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 10px 0 10px;\r\n    background-color: #808080;\r\n    min-width: 150px;\r\n    height: 35px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 30px;\r\n    color: #4e4e4e;\r\n    text-align: center;\r\n    border: solid 1px #636363;\r\n    border-radius: 4px;\r\n    &:hover {\r\n        background-color: #afafaf;\r\n    }\r\n`","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContThemaTab from './contTabs/thema/ScoreContThemaTab';\r\nimport ScoreContTuneTab from './contTabs/tune/ScoreContTuneTab';\r\nimport ScoreContPreviewTab from './contTabs/preview/ScoreContPreviewTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isScoreEdit = state.noteData.dataList.length === 0;\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: isScoreEdit,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Tune', disable: isScoreEdit, cont: <ScoreContTuneTab /> },\r\n                    { name: 'Thema', disable: isScoreEdit, cont: <ScoreContThemaTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: isScoreEdit, cont: <ScoreContPreviewTab/> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BackingScript, BACKING_LEN_TYPE, BACKING_SIDE, ChordPaletteState, CHORD_MODE, DetailChange, DetailChord, DetailSection, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\nimport { keyboadNoteTabOperation } from \"./KeyboadNoteTabOperation\";\r\nimport { keyboadTuneTabOperation } from \"./KeyboadTuneTabOperation\";\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const keyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n\r\n    switch (state.scoreTabIndex) {\r\n        case 1: {\r\n            if (state.dialog.contents == null) {\r\n                keyboadNoteTabOperation(e, state, dispatch, dispatcher);\r\n            }\r\n            break;\r\n        }\r\n        case 2: {\r\n            if (state.dialog.contents == null) {\r\n                keyboadTuneTabOperation(e, state, dispatch, dispatcher);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n};","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BackingScript, BACKING_LEN_TYPE, ChordPaletteState, CHORD_MODE, DetailChange, DetailChord, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const keyboadNoteTabOperation = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n    const selectedCache = state.noteState.cacheList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Section: {\r\n            const detail = selectedData.detail as DetailSection;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callSectionEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.SECTION_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Change: {\r\n            const detail = selectedData.detail as DetailChange;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChangeEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHANGE_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.molecule != null) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 't': {\r\n                                dispatcher.score.callThemaAccessor();\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const scaleList = selectedCache.init.scale == 'major' ? DIATONIC_MAJOR_SCALE_LIST : DIATONIC_MINOR_SCALE_LIST;\r\n                                const diatonicChord = scaleList[Number(e.key) - 1];\r\n                                // dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                // dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n\r\n                                detail.molecule = { rootIndex: diatonicChord.degreeIndex, isFlat: diatonicChord.isFlat };\r\n                                const prevSymbolCategory = SYMBOL_PARAMS_LIST[detail.symbolKey].category;\r\n                                const newSymbolCategory = SYMBOL_PARAMS_LIST[diatonicChord.symbolKey].category;\r\n                                if (prevSymbolCategory !== newSymbolCategory) {\r\n                                    detail.backing.useChannels.length = 0;\r\n                                }\r\n                                detail.symbolKey = diatonicChord.symbolKey;\r\n                                dispatcher.score.setNoteData(state.noteData);\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case 'q': {\r\n                                dispatcher.score.setCloneCriteria();\r\n                            }\r\n                                break;\r\n                            case 'z': {\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.TRANSPLANT) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.CLONE) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'q': {\r\n                                dispatcher.score.releaseCloneCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const cloneDataList = state.noteState.cloneDataList;\r\n                                const cloneRange = state.noteState.cloneRange;\r\n                                const isReverse = cloneRange[0] > cloneRange[1];\r\n                                const start = cloneRange[isReverse ? 1 : 0];\r\n                                const end = cloneRange[isReverse ? 0 : 1];\r\n                                for (let i = start; i <= end; i++) {\r\n                                    //ディープコピー\r\n                                    cloneDataList.push(JSON.parse(JSON.stringify(dataList[i])));\r\n                                }\r\n                                dispatcher.score.setNoteState({ ...state.noteState, cloneDataList, editMode: EditMode.NORMAL });\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        // case 'ArrowRight':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.molecule?.rootIndex + 1 });\r\n                        //     break;\r\n                        // case 'ArrowLeft':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        // case '1':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const backing = state.noteState.backingPaletteState as BackingEditorState;\r\n                    const isCorrect = backing.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            if (editMode !== EditMode.PREVIEW) {\r\n                                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            }\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                if (editMode !== EditMode.PREVIEW) {\r\n                                    dispatcher.backing.play(false);\r\n                                } else {\r\n                                    dispatcher.preview.stop();\r\n                                }\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                        // JSON取得（開発用）\r\n                        case 'z': {\r\n                            const script: BackingScript = {\r\n                                isUsePedal: backing.isUsePedal,\r\n                                layers: backing.layers,\r\n                                useChannels: backing.useChannels\r\n                            };\r\n                            alert(JSON.stringify(script));\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'f':\r\n                    dispatcher.score.addChangeElement();\r\n                    break;\r\n                case 'v': {\r\n                    console.log(state.noteState.cloneDataList);\r\n                    dispatcher.score.insertCloneData();\r\n                }\r\n                    break;\r\n                case 'w': {\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            molecule: { rootIndex: 0, isFlat: false },\r\n                            denominator: null,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: state.noteState.defaultSustain,\r\n                        } as ChordPaletteState\r\n                    });\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    dispatcher.preview.stop();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BackingScript, BACKING_LEN_TYPE, ChordPaletteState, CHORD_MODE, DetailChange, DetailChord, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { KeyboardEvent } from 'react';\r\nimport { TuneDispatcher } from \"contents/redux/store/FormDispatcher\";\r\nimport { Player } from \"soundfont-player\";\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const keyboadTuneTabOperation = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n\r\n    // const action = state.formDispatcher.tune as TuneDispatcher;\r\n    const tuneState = state.tuneState;\r\n    const columnList = state.noteData.columnList;\r\n    const curColumn = columnList[tuneState.columnIndex];\r\n    const instrument = state.instrument as Player;\r\n    const applyState = () => dispatcher.tune.setState({ ...tuneState });\r\n    const applyColumn = () => dispatcher.tune.setColumnList(columnList.slice());\r\n\r\n    const getSoundName = () => {\r\n        const octave = Math.floor((87 + 9 - curColumn.soundIndex) / 12);\r\n        const keyIndex = (87 + 9 - curColumn.soundIndex) % 12;\r\n        const chordName = KEY12_SHARP_LIST[keyIndex];\r\n        return chordName + octave;\r\n    }\r\n\r\n    switch (e.key) {\r\n        case '1': {\r\n            tuneState.usingLen = 16;\r\n            applyState();\r\n        }\r\n            break;\r\n        case '2': {\r\n            tuneState.usingLen = 8;\r\n            applyState();\r\n        }\r\n            break;\r\n        case '3': {\r\n            tuneState.usingLen = 4;\r\n            applyState();\r\n        }\r\n            break;\r\n        case '/': {\r\n            tuneState.isDiv3 = !tuneState.isDiv3;\r\n            applyState();\r\n        }\r\n            break;\r\n        case ' ': {\r\n            if (!tuneState.isPreview) {\r\n                dispatcher.tune.playPreview();\r\n                tuneState.isPreview = true;\r\n                applyState();\r\n            } else {\r\n                dispatcher.tune.stopPreview();\r\n                tuneState.isPreview = false;\r\n                applyState();\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    if (!tuneState.isEdit) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                if (tuneState.columnIndex > 0) {\r\n                    tuneState.columnIndex = tuneState.columnIndex -= 1;\r\n                    applyState();\r\n                }\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                if (tuneState.columnIndex < columnList.length - 1) {\r\n                    tuneState.columnIndex = tuneState.columnIndex += 1;\r\n                    applyState();\r\n                }\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                tuneState.isEdit = true;\r\n                applyState();\r\n            }\r\n                break;\r\n            case 'a': {\r\n                dispatcher.tune.addColumn();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.tune.remooveCur();\r\n            }\r\n                break;\r\n        }\r\n    } else {\r\n        switch (e.key) {\r\n            case 'ArrowUp': {\r\n                if (curColumn.soundIndex == -1) {\r\n                    if (tuneState.columnIndex > 0) {\r\n                        const prevSoundIndex = columnList[tuneState.columnIndex - 1].soundIndex;\r\n                        if (prevSoundIndex !== -1) curColumn.soundIndex = prevSoundIndex;\r\n                    } else {\r\n                        curColumn.soundIndex = 44;\r\n                    }\r\n                } else if (curColumn.soundIndex > 0) {\r\n                    curColumn.soundIndex -= 1;\r\n                }\r\n                if (tuneState.isAutoScroll) {\r\n                    dispatcher.tune.adjustScrollY();\r\n                }\r\n                applyColumn();\r\n                instrument.stop();\r\n                instrument.play(getSoundName(), 0, { duration: 0.5 });\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                if (curColumn.soundIndex == -1) {\r\n                    if (tuneState.columnIndex > 0) {\r\n                        const prevSoundIndex = columnList[tuneState.columnIndex - 1].soundIndex;\r\n                        if (prevSoundIndex !== -1) curColumn.soundIndex = prevSoundIndex;\r\n                    } else {\r\n                        curColumn.soundIndex = 44;\r\n                    }\r\n                } else if (curColumn.soundIndex < 87) {\r\n                    curColumn.soundIndex += 1;\r\n                }\r\n                if (tuneState.isAutoScroll) {\r\n                    dispatcher.tune.adjustScrollY();\r\n                }\r\n                applyColumn();\r\n                instrument.stop();\r\n                instrument.play(getSoundName(), 0, { duration: 0.5 });\r\n            }\r\n                break;\r\n            case 'ArrowLeft': {\r\n                dispatcher.tune.adjustWidth(false);\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.tune.adjustWidth(true);\r\n            }\r\n                break;\r\n            case 'Enter': {\r\n                tuneState.isEdit = false;\r\n                applyState();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                curColumn.soundIndex = -1;\r\n                applyColumn();\r\n            }\r\n                break;\r\n        }\r\n\r\n    }\r\n}","import { KEY12_SHARP_LIST, SymbolKey, SymbolParams, SymbolType, SYMBOL_PARAMS_LIST, TimeSignatures } from \"contents/common/define\";\r\nimport { applyOnChord, getSymbolParams, loadSampler } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache, DetailChange, DetailFixed, LoginParams, ChordPaletteState, ChangeType, ModulateRelation, Key12Info, TempoRelation, ThemaIndexedElement, ThemaDataTree, ThemaState, BackingPattern, BackingVoicing, BTPattern, BTVoicing, BTSustain, VoicingTargetType, VoicingTargetCondition, Dialog, Column, SoundFontProp } from \"./store\";\r\nimport Soundfont from 'soundfont-player';\r\nimport { FormDispatcher } from \"./store/FormDispatcher\";\r\nimport { TuneState } from \"./store/TuneState\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    public setLoginParams = (login: LoginParams) => {\r\n        this.dispatch(ActionType.SET_LOGIN, { login });\r\n    }\r\n\r\n    public callDialog = (left: number, top: number, contents: JSX.Element, arg?: object) => {\r\n        const dialog: Dialog = { left, top, contents, arg };\r\n        this.dispatch(ActionType.SET_DIALOG, { dialog });\r\n    }\r\n\r\n    public closeDialog = () => {\r\n        this.dispatch(ActionType.SET_DIALOG, { dialog: { ...this.state.dialog, contents: null } });\r\n    }\r\n\r\n    public setDinamicCache = (dinamicCache: null | object) => {\r\n        this.dispatch(ActionType.DINAMIC_CACHE, { dinamicCache });\r\n    }\r\n    public setFormDispatcher = (formDispatcher: FormDispatcher) => {\r\n        this.dispatch(ActionType.SET_FORM_DISPATCHER, { formDispatcher });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: null | NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public setSampler = (sample: object) => {\r\n        const sampler = loadSampler(sample);\r\n        this.dispatchBase({ type: ActionType.SET_SAMPLER, payload: { sampler } });\r\n    }\r\n    public setInstruments = (instrument: null | Soundfont.Player) => {\r\n        this.dispatchBase({ type: ActionType.SET_INSTRUMENT, payload: { instrument } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n                // reffer.style.width = 'inherit';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.TRANSPLANT\r\n            });\r\n        },\r\n        setCloneCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneRange: [focusIndex, focusIndex], editMode: EditMode.CLONE, cloneDataList: []\r\n            });\r\n        },\r\n        setCloneRange: (index: number) => {\r\n            const cloneRange = this.state.noteState.cloneRange;\r\n            cloneRange[1] = index;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneRange\r\n            });\r\n        },\r\n        insertCloneData: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            const cloneDataList = this.state.noteState.cloneDataList;\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cloneDataList.forEach((cloneData, i) => {\r\n                dataList.splice(focusIndex + 1 + i, 0, cloneData);\r\n                // cacheList.splice(focusIndex + 1, i, {} as ScoreCache);\r\n            });\r\n            this.score.setNoteData({\r\n                ...this.state.noteData,\r\n                dataList\r\n            });\r\n            // for(let i = focusIndex + 1; i < focusIndex + 1 + cloneDataList.length; i ++) {\r\n            //     this.score.apllyFlasah(i);\r\n            // }\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneDataList: []\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        releaseCloneCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneRange: [], editMode: EditMode.NORMAL\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n\r\n        addNoteElement: (type: TypeNoteElement, detail: DetailSection | DetailChord | DetailChange) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, { type, detail });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addChangeElement: () => {\r\n            // const detail = { type: ChangeType.NONE } as DetailChange;\r\n            // const mod:ChangeModulation = {\r\n            //     relation: ModulateRelation.DOMINANT,\r\n            //     value: 0,\r\n            // }\r\n            const detail = {\r\n                changeType: null,\r\n                modulateRelation: null,\r\n                domminantValue: 0,\r\n                keyAdjust: 0,\r\n                tempoRelation: null,\r\n                tempoDiff: 0,\r\n                tempoRate: 0,\r\n                tempoAbsolute: 0,\r\n                beat: null\r\n            } as DetailChange;\r\n            this.score.addNoteElement(TypeNoteElement.Change, detail);\r\n        },\r\n        addChordElement: () => {\r\n            const noteState = this.state.noteState;\r\n            const curIndex = noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    // degreeIndex: -1,\r\n                    // isFlat: false,\r\n                    molecule: null,\r\n                    denominator: null,\r\n                    symbolKey: SymbolKey.MAJOR,\r\n                    sustain: noteState.defaultSustain,\r\n                    headAdjust: 0,\r\n                    tailAdjust: 0,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [[[false]]],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [[[false]]],\r\n                                vels: [5]\r\n                            }\r\n                        ],\r\n                        isUsePedal: false\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                // this.state.noteState.focusIndex++;\r\n                const focusIndex = curIndex + 1;\r\n                // this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                this.score.setNoteState({ ...this.state.noteState, focusIndex });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            // let degreeIndex = detail.degreeIndex;\r\n            // if (degreeIndex == -1) {\r\n            //     degreeIndex = 0;\r\n            // }\r\n            let molecule = detail.molecule;\r\n            if (molecule == null) {\r\n                molecule = { rootIndex: 0, isFlat: false };\r\n            }\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    // rootIndex: degreeIndex,\r\n                    // isFlat: detail.isFlat,\r\n                    molecule,\r\n                    denominator: detail.denominator,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                    headAdjust: detail.headAdjust,\r\n                    tailAdjust: detail.tailAdjust,\r\n                } as ChordPaletteState\r\n            });\r\n        },\r\n\r\n        callSectionEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailSection;\r\n            this.setDinamicCache(detail);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SECTION_PALETTE });\r\n        },\r\n\r\n        callChangeEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChange;\r\n            this.setDinamicCache(detail);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHANGE_PALETTE });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const init = this.state.noteState.cacheList[focusIndex].init;\r\n            const backing = detail.backing;\r\n            const molecule = detail.molecule as Key12Info;\r\n            const backingState: BackingEditorState = {\r\n                target: \"note\",\r\n                isEditPattern: true,\r\n                isDispVoicing: true,\r\n                molecule: { rootIndex: molecule.rootIndex + init.keyIndex, isFlat: molecule.isFlat },\r\n                denominator: detail.denominator,\r\n                symbolKey: detail.symbolKey,\r\n                sustain: detail.sustain,\r\n                headAdjust: detail.headAdjust,\r\n                tailAdjust: detail.tailAdjust,\r\n                channelRowSize: backing.layers[0].table.length,\r\n                useChannels: JSON.parse(JSON.stringify(backing.useChannels)),\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: JSON.parse(JSON.stringify(backing.layers)),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        },\r\n\r\n        callThemaAccessor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            this.setDinamicCache(detail);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.THEMA_ACCESSOR });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * セクションエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public section = {\r\n        setSectionParam: (labelName: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    labelName\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * チェンジエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public change = {\r\n        applyChangeParams: (changeType: ChangeType, modulateRelation: null | ModulateRelation, domminantValue: number, keyAdjust: number,\r\n            tempoRelation: null | TempoRelation, tempoDiff: number, tempoRate: number, tempoAbsolute: number, beat: null | TimeSignatures) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    changeType,\r\n                    modulateRelation,\r\n                    domminantValue,\r\n                    keyAdjust,\r\n                    tempoRelation,\r\n                    tempoDiff,\r\n                    tempoRate,\r\n                    tempoAbsolute,\r\n                    beat\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    // degreeIndex: editorState.rootIndex,\r\n                    // isFlat: editorState.isFlat,\r\n                    molecule: editorState.molecule,\r\n                    denominator: editorState.denominator,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                    headAdjust: editorState.headAdjust,\r\n                    tailAdjust: editorState.tailAdjust,\r\n                } as DetailChord\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        setPaletteState: (paletteState: BackingEditorState) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            this.score.setNoteState({ ...this.state.noteState, backingPaletteState: backing });\r\n        },\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !backing.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        setChannelRowSize: (size: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.channelRowSize = size;\r\n            backing.layers.forEach((layer) => {\r\n                const table: boolean[][][] = new Array<boolean[][]>(size);\r\n                console.log('★★★' + table.length);\r\n                for (let i = 0; i < table.length; i++) {\r\n                    table[i] = new Array<boolean[]>(layer.lens.length);\r\n                    console.log('☆☆☆☆☆☆');\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        table[i][j] = new Array<boolean>(1);\r\n                        table[i][j][0] = false;\r\n                    }\r\n                }\r\n                layer.table = table;\r\n            });\r\n            this.score.setNoteState({ ...this.state.noteState, backingPaletteState: backing });\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const baseLayers = backing.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backing.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        play: (isScore: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                editMode: EditMode.PREVIEW, backingThreads: threads\r\n            });\r\n            let totalTime = 0;\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            // const curDetail  = dataList[focusIndex].detail as DetailChord;\r\n            const pastTime = this.state.noteState.cacheList[focusIndex].progress.headMSec;\r\n\r\n            // Audioファイルが指定されている場合のみ再生\r\n            // バッキングエディタでは鳴らさない\r\n            if (isScore && this.state.noteState.ensembleInfo.isLoad) {\r\n                const audioHead = this.state.noteState.ensembleInfo.startPosition;\r\n                const audio = this.state.noteState.ensembleInfo.audio;\r\n                const adjust = audioHead + pastTime;\r\n                audio.currentTime = 0;\r\n                if (adjust > 0) {\r\n                    audio.currentTime = adjust * 0.001;\r\n                    audio.play();\r\n                } else {\r\n                    setTimeout(() => {\r\n                        audio.play();\r\n                    }, (adjust * -1));\r\n                }\r\n            }\r\n            const curTime = new Date().getTime();\r\n            const limitIndex = isScore ? dataList.length : focusIndex + 1;\r\n            for (let i = focusIndex; i < limitIndex; i++) {\r\n                const data = dataList[i];\r\n\r\n\r\n                // フォーカスを更新\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        if (isScore && [TypeNoteElement.Chord, TypeNoteElement.Fixed].includes(data.type)) {\r\n                            // const hasNext = this.score.focusNextElement();\r\n                            // if (!hasNext) {\r\n                            //     this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                            // }\r\n                            const [editMode, next] =\r\n                                data.type == TypeNoteElement.Fixed ?\r\n                                    [EditMode.NORMAL, focusIndex] : [EditMode.PREVIEW, i];\r\n                            this.score.setNoteState({ ...this.state.noteState, focusIndex: next, editMode });\r\n                        }\r\n                    }, totalTime)\r\n                );\r\n                if (data.type == TypeNoteElement.Chord) {\r\n                    const detail = data.detail as DetailChord;\r\n\r\n                    const cache = this.state.noteState.cacheList[i];\r\n                    const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n                    if (detail.molecule != null && detail.denominator != null) {\r\n                        applyOnChord(symbol, detail.molecule.rootIndex, detail.denominator.rootIndex);\r\n                    }\r\n                    const intervals = symbol?.intervals as number[];\r\n                    const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n                    const backing: BackingScript = !isScore ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                        : detail.backing;\r\n                    const sampler = this.state.sampler;\r\n                    const tempo = cache.init.tempo;\r\n                    // 1小節の長さミリ秒\r\n                    const barMs = 60000 / tempo * 4;\r\n                    const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                    const adjustOverlap = barMs / 32;\r\n\r\n                    // バッキングエディタの場合は、1つの要素で止める\r\n                    if (!isScore) {\r\n                        threads.push(\r\n                            setTimeout(() => {\r\n                                this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n\r\n                            }, totalTime + boxMs)\r\n                        )\r\n                    }\r\n                    for (let i = 0; i < 2; i++) {\r\n                        let headMs = 0;\r\n                        const layer = backing.layers[i];\r\n                        // 音価のループ\r\n                        layer.lens.forEach((lenBean, j) => {\r\n\r\n                            const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                            let curLenMs = barMs / lenValue;\r\n                            if (lenBean.isHalf) {\r\n                                curLenMs *= 1.5;\r\n                            }\r\n                            backing.useChannels.forEach((channel, k) => {\r\n                                layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                    if (notes && detail.molecule != null) {\r\n                                        const degreeIndex = detail.molecule.rootIndex;\r\n                                        const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                        const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                        const octave = Math.floor(soundIndex / 12);\r\n                                        const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                        const soundFullName = root + octave;\r\n                                        const velocity = 0.5 * layer.vels[j] / 10;\r\n                                        const head = headMs + curLenMs / 3 * l;\r\n                                        const tail = !backing.isUsePedal ?\r\n                                            //ペダル未使用時\r\n                                            head + curLenMs :\r\n                                            //ペダル使用時\r\n                                            boxMs + adjustOverlap\r\n                                            ;\r\n                                        const lag = new Date().getTime() - curTime;\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                                soundUseList[soundIndex]++;\r\n                                            }, totalTime + head - lag)\r\n                                        );\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                soundUseList[soundIndex]--;\r\n                                                if (soundUseList[soundIndex] == 0) {\r\n                                                    sampler.triggerRelease(soundFullName);\r\n                                                }\r\n                                            }, totalTime + tail - lag)\r\n                                        );\r\n                                    }\r\n                                });\r\n                            });\r\n                            headMs += curLenMs;\r\n                        });\r\n                    }\r\n                    totalTime += boxMs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public thema = {\r\n\r\n        setThemaeData: (data: ThemaDataTree) => {\r\n            this.dispatch(ActionType.SET_THEMA_DATA, { data: { ...data } });\r\n        },\r\n        setThemaState: (themaState: ThemaState) => {\r\n            this.dispatch(ActionType.SET_THEMA_STATE, { themaState });\r\n        },\r\n\r\n        callBackingPatternEditor: () => {\r\n            const cur = this.thema.getFocusElement();\r\n            const sustainEl = cur.parent as ThemaIndexedElement;\r\n            const sustain = sustainEl.reffer as BTSustain;\r\n            const form = this.state.themaState.form.pattern;\r\n            const patternDef: BackingPattern = form.src == '' ? {\r\n                layers: [\r\n                    {\r\n                        lens: [{\r\n                            len: BACKING_LEN_TYPE.LEN4,\r\n                            isDiv3: false,\r\n                            isHalf: false\r\n                        }],\r\n                        side: BACKING_SIDE.LEFT,\r\n                        table: [[[false]]],\r\n                        vels: [5]\r\n                    },\r\n                    {\r\n                        lens: [{\r\n                            len: BACKING_LEN_TYPE.LEN4,\r\n                            isDiv3: false,\r\n                            isHalf: false\r\n                        }],\r\n                        side: BACKING_SIDE.RIGHT,\r\n                        table: [[[false]]],\r\n                        vels: [5]\r\n                    }\r\n                ],\r\n                isUsePedal: false\r\n            } : JSON.parse(form.src);\r\n            const backingState: BackingEditorState = {\r\n                target: \"thema-pattern\",\r\n                isDispVoicing: false,\r\n                isEditPattern: true,\r\n                molecule: { rootIndex: 0, isFlat: false },\r\n                denominator: null,\r\n                symbolKey: SymbolKey.MAJOR,\r\n                sustain: sustain.beat,\r\n                headAdjust: sustain.headAdjust,\r\n                tailAdjust: sustain.tailAdjust,\r\n                channelRowSize: patternDef.layers[0].table.length,\r\n                isUsePedal: patternDef.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                useChannels: [],\r\n                layers: patternDef.layers.slice(),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        },\r\n        callBackingVoicingEditor: () => {\r\n            const cur = this.thema.getFocusElement();\r\n            const patternEl = cur.parent?.parent?.parent as ThemaIndexedElement;\r\n            const sustainEl = patternEl.parent as ThemaIndexedElement;\r\n            const pattern = patternEl.reffer as BTPattern;\r\n            const sustain = sustainEl.reffer as BTSustain;\r\n            const patternDef = pattern.def as BackingPattern;\r\n            const form = this.state.themaState.form.voicing;\r\n            const VoicingDef: BackingVoicing = form.src == '' ? {\r\n                useChannels: []\r\n            } : JSON.parse(form.src);\r\n            const backingState: BackingEditorState = {\r\n                target: \"thema-voicing\",\r\n                isDispVoicing: true,\r\n                isEditPattern: false,\r\n                molecule: { rootIndex: 0, isFlat: false },\r\n                denominator: null,\r\n                symbolKey: SymbolKey.MAJOR,\r\n                sustain: sustain.beat,\r\n                headAdjust: sustain.headAdjust,\r\n                tailAdjust: sustain.tailAdjust,\r\n                channelRowSize: patternDef.layers[0].table.length,\r\n                isUsePedal: patternDef.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                useChannels: VoicingDef.useChannels.slice(),\r\n                layers: patternDef.layers,\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        },\r\n\r\n        buildIndex: () => {\r\n            const themaState = this.state.themaState;\r\n            const themaTree = this.state.themaDataTree;\r\n            const dataIndexies: ThemaIndexedElement[] = [];\r\n\r\n            const rootBean: ThemaIndexedElement = {\r\n                isClose: false,\r\n                ChildCnt: themaTree.sustains.length,\r\n                type: 'root',\r\n                reffer: themaTree,\r\n                parent: null\r\n            }\r\n            dataIndexies.push(rootBean);\r\n\r\n            // 拍リストを構成\r\n            themaTree.sustains.forEach((sustain) => {\r\n                const sustainBean: ThemaIndexedElement = {\r\n                    isClose: false,\r\n                    ChildCnt: sustain.patterns.length,\r\n                    type: 'sustain',\r\n                    reffer: sustain,\r\n                    parent: rootBean\r\n                };\r\n                dataIndexies.push(sustainBean);\r\n                sustain.patterns.forEach((pattern) => {\r\n                    const patternBean: ThemaIndexedElement = {\r\n                        isClose: false,\r\n                        ChildCnt: pattern.tgtTypes.length,\r\n                        type: 'pattern',\r\n                        reffer: pattern,\r\n                        parent: sustainBean\r\n                    };\r\n                    dataIndexies.push(patternBean);\r\n                    pattern.tgtTypes.forEach((category) => {\r\n                        const categoryBean: ThemaIndexedElement = {\r\n                            isClose: false,\r\n                            ChildCnt: category.conditions.length,\r\n                            type: 'category',\r\n                            reffer: category,\r\n                            parent: patternBean\r\n                        };\r\n                        dataIndexies.push(categoryBean);\r\n                        category.conditions.forEach((condition) => {\r\n                            const conditionBean: ThemaIndexedElement = {\r\n                                isClose: false,\r\n                                ChildCnt: condition.voicings.length,\r\n                                type: 'condition',\r\n                                reffer: condition,\r\n                                parent: categoryBean\r\n                            };\r\n                            dataIndexies.push(conditionBean);\r\n                            condition.voicings.forEach((voicing) => {\r\n                                const voicingBean: ThemaIndexedElement = {\r\n                                    isClose: false,\r\n                                    ChildCnt: 0,\r\n                                    type: 'voicing',\r\n                                    reffer: voicing,\r\n                                    parent: conditionBean\r\n                                };\r\n                                dataIndexies.push(voicingBean);\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n\r\n            if (themaState.focusRef !== null) {\r\n                dataIndexies.forEach((data, i) => {\r\n                    if (data.reffer == themaState.focusRef) {\r\n                        themaState.focusIndex = i;\r\n                        themaState.focusRef = null;\r\n                        themaState.isCreate = true;\r\n                    }\r\n                });\r\n            }\r\n            this.thema.setThemaState({ ...themaState, themaCacheList: dataIndexies });\r\n        },\r\n        applyBackingPattern: () => {\r\n            const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const form = this.state.themaState.form.pattern;\r\n            const def: BackingPattern = {\r\n                layers: editor.layers.slice(),\r\n                isUsePedal: editor.isUsePedal\r\n            }\r\n            form.src = JSON.stringify(def);\r\n            this.thema.setThemaState(this.state.themaState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n        },\r\n        applyBackingVoicing: () => {\r\n            const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const form = this.state.themaState.form.voicing;\r\n            const def: BackingVoicing = {\r\n                useChannels: editor.useChannels\r\n            }\r\n            form.src = JSON.stringify(def);\r\n            this.thema.setThemaState(this.state.themaState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n        },\r\n\r\n        getFocusElement: (): ThemaIndexedElement => {\r\n            return this.state.themaState.themaCacheList[this.state.themaState.focusIndex];\r\n        },\r\n\r\n        addChildSustain: () => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const bean: BTSustain = {\r\n                beat: 1,\r\n                headAdjust: 0,\r\n                tailAdjust: 0,\r\n                patterns: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.sustain;\r\n            form.beat = null;\r\n            form.headAdjust = 0;\r\n            form.tailAdjust = 0;\r\n            this.thema.setThemaState(themaState);\r\n            thema.sustains.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildPattern: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as BTSustain;\r\n            const bean: BTPattern = {\r\n                name: 'pattern1',\r\n                def: null,\r\n                tgtTypes: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.pattern;\r\n            form.name = '';\r\n            form.def = null;\r\n            form.src = '';\r\n            this.thema.setThemaState(themaState);\r\n            reffer.patterns.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildCategory: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as BTPattern;\r\n            const bean: VoicingTargetType = {\r\n                symbolType: SymbolType.TRIAD,\r\n                conditions: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.category;\r\n            form.category = null;\r\n            this.thema.setThemaState(themaState);\r\n            reffer.tgtTypes.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildCondition: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as VoicingTargetType;\r\n            const bean: VoicingTargetCondition = {\r\n                maxRootIndex: 11,\r\n                minRootIndex: 0,\r\n                tgtSymbols: [],\r\n                voicings: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.condition;\r\n            form.maxRootIndex = 0;\r\n            form.maxRootIndex = 11;\r\n            form.tgtSymbols = [];\r\n            this.thema.setThemaState(themaState);\r\n            reffer.conditions.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildVoicing: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as VoicingTargetCondition;\r\n            const bean: BTVoicing = {\r\n                def: null\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.voicing;\r\n            form.def = null;\r\n            form.src = '';\r\n            this.thema.setThemaState(themaState);\r\n            reffer.voicings.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        }\r\n    }\r\n\r\n    public preview = {\r\n        play: () => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                editMode: EditMode.PREVIEW, backingThreads: threads\r\n            });\r\n            let totalTime = 0;\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            const pastTime = 0;\r\n\r\n            const audioHead = this.state.noteState.ensembleInfo.startPosition;\r\n\r\n            // Audioファイルが指定されている場合のみ再生\r\n            if (this.state.noteState.ensembleInfo.fileURL !== '') {\r\n                const audio = this.state.noteState.ensembleInfo.audio;\r\n                audio.currentTime = (audioHead + pastTime) * 0.001;\r\n                audio.play();\r\n            }\r\n            const curTime = new Date().getTime();\r\n            const limitIndex = dataList.length;\r\n            for (let i = focusIndex; i < limitIndex; i++) {\r\n                const data = dataList[i];\r\n\r\n                if (data.type == TypeNoteElement.Chord) {\r\n                    const detail = data.detail as DetailChord;\r\n\r\n                    const cache = this.state.noteState.cacheList[i];\r\n                    const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n                    if (detail.molecule != null && detail.denominator != null) {\r\n                        applyOnChord(symbol, detail.molecule.rootIndex, detail.denominator.rootIndex);\r\n                    }\r\n                    const intervals = symbol?.intervals as number[];\r\n                    const backing: BackingScript = detail.backing;\r\n                    const sampler = this.state.sampler;\r\n                    const tempo = cache.init.tempo;\r\n                    // 1小節の長さミリ秒\r\n                    const barMs = 60000 / tempo * 4;\r\n                    const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                    const adjustOverlap = barMs / 32;\r\n\r\n                    for (let i = 0; i < 2; i++) {\r\n                        let headMs = 0;\r\n                        const layer = backing.layers[i];\r\n                        // 音価のループ\r\n                        layer.lens.forEach((lenBean, j) => {\r\n\r\n                            const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                            let curLenMs = barMs / lenValue;\r\n                            if (lenBean.isHalf) {\r\n                                curLenMs *= 1.5;\r\n                            }\r\n                            backing.useChannels.forEach((channel, k) => {\r\n                                layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                    if (notes && detail.molecule != null) {\r\n                                        const degreeIndex = detail.molecule.rootIndex;\r\n                                        const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                        const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                        const octave = Math.floor(soundIndex / 12);\r\n                                        const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                        const soundFullName = root + octave;\r\n                                        const velocity = 0.5 * layer.vels[j] / 10;\r\n                                        const head = headMs + curLenMs / 3 * l;\r\n                                        const tail = !backing.isUsePedal ?\r\n                                            //ペダル未使用時\r\n                                            head + curLenMs :\r\n                                            //ペダル使用時\r\n                                            boxMs + adjustOverlap\r\n                                            ;\r\n                                        const lag = new Date().getTime() - curTime;\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                                soundUseList[soundIndex]++;\r\n                                            }, totalTime + head - lag)\r\n                                        );\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                soundUseList[soundIndex]--;\r\n                                                if (soundUseList[soundIndex] == 0) {\r\n                                                    sampler.triggerRelease(soundFullName);\r\n                                                }\r\n                                            }, totalTime + tail - lag)\r\n                                        );\r\n                                    }\r\n                                });\r\n                            });\r\n                            headMs += curLenMs;\r\n                        });\r\n                    }\r\n                    totalTime += boxMs;\r\n                }\r\n            }\r\n        },\r\n        stop: () => {\r\n\r\n            // Audioファイルが指定されている場合のみ停止\r\n            if (this.state.noteState.ensembleInfo.isLoad) {\r\n                this.state.noteState.ensembleInfo.audio.pause();\r\n            }\r\n            const threads = this.state.noteState.backingThreads;\r\n            threads.forEach((thr) => {\r\n                clearInterval(thr);\r\n            });\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                backingThreads: [], editMode: EditMode.NORMAL\r\n            });\r\n            this.state.sampler.releaseAll();\r\n        }\r\n    }\r\n\r\n    public tune = {\r\n        setState: (tuneState: TuneState) => {\r\n            this.dispatchBase({ type: ActionType.SET_TUNE_STATE, payload: { tuneState } });\r\n        },\r\n        setSoundFont: (soundFont: SoundFontProp) => {\r\n            this.setNoteData({ ...this.state.noteData, soundFont: soundFont });\r\n        },\r\n\r\n        setColumnList: (columnList: Column[]) => {\r\n            this.setNoteData({ ...this.state.noteData, columnList });\r\n        },\r\n\r\n        addColumn: () => {\r\n            const tuneState = this.state.tuneState;\r\n            const len4 = tuneState.usingLen === 4 && !tuneState.isDiv3 ? 1 : 0;\r\n            const len8 = tuneState.usingLen === 8 && !tuneState.isDiv3 ? 1 : 0;\r\n            const len16 = tuneState.usingLen === 16 ? 1 : 0;\r\n            const len4div3 = tuneState.usingLen === 4 && tuneState.isDiv3 ? 1 : 0;\r\n            const len8div3 = tuneState.usingLen === 8 && tuneState.isDiv3 ? 1 : 0;\r\n            const columnList = this.state.noteData.columnList;\r\n            columnList.splice(tuneState.columnIndex + 1, 0, {\r\n                len4, len8, len16, len4div3, len8div3, soundIndex: -1\r\n            });\r\n            this.tune.setColumnList(columnList.slice());\r\n        },\r\n\r\n        remooveCur: () => {\r\n            const tuneState = this.state.tuneState;\r\n            const columnList = this.state.noteData.columnList;\r\n            columnList.splice(tuneState.columnIndex, 1);\r\n            this.tune.setColumnList(columnList.slice());\r\n        },\r\n\r\n        playSoundFont: (soundName: string, duration: number) => {\r\n            const instrument = this.state.instrument;\r\n            if (instrument != null) {\r\n                instrument.stop();\r\n                instrument.play(soundName, 0, { duration });\r\n            }\r\n        },\r\n\r\n        adjustWidth: (isAdd: boolean) => {\r\n            const tuneState = this.state.tuneState;\r\n            const columnList = this.state.noteData.columnList;\r\n            const column = { ...columnList[tuneState.columnIndex] };\r\n            if (isAdd) {\r\n                if (tuneState.usingLen === 4 && !tuneState.isDiv3) column.len4++;\r\n                else if (tuneState.usingLen === 8 && !tuneState.isDiv3) column.len8++;\r\n                else if (tuneState.usingLen === 16 && !tuneState.isDiv3) column.len16++;\r\n                else if (tuneState.usingLen === 4 && tuneState.isDiv3) column.len4div3++;\r\n                else if (tuneState.usingLen === 8 && tuneState.isDiv3) column.len8div3++;\r\n            } else {\r\n                if (tuneState.usingLen === 4 && !tuneState.isDiv3) column.len4--;\r\n                else if (tuneState.usingLen === 8 && !tuneState.isDiv3) column.len8--;\r\n                else if (tuneState.usingLen === 16 && !tuneState.isDiv3) column.len16--;\r\n                else if (tuneState.usingLen === 4 && tuneState.isDiv3) column.len4div3--;\r\n                else if (tuneState.usingLen === 8 && tuneState.isDiv3) column.len8div3--;\r\n            }\r\n            let total = column.len4 + column.len8 / 2 + column.len16 / 4;\r\n            let totalDiv3 = column.len4div3 / 3 + column.len8div3 / 6;\r\n            if (total + totalDiv3 > 0) {\r\n                column.len4 = Math.floor(total);\r\n                total -= column.len4;\r\n                total *= 2;\r\n                column.len8 = Math.floor(total);\r\n                total -= column.len8;\r\n                total *= 2;\r\n                column.len16 = Math.floor(total);\r\n\r\n                const subLen4 = Math.floor(totalDiv3);\r\n                totalDiv3 -= subLen4;\r\n                totalDiv3 *= 3;\r\n                column.len4div3 = Math.floor(totalDiv3);\r\n                totalDiv3 -= column.len4div3;\r\n                totalDiv3 *= 2;\r\n                const subLen8 = Math.floor(totalDiv3);\r\n                totalDiv3 -= subLen8;\r\n                totalDiv3 *= 3;\r\n                column.len8div3 = Math.floor(totalDiv3);\r\n                column.len4 += subLen4;\r\n                column.len8 += subLen8;\r\n                columnList[tuneState.columnIndex] = column;\r\n                this.tune.setColumnList(columnList.slice());\r\n            }\r\n        },\r\n\r\n        adjustScrollY: () => {\r\n\r\n            const tuneState = this.state.tuneState;\r\n            const columnList = this.state.noteData.columnList;\r\n            const column = columnList[tuneState.columnIndex];\r\n            const top = 22 * column.soundIndex - 350;\r\n            tuneState.intervalRef.current.scrollTo({ top, behavior: 'smooth' });\r\n            tuneState.tableRef.current.scrollTo({ top, behavior: 'smooth' });\r\n        },\r\n\r\n        playPreview: () => {\r\n\r\n            const tuneState = this.state.tuneState;\r\n            const columnList = this.state.noteData.columnList;\r\n            const instrument = this.state.instrument as Soundfont.Player;\r\n            const threads = this.state.noteState.backingThreads;\r\n            const getSoundName = (soundIndex: number) => {\r\n\r\n                const octave = Math.floor((87 + 9 - soundIndex) / 12);\r\n                const keyIndex = (87 + 9 - soundIndex) % 12;\r\n                const chordName = KEY12_SHARP_LIST[keyIndex];\r\n                return chordName + octave;\r\n            }\r\n\r\n            let pastTime = 0;\r\n            const bpm = this.state.noteState.cacheList[0].init.tempo;\r\n            for (let i = tuneState.columnIndex; i < columnList.length; i++) {\r\n                const column = columnList[i];\r\n\r\n                const total = column.len4 + column.len8 / 2 + column.len16 / 4 + column.len4div3 / 3 + column.len8div3 / 6;\r\n                const time = 60 / bpm * total;\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        tuneState.columnIndex = i;\r\n                        tuneState.isEdit = true;\r\n                        this.tune.setState(tuneState);\r\n                        if (column.soundIndex !== -1) {\r\n                            instrument.play(getSoundName(column.soundIndex), 0, { duration: time });\r\n                        }\r\n                    }, pastTime * 1000)\r\n                );\r\n                pastTime += time;\r\n            }\r\n            threads.push(\r\n                setTimeout(() => {\r\n                    tuneState.isPreview = false;\r\n                    this.tune.setState(tuneState);\r\n                }, pastTime * 1000)\r\n            );\r\n        },\r\n\r\n        stopPreview: () => {\r\n            const threads = this.state.noteState.backingThreads;\r\n            threads.forEach((thr) => {\r\n                clearInterval(thr);\r\n            });\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                backingThreads: []\r\n            });\r\n        },\r\n\r\n        moveAll: (value: number) => {\r\n            const columnList = this.state.noteData.columnList;\r\n            for (let i = 0; i < columnList.length; i++) {\r\n                const column = columnList[i];\r\n                if (column.soundIndex !== -1) {\r\n                    column.soundIndex += value;\r\n                }\r\n            }\r\n            this.tune.setColumnList(columnList.slice());\r\n        }\r\n    }\r\n}","import { API_DOMAIN } from 'contents/common/define';\r\nimport { sendQueryRequestToAPI } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './LoginFrame.css';\r\n\r\nconst LoginFrame = () => {\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n\r\n    const [loginType, setLoginType] = useState<'guest' | 'login' | 'create'>('guest');\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [message, setMessage] = useState(' ');\r\n    const [isError, setError] = useState(false);\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const enterDisable = (): boolean => {\r\n        switch (loginType) {\r\n            case 'guest': return false;\r\n            case 'login': {\r\n                return userName == '' || userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password == '' || password.length < 5 || password.length > 15 || !isHanEisu(password);\r\n            }\r\n            case 'create': {\r\n                return userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password.length < 5 || password.length > 15 || !isHanEisu(password) ||\r\n                    passConfirm.length < 5 || passConfirm.length > 15 || !isHanEisu(passConfirm);\r\n            }\r\n        }\r\n    }\r\n    return (<>\r\n        <div id=\"logo\"><span>Virtual Harmonizer</span></div>\r\n        <div id=\"login-frame\" ref={ref}>\r\n            <div className=\"guide\">\r\n                <span>Start to Virtual Harmonizer</span>\r\n            </div>\r\n            <div className=\"type\">\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"guest\"\r\n                    name=\"guest\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"login\"\r\n                    name=\"login\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"create\"\r\n                    name=\"create account\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n            </div>\r\n            <div className=\"body\">\r\n                <TextForm\r\n                    label=\"user name\"\r\n                    stateValue={userName}\r\n                    stateSetter={setUserName}\r\n                    isMask={false}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password\"\r\n                    stateValue={password}\r\n                    stateSetter={setPassword}\r\n                    isMask={true}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password confirm\"\r\n                    stateValue={passConfirm}\r\n                    stateSetter={setPassConfirm}\r\n                    isMask={true}\r\n                    isDisable={!['create'].includes(loginType)}\r\n                />\r\n            </div>\r\n            <div className=\"message\">\r\n                <span className={isError ? 'error' : ''}>{message}</span>\r\n            </div>\r\n            <div\r\n                className={['opr', (enterDisable() || isLoading) ? 'disable' : ''].join(' ')}\r\n            >\r\n                <button\r\n                    onClick={() => {\r\n\r\n                        const login = (id: number, name: string) => {\r\n                            ref.current.style.opacity = '0';\r\n                            setTimeout(() => {\r\n                                dispatcher.setLoginParams({\r\n                                    ...state.login,\r\n                                    isLogin: true,\r\n                                    id,\r\n                                    name\r\n                                });\r\n                            }, 300);\r\n                        }\r\n                        setLoading(true);\r\n                        setError(false);\r\n                        setMessage('Connect to server...');\r\n                        switch (loginType) {\r\n                            case 'guest': {\r\n                                login(-1, 'Guest');\r\n                                setLoading(false);\r\n                            }\r\n                                break;\r\n                            case 'login': {\r\n\r\n                                sendQueryRequestToAPI('select', `SELECT * FROM user_tbl where name = '${userName}' and password = '${password}'`)\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(results => {\r\n                                        console.log(results.length);\r\n                                        const isExist = results.length > 0;\r\n                                        if (isExist) {\r\n                                            login(results[0].id, results[0].name);\r\n                                        } else {\r\n                                            setError(true);\r\n                                            setMessage('The login attempt failed. Either the user ID or password is invalid.');\r\n                                        }\r\n                                        setLoading(false);\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                        setLoading(false);\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'create': {\r\n\r\n                                if (password != passConfirm) {\r\n                                    setError(true);\r\n                                    setMessage(`Confirmation passwords don't match.`);\r\n                                    setLoading(false);\r\n                                    break;\r\n                                }\r\n\r\n                                (async () => {\r\n                                    let response = await sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where name = '${userName}'`);\r\n                                    let results = await response.json();\r\n                                    console.log(JSON.stringify(results[0].cnt));\r\n                                    const isExist = results[0].cnt > 0;\r\n                                    if (isExist) {\r\n                                        setError(true);\r\n                                        setMessage('That user id has already been recorded.');\r\n                                    } else {\r\n                                        response = await sendQueryRequestToAPI('update', `INSERT INTO user_tbl(name, password) VALUES('${userName}', '${password}')`);\r\n                                        results = await response.json();\r\n                                        setMessage('');\r\n                                        alert('You have successfully created an account!');\r\n                                        setLoginType('login');\r\n                                    }\r\n                                    setLoading(false);\r\n                                })();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }}\r\n                >\r\n                    enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nconst LoginTypeSwitch = (\r\n    props: {\r\n        name: string,\r\n        curLoginType: string,\r\n        loginType: string,\r\n        setLoginType: Function,\r\n        resetError: Function\r\n    }\r\n) => {\r\n    const isSelected = props.loginType == props.curLoginType;\r\n    return (\r\n        <button\r\n            className={isSelected ? 'active' : ''}\r\n            onClick={() => {\r\n                if (!isSelected) {\r\n                    props.setLoginType(props.curLoginType);\r\n                    props.resetError();\r\n                }\r\n            }}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nconst TextForm = (\r\n    props: {\r\n        label: string,\r\n        stateValue: string,\r\n        stateSetter: Function,\r\n        isMask: boolean,\r\n        isDisable: boolean\r\n    }\r\n) => {\r\n    useEffect(() => {\r\n        if (props.isDisable) {\r\n            props.stateSetter('');\r\n        }\r\n    }, [props.isDisable]);\r\n    const strLen = props.stateValue.length;\r\n    return (\r\n        <div className={['form', props.isDisable ? 'disable' : ''].join(' ')}>\r\n            <span>{props.label}:</span>\r\n            <input\r\n                className={[\r\n                    !props.isDisable && strLen == 0 ? 'required' : '',\r\n                    !props.isDisable && (strLen < 5 || strLen > 15) ? 'range' : '',\r\n                    !props.isDisable && !isHanEisu(props.stateValue) ? 'ban' : ''\r\n                ].join(' ')}\r\n                type={props.isMask ? 'password' : 'text'}\r\n                value={props.stateValue}\r\n                onChange={(e) => props.stateSetter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isHanEisu = (str: string) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[A-Za-z0-9_!@]*$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LoginFrame;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { useContext } from 'react';\r\nimport './UserPlate.css';\r\n\r\nconst UserPlate = (\r\n    props: {\r\n    }\r\n) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    return (\r\n        <div id=\"user-plate\" className={[''].join(' ')}>\r\n            <div className=\"user-name\">\r\n                <span>{state.login.name}</span>\r\n            </div>\r\n            <div\r\n                className=\"logout\"\r\n\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData({\r\n                        ...state.noteData,\r\n                        dataList: []\r\n                    });\r\n                    dispatcher.setLoginParams({\r\n                        ...state.login,\r\n                        isLogin: false,\r\n                        name: ''\r\n                    });\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                }}>\r\n                <span>LOGOUT</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPlate;","import { KEY12_SHARP_LIST } from \"contents/common/define\"\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport './SamplerTab.css';\r\n\r\ntype SampleRecord = {\r\n    // 音名\r\n    soundName: string,\r\n    // レコードの利用有無\r\n    isUse: boolean,\r\n    // URL\r\n    url: string\r\n};\r\n\r\nconst SamplerTab = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [samples, setSamples] = useState<SampleRecord[]>();\r\n\r\n    useEffect(() => {\r\n\r\n        const samples: SampleRecord[] = [];\r\n\r\n        for (let i = 0; i <= 88; i++) {\r\n            samples.push(\r\n                {\r\n                    soundName: KEY12_SHARP_LIST[(i + 9) % 12] + Math.floor((i + 9) / 12),\r\n                    isUse: false,\r\n                    url: \"\"\r\n                },\r\n            );\r\n        }\r\n        setSamples(samples);\r\n    }, []);\r\n\r\n    const createRecoredJsxList = (): JSX.Element[] => {\r\n        const list: JSX.Element[] = [];\r\n        samples?.forEach((sample, i)=> {\r\n            list.push(\r\n                <div key={i} className=\"record\">\r\n                    <div className=\"label\"><span>{sample.soundName}</span></div>\r\n                    <input type=\"checkbox\"\r\n                        checked={sample.isUse}\r\n                        onChange={e => {\r\n                            sample.isUse = e.target.checked;\r\n                            setSamples(samples.slice());\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        className={!sample.isUse ? 'disable' : ''}\r\n                        value={sample.url}\r\n                        onChange={e => {\r\n                            sample.url = e.target.value;\r\n                            setSamples(samples.slice());\r\n                        }} />\r\n                </div>\r\n            );\r\n        });\r\n        return list;\r\n    }\r\n\r\n    const getSamplesList = () => {\r\n        let samplesList = {};\r\n        for (let i = 0; i < 88; i++) {\r\n            if (samples && samples[i]) {\r\n                if (samples[i].isUse) {\r\n                    samplesList = { [samples[i].soundName]: samples[i].url };\r\n                }\r\n            }\r\n        }\r\n        return samplesList;\r\n    }\r\n\r\n    return (\r\n        <div id=\"samplertab-root\">\r\n            // サンプラーの読み込みdiv\r\n            <div className=\"loader\"></div>\r\n\r\n            // 音程リストdiv\r\n            <div className=\"list\">\r\n                {createRecoredJsxList()}\r\n            </div>\r\n\r\n            // 制御ボタンdiv\r\n            <div className=\"operation\">\r\n                <button\r\n                    className={[\r\n                        'disable'\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n\r\n                    }}>Save</button>\r\n\r\n                <button\r\n                    className={[\r\n                        'disable'\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n\r\n                    }}>Reset</button>\r\n\r\n                <button onClick={() => {\r\n                    dispatcher.setSampler(getSamplesList());\r\n                }}>Build</button>\r\n            </div>\r\n            <div className=\"keyboad\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SamplerTab;","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { keyboardShortCutAction } from './keyboad/KeyboardShortCutAction';\r\nimport { Dispatcher } from './redux/dispatcher';\r\nimport LoginFrame from './login/LoginFrame';\r\nimport UserPlate from './user/UserPlate';\r\nimport { Sampler } from 'tone';\r\nimport SamplerTab from './systab/sampler/SamplerTab';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => keyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                {\r\n                    !state.login.isLogin ?\r\n                        <LoginFrame />\r\n                        :\r\n                        <>\r\n                            <UserPlate />\r\n                            <TabbedPane groupName=\"system-tabs\"\r\n                                tabElements={[\r\n                                    { name: 'Account', disable: true, cont: <div></div> },\r\n                                    { name: 'Palette', disable: true, cont: <div></div> },\r\n                                    { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                                    { name: 'Symbol', disable: true, cont: <div></div> },\r\n                                    { name: 'Sampler', disable: false, cont: <SamplerTab/> },\r\n                                    { name: 'Setting', disable: true, cont: <div></div> }\r\n                                ]}\r\n                                activeNo={2}\r\n                            />\r\n                        </>\r\n                }\r\n                {((): JSX.Element => {\r\n                    const dialog = state.dialog;\r\n                    if (dialog.contents != null) {\r\n                        return (\r\n                            <div className=\"dialog-cover\">\r\n                                <div\r\n                                    className=\"dialog\"\r\n                                    style={{ left: dialog.left, top: dialog.top }}\r\n                                >{dialog.contents}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return <></>;\r\n                })()}\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import Tone from 'lib/Tone.min.js';\r\n// import Tone from \"react-tone\";\r\nimport * as Tone from \"tone\";\r\n\r\nimport './desty.css';\r\nimport './App.css';\r\nimport MainFrame from 'contents/MainFrame';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    window.addEventListener(\"keydown\", function (e) {\r\n      // space and arrow keys\r\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n      }\r\n    }, false);\r\n\r\n  }, []);\r\n  return (\r\n    <MainFrame />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}