{"version":3,"sources":["contents/redux/store.tsx","contents/common/TabbedPane.tsx","contents/common/define.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/common/utils.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentElementInfo.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLiblaryTab.tsx","contents/systab/score/contTabs/backing/ScoreContBackingTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","EDIT_MODE","TypeNoteElement","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","tabList","contList","tabElements","forEach","tab","index","disable","undefined","selectTabIndex","id","groupName","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","SYMBOL_PARAMS_LIST","key","sortNo","initialState","scoreTabIndex","noteData","scoreName","editMode","SCALE","dataList","noteState","focusIndex","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","rootIndex","isFlat","sustain","backingPaletteState","useChannels","sideIndex","selectedLenIndex","selectedChannelIndex","layers","reffers","sampler","Sampler","toDestination","ActionType","reducer","state","action","type","payload","SELECT_SCORETAB","ADD_CHORD","slice","splice","Chord","detail","ADD_SECTION","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","scale","Fixed","label","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","data","SET_DATA_LIST","SET_NOTE_STATE","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","baseScript","script","Array","i","channelCount","length","lensSplitCount","lens","baseTable","table","y","x","BACKING_TOGGLE_MATRIX","lenIndex","channelIndex","isUse","ScoreElementDetail","useContext","GlobalContext","dispatcher","dispatch","noteElement","paramLabels","degreeRoot","getDegreeRoot","chordName","getChordName","symbolName","symbol","getSymbol","isDiatonic","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Modulation","ScoreElement","ref","useRef","current","isSelected","elementClickAction","listIndex","additionWnd","CHORD_PALETTE","retJsxList","no","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","onContextMenu","e","style","left","clientX","top","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","score","callBackingEditor","menuList","ChordSelector","chordList","symbolList","beatList","operation","isDirect","editorState","degS","keyIndex","degF","chdS","chdF","isHalf","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getSymbolParams","CurrentElementInfo","inner","root","chordRoot","stateRecordList","title","value","stateList","structList","list","intervals","len","interval","struct","sound","BackingOperation","paletteState","curSideScript","curLenBean","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","callback","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","backingState","side","LEFT","RIGHT","buttonList","button","getActiveState","curLayerIndex","lineIndex","cur","back","curCellRange","getCellRange","backLenBean","j","judge1","isOverlapJudge","judge2","range1","range2","head","width","getLenSize","size","NotesMatrix","channelList","matrixLayersJsx","l","linesJsx","layer","isCurLayer","cellList","classes","divList","divCnt","k","toggleMatrix","SplitMeasure","measureInner","measureLength","cnt","isLast","BackingTable","testPlaySound","channelJsxList","channel","soundFullName","volumeList","volume","height","setLayerIndex","StructMatrix","structTable","cols","soundName","structs","relation","soundIndex","octave","floor","isNone","structIndex","isLimit","sort","a","b","setUseChannels","getChannelList","BackingEditor","BACKING_PALETTE","triggerAttack","setTimeout","triggerRelease","play","setCurBackingScript","ScoreContNoteTab","elementList","sectionList","totalBeat","totalMsec","lastBar","bar","isModalBlind","ScoreContLiblaryTab","ScoreContBackingTab","ScoreTab","Dispatcher","dispatchBase","setNoteData","getInitElement","addChordElement","curIndex","deleteCurElement","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","callChordSelector","chordDetail","backgroundColor","line","updateLenIndex","getCurLenIndex","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","changeLayerIndex","baseLayers","count","cell","barMs","releaseAll","headMs","lenValue","Number","toString","replace","curLenMs","this","createContext","MainFrame","useReducer","actionType","contextValue","tabIndex","onKeyDown","selectedData","diatonicChord","KeyboardShortCutAction","Provider","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10424bcc.chunk.js","sourcesContent":["import { SYMBOL_PARAMS_LIST } from 'contents/common/define'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE = 'NONE',\r\n    CONTEXT_MENU = 'CONTEXT_MENU',\r\n    CHORD_PALETTE = 'CHORD_PALETTE',\r\n    SECTION_PALETTE = 'SECTION_PALETTE',\r\n    INIT_PALETTE = 'INIT_PALETTE',\r\n    BACKING_PALETTE = 'BACKING_PALETTE',\r\n}\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    rootIndex: number;\r\n    isFlat: false;\r\n    symbolKey: string;\r\n    sustain: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n}\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    editMode: EDIT_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum EDIT_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: BackingEditorState;\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    key: string;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    degreeIndex: number;\r\n    isFlat: boolean;\r\n    symbolKey: string;\r\n    sustain: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailModulation = {\r\n\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    reffer?: HTMLDivElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailModulation | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Modulation = 'modulation',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', editMode: EDIT_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        focusIndex: -1,\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            rootIndex: 0,\r\n            isFlat: false,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4\r\n        },\r\n        backingPaletteState: {\r\n            useChannels: [],\r\n            sideIndex: 0,\r\n            selectedLenIndex: 0,\r\n            selectedChannelIndex: -1,\r\n            layers: []\r\n        }\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initSampler(),\r\n};\r\n\r\nfunction initSampler() {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabList: JSX.Element[] = [];\r\n    const contList: JSX.Element[] = [];\r\n    props.tabElements.forEach((tab, index) => {\r\n        tabList.push(\r\n            <TabLabel\r\n                key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                selectTab={() => selectTabIndex(index)}\r\n            />)\r\n            ;\r\n        contList.push(\r\n            <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n        );\r\n    });\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {tabList}\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {contList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabLabelProps = {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}\r\n\r\nconst TabLabel = (props: TabLabelProps) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabContentsProps = {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabContents = (props: TabContentsProps) => {\r\n    if(!props.isActive) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"tab-cont\">\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","export const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: string;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: 'major' },\r\n    { degreeIndex: 2, symbolKey: 'minor' },\r\n    { degreeIndex: 4, symbolKey: 'minor' },\r\n    { degreeIndex: 5, symbolKey: 'major' },\r\n    { degreeIndex: 7, symbolKey: 'major' },\r\n    { degreeIndex: 9, symbolKey: 'minor' },\r\n    { degreeIndex: 11, symbolKey: 'minorMinus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES: string[] = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\n\r\nexport type SymbolParams = {\r\n    key: string\r\n    sortNo: number;\r\n    parentNo: number;\r\n    depth: number;\r\n    name: string;\r\n    struct: string[];\r\n    fixed: string[];\r\n    intervals: number[];\r\n}\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: 'major', sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n    { key: 'minor', \"sortNo\": 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1','m3','p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n    { key: 'sus4', \"sortNo\": 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1','p4','p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n    { key: 'dim', \"sortNo\": 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1','m3','d5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n    { key: 'aug', \"sortNo\": 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1','M3','a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n    { key: 'maj7', \"sortNo\": 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1','M3','p5','M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n    { key: 'seventh', \"sortNo\": 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1','M3','p5','m7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n    { key: 'm7', \"sortNo\": 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1','m3','p5','m7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n    { key: 'mmaj7', \"sortNo\": 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1','m3','p5','M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n    { key: 'add9', \"sortNo\": 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1','M2','M3','p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n    { key: 'minorAdd9', \"sortNo\": 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1','M2','m3','p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n    { key: 'sixthNinth', \"sortNo\": 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1','M2','M3','p5','M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: 'minorMinus5', \"sortNo\": 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1','m3','d5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n];","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SELECT_SCORETAB = 'SELECT_SCORETAB',\r\n    ADD_CHORD = 'ADD_CHORD',\r\n    ADD_SECTION = 'ADD_SECTION',\r\n    SET_DEGREE_INDEX = 'SET_DEGREE_INDEX',\r\n    SET_SYMBOL_KEY = 'SET_SYMBOL_KEY',\r\n    DETAIL_PARAMS_SETTER = 'DETAIL_PARAMS_SETTER',\r\n    GET_ELEMENT_REFFER = 'GET_ELEMENT_REFFER',\r\n    INIT_DEFAULT_ELEMENTS = 'INIT_DEFAULT_ELEMENTS',\r\n    SELECT_NOTE_ELEMENT = 'SELECT_NOTE_ELEMENT',\r\n    GET_REFFER = 'GET_REFFER',\r\n    GET_REFFER_CONTEXT = 'GET_REFFER_CONTEXT',\r\n    GET_REFFER_CHORD_PALETTE = 'GET_REFFER_CHORD_PALETTE',\r\n    GET_REFFER_SECTION_PALETTE = 'GET_REFFER_SECTION_PALETTE',\r\n    GET_REFFER_BACKING_PALETTE = 'GET_REFFER_BACKING_PALETTE',\r\n    FLOATWND_STATE = 'FLOATWND_STATE',\r\n    CHORD_PALETTE_SETTER = 'CHORD_PALETTE_SETTER',\r\n    SET_NOTE_DATA = 'SET_NOTE_DATA',\r\n    SET_DATA_LIST = 'SET_DATA_LIST',\r\n    SET_NOTE_STATE = 'SET_NOTE_STATE',\r\n    INIT_BACKING_PALETTE = 'INIT_BACKING_PALETTE',\r\n    SET_USE_CHANNELS = 'SET_USE_CHANNELS',\r\n    BACKING_TOGGLE_MATRIX = 'BACKING_TOGGLE_MATRIX'\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_CHORD: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    degreeIndex: -1,\r\n                    isFlat: false,\r\n                    symbolKey: null,\r\n                    sustain: 4\r\n                }\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.label = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.degreeIndex = payload.degreeIndex;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 100,\r\n                                rythm: '4/4',\r\n                                key: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                label: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const data = state.noteData.dataList[payload.pos];\r\n            data.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const backingPaletteState = state.noteState.backingPaletteState;\r\n            const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            const script: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseScript[i].lens.length;\r\n                const baseTable = baseScript[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                script[i] = {\r\n                    ...baseScript[i],\r\n                    table,\r\n                };\r\n            }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState,\r\n                        useChannels,\r\n                        layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const script = state.noteState.backingPaletteState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][0] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailModulation, DetailSection, EDIT_MODE, NoteElement, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { ProgressInfo } from \"../ScoreElement\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    noteElement: NoteElement;\r\n    progress: ProgressInfo;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n    \r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(<div><span>tempo: </span><span>{detail.tempo}</span></div>);\r\n            paramLabels.push(<div><span>rythm: </span><span>{detail.rythm}</span></div>);\r\n            if (state.noteData.editMode == EDIT_MODE.SCALE) {\r\n                paramLabels.push(<div><span>key: </span><span>{detail.key}</span></div>);\r\n                paramLabels.push(<div><span>scale: </span><span>{detail.scale}</span></div>);\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            /**　ディグリーネームを返す */\r\n            const getDegreeRoot = (index: number): string => {\r\n                let name = 'blank';\r\n                if (index != -1) {\r\n                    const list = detail.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n                    name = list[index];\r\n                }\r\n                return name;\r\n            }\r\n            /**　コードネームを返す */\r\n            const getChordName = (index: number): string => {\r\n                let name = '-';\r\n                if (index != -1) {\r\n                    const list = detail.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n                    name = list[index];\r\n                }\r\n                return name;\r\n            }\r\n            /**　シンボルを返す */\r\n            const getSymbol = (index: number, symbolKey: string): string => {\r\n                let name = '';\r\n                if (index != -1) {\r\n                    SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n                        if (symbol.key == symbolKey) {\r\n                            name = symbol.name;\r\n                        }\r\n                    });\r\n                }\r\n                return name;\r\n            }\r\n\r\n            const degreeRoot = getDegreeRoot(detail.degreeIndex);\r\n            const chordName = getChordName(detail.degreeIndex);\r\n            const symbolName = getSymbol(detail.degreeIndex, detail.symbolKey);\r\n            const isDiatonic = DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName);\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = props.progress.barCount;\r\n            const remaindBeat = props.progress.remaindBeat;\r\n            const headMSec = Math.round(props.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.degreeIndex == -1 ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        + (state.noteData.editMode == EDIT_MODE.DIRECT ? ' visible' : '')}>\r\n                        <span>{degreeRoot}{symbolName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.editMode == EDIT_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}{symbolName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' none' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.label}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Modulation: {\r\n            const detail = props.noteElement.detail as DetailModulation;\r\n            return (\r\n                <></>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailModulation, NoteElement, FloatWndState, Store, EDIT_MODE } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\nexport type ProgressInfo = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    type: TypeNoteElement;\r\n    progress: ProgressInfo;\r\n}\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n    }, [state.noteData.dataList]);\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (props.type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Modulation: return 'detail-modulation';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && props.type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(props.type)) {\r\n\r\n            if (TypeNoteElement.Chord == props.type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{props.progress.no}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div key={retJsxList.length} className=\"del\">\r\n                    <span>×</span>\r\n                </div>\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 要素をクリックした際のイベント\r\n     */\r\n    const elementClickAction = (state: Store, dispatch: Function, listIndex: number) => {\r\n        const element: NoteElement = state.noteData.dataList[listIndex];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: listIndex });\r\n        }\r\n    }\r\n\r\n    let additionWnd: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionWnd = (\r\n            <div className=\"addition\"\r\n                onClick={() => {\r\n                    // const detail = state.noteData.dataList[props.index].detail as DetailChord;\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatch(ActionType.ADD_CHORD, { index: props.index });\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord\r\n                        ].includes(props.type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        elementClickAction(state, dispatch, props.index);\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        elementClickAction(state, dispatch, props.index);\r\n                        const element: NoteElement = state.noteData.dataList[props.index];\r\n                        if (element.type != TypeNoteElement.Fixed) {\r\n                            // alert(state.reffers.chordPalette);\r\n                            state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                            state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        noteElement={state.noteData.dataList[props.index]}\r\n                        progress={props.progress}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionWnd}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatch(ActionType.ADD_CHORD, { index: state.noteState.focusIndex });\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatch(ActionType.ADD_CHORD, { index: state.noteState.focusIndex });\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        rootIndex: detail.degreeIndex,\r\n                        isFlat: detail.isFlat,\r\n                        symbolKey: detail.symbolKey,\r\n                        sustain: detail.sustain,\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatch(ActionType.ADD_SECTION, { index: state.noteState.focusIndex });\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        // state.reffers.chordPalette.style.left = 50 + 'px';\r\n                        // state.reffers.chordPalette.style.top = 50 + 'px';\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...state.noteState.chordPaletteState,\r\n                                rootIndex: detail.degreeIndex,\r\n                                isFlat: detail.isFlat,\r\n                                symbolKey: detail.symbolKey,\r\n                                sustain: detail.sustain,\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                     }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => { }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: true,\r\n            executer: () => { }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: string;\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, EDIT_MODE } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordEditor.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operation: JSX.Element = <></>;\r\n    const isDirect = state.noteData.editMode == EDIT_MODE.DIRECT;\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n        const focusIndex = state.noteState.focusIndex;\r\n        const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = 0;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.rootIndex == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.editMode == EDIT_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={isSelected ? 'active' : ''}\r\n                            onClick={() => {\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                    }\r\n                                });\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={\"half\" + (isSelected && !editorState.isFlat ? ' active' : '')}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={\"half\" + (isSelected && editorState.isFlat ? ' active' : '')}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: true\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operation = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Separate', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Fragment', disable: false, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ChordSelector;","import { SymbolParams, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport function getSymbolParams(key: string): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}","\r\nimport { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentElementInfo.css';\r\n\r\ntype StateRecord = {\r\n    title: string;\r\n    value: string;\r\n    disable: boolean;\r\n}\r\n\r\nconst CurrentElementInfo = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const data = state.noteData.dataList[focusIndex];\r\n\r\n    let inner: JSX.Element = <></>;\r\n    switch (data.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = data.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.degreeIndex != -1) {\r\n                const degreeRoot = DEGREE12_SHARP_LIST[detail.degreeIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[detail.degreeIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.symbolKey != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const stateRecordList: StateRecord[] = [];\r\n            stateRecordList.push({ title: 'Tempo', value: '110', disable: false });\r\n            stateRecordList.push({ title: 'Rythm', value: '4/4', disable: false });\r\n            stateRecordList.push({ title: 'Key', value: 'C', disable: false });\r\n            stateRecordList.push({ title: 'Scale', value: 'major', disable: false });\r\n            stateRecordList.push({ title: 'Root', value: root, disable: root == '-' });\r\n            stateRecordList.push({ title: 'Symbol', value: symbolName, disable: symbolName == '-' });\r\n            stateRecordList.push({ title: 'Sustain', value: detail.sustain + '', disable: false });\r\n            const stateList: JSX.Element[] = [];\r\n            stateRecordList.forEach((state, i) => {\r\n                stateList.push(\r\n                    <div\r\n                        key={i}\r\n                        className={\r\n                            'record' +\r\n                            (state.disable ? ' disable' : '')\r\n                        }>\r\n                        <div className=\"title\"><span>{state.title}:</span></div>\r\n                        <div className=\"value\"><span>{state.value}</span></div>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            const structList: JSX.Element[] = [];\r\n            if (detail.symbolKey != null) {\r\n                const symbol = getSymbolParams(detail.symbolKey);\r\n                const list = symbol?.intervals;\r\n                const len = list?.length as number;\r\n                for (let i = 0; i < 7; i++) {\r\n                    if (i < len) {\r\n                        const interval = symbol?.intervals[i] as number;\r\n                        const struct = symbol?.struct[i];\r\n                        const sound = KEY12_SHARP_LIST[(detail.degreeIndex + interval) % 12];\r\n                        structList.push(\r\n                            <div key={i} className=\"record\">\r\n                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                <div className=\"sound\"><span>{sound}</span></div>\r\n                            </div>\r\n                        );\r\n                    } else {\r\n                        structList.push(\r\n                            <div key={i} className=\"record disable\">\r\n                                <div className=\"interval\"></div>\r\n                                <div className=\"struct\"></div>\r\n                                <div className=\"sound\"></div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                };\r\n            }\r\n\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        <div className=\"title\">\r\n                            <span>Current State</span>\r\n                        </div>\r\n                        <div className=\"current-state\">\r\n                            {stateList}\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            <span>Chord Struct</span>\r\n                        </div>\r\n                        <div className=\"symbol-struct\">\r\n                            {structList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        case TypeNoteElement.Section: {\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'section'\r\n                    }\r\n                >\r\n\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {inner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentElementInfo;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps ={\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        {\r\n            label: 'all clear',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                const backingState: BackingEditorState = {\r\n                    useChannels: [],\r\n                    sideIndex: 0,\r\n                    selectedLenIndex: 0,\r\n                    selectedChannelIndex: -1,\r\n                    layers: [\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN1,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.LEFT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        },\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN1,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.RIGHT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        }\r\n                    ]\r\n                };\r\n                dispatcher.initBackingPalette(backingState);\r\n            }\r\n        }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>{buttonList}</>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = channelList.length - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={\r\n                                getActiveState(paletteState.layers, l, i, j) +\r\n                                (lenBean.isDiv3 ? ' div3' : '')\r\n                            }\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][0]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            const judge1 = isOverlapJudge(curCellRange, getCellRange(back.lens, j));\r\n            const judge2 = isOverlapJudge(getCellRange(back.lens, j), curCellRange);\r\n            if (back.table[lineIndex][j][0] && (judge1 || judge2)) {\r\n                className = 'overlap';\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const width = getLenSize(lens[lenIndex]);\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingLayer, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curSideScript = props.layer;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 1;\r\n    curSideScript.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const getLen = () => {\r\n            if (i % 2 == 0) {\r\n                if (i % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLast = i == measureLength - 1;\r\n        measureInner.push(<div key={i} className={getLen() + (isLast ? ' last' : '')} />);\r\n    }\r\n\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam } from \"contents/redux/store\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    channelList.forEach((channel, i) => {\r\n        channelJsxList.push(\r\n            <div\r\n                key={i}\r\n                className=\"channel\"\r\n                onClick={() => testPlaySound(channel.soundFullName)}\r\n            >\r\n                <span>{channel.soundFullName}</span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curSideScript.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curSideScript.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"backing-table\">\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>RIGHT</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>LEFT</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                {/* <div className=\"volume\"></div> */}\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    layer={curSideScript}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import { SymbolParams } from \"contents/common/define\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\n\r\ntype StructMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}\r\n\r\nexport const StructMatrix = (props: StructMatrixProps) => {\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.symbol.intervals.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const interval = props.symbol.intervals[i];\r\n            const relation = props.symbol.struct[i];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: {soundName}</span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + props.symbol.intervals[i] + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = props.structs[i] + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                props.paletteState.useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                const isLimit = props.paletteState.useChannels.length >= 12 && !isSelected;\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={\r\n                            'col' +\r\n                            (isNone || isLimit ? ' disable' : '') +\r\n                            (isSelected ? ' active' : '')\r\n                        }\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < 7; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, EDIT_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const detail = state.noteData.dataList[state.noteState.focusIndex].detail as DetailChord;\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    const symbol = getSymbolParams(detail.symbolKey) as SymbolParams;\r\n    const root = KEY12_SHARP_LIST[detail.degreeIndex];\r\n    const chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    symbol.intervals.forEach((value) => {\r\n        structs.push(KEY12_SHARP_LIST[(detail.degreeIndex + value) % 12]);\r\n    });\r\n\r\n    // const infoList: JSX.Element[] = [];\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, detail.degreeIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.backing.play();\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.backing.setCurBackingScript();\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"backing-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"base-info\">\r\n                <div className=\"record\">\r\n                    <div className=\"title\"><span>Chord:</span></div>\r\n                    <div className=\"value\"><span>{chordName}</span></div>\r\n                </div>\r\n                <div className=\"record\">\r\n                    <div className=\"title\"><span>Struct:</span></div>\r\n                    <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                </div>\r\n                <div className=\"record\">\r\n                    <div className=\"title\"><span>Sustain:</span></div>\r\n                    <div className=\"value\"><span>{detail.sustain}</span></div>\r\n                </div>\r\n            </div>\r\n            <StructMatrix\r\n                paletteState={paletteState}\r\n                structs={structs}\r\n                symbol={symbol}\r\n                degreeIndex={detail.degreeIndex}\r\n                testPlaySound={testPlaySound}\r\n                setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n            />\r\n            <BackingTable\r\n                channelList={channelList}\r\n                paletteState={paletteState}\r\n                dispatcher={dispatcher}\r\n                testPlaySound={testPlaySound}\r\n            />\r\n\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailChord, DetailSection, FloatWndState, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { ProgressInfo } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentElementInfo from './sideDetail/CurrentElementInfo';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    // /** 譜面の要素リスト */\r\n    // const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    // /** 画面上部のセクションリスト */\r\n    // const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    // useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ProgressInfo;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement key={i} index={i} type={data.type} progress={progress} />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                totalBeat += detail.sustain;\r\n                const sectionMSec = 60000 / 99 * 4;\r\n                totalMsec += sectionMSec / 4 * detail.sustain;\r\n                no++;\r\n            }\r\n\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).label} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        // setElementList(elementList);\r\n        // setSectionList(sectionList);\r\n    // }, [state.noteData.dataList]);\r\n\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div id=\"operation-header\">\r\n                        <button><span>BACK</span></button>\r\n                        <button><span>SAVE</span></button>\r\n                        <button><span>RELOAD</span></button>\r\n                        <button><span>OPTION</span></button>\r\n                    </div>\r\n                    <div id=\"section-list\">\r\n                        {sectionList}\r\n                    </div>\r\n                    <div id=\"score-list-root\">\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <NoteContextMenu />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                </div>\r\n                <div id=\"score-footer\">\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentElementInfo />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n","import './ScoreContLiblaryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, EDIT_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                <button onClick={() => {\r\n                    dispatch(ActionType.SET_NOTE_DATA,\r\n                        { data: { ...state.noteData, editMode: EDIT_MODE.SCALE } }\r\n                    );\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    dispatch(ActionType.SET_NOTE_DATA,\r\n                        { data: { ...state.noteData, editMode: EDIT_MODE.DIRECT } }\r\n                    );\r\n                    // dispatcher.setNoteData({ ...state.noteData, editMode: EDIT_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"right-cont\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreContBackingTab.css';\r\n\r\nimport { DetailSection, EDIT_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport  { useContext } from 'react';\r\n\r\n\r\nconst ScoreContBackingTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    \r\n    return (<></>);\r\n\r\n\r\n}\r\n\r\nexport default ScoreContBackingTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLiblaryTab';\r\nimport ScoreContBackingTab from './contTabs/backing/ScoreContBackingTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'LIBLARY', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    { name: 'Note', disable: false, cont: <ScoreContNoteTab /> },\r\n                    { name: 'Backing', disable: false, cont: <ScoreContBackingTab/> },\r\n                    { name: 'Sheet Music', disable: false, cont: <div></div> },\r\n                    { name: 'Source', disable: false, cont: <div></div> },\r\n                    { name: 'Preview', disable: false, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public score = {\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        addChordElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    degreeIndex: -1,\r\n                    isFlat: false,\r\n                    symbolKey: null,\r\n                    sustain: 4,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN1,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN1,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[curIndex];\r\n            if (curElement.type == TypeNoteElement.Chord) {\r\n                const dataList: NoteElement[] = [];//this.state.noteData.dataList.slice();\r\n                this.state.noteData.dataList.forEach((data, i) => {\r\n                    if (curIndex != i) {\r\n                        dataList.push({ ...data });\r\n                    }\r\n                });\r\n                dataList.splice(curIndex, 1);\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n            }\r\n        },\r\n\r\n        focusPreviousElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n            }\r\n        },\r\n\r\n        focusNextElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex++;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n            }\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    rootIndex: detail.degreeIndex,\r\n                    isFlat: detail.isFlat,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                }\r\n            });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n            const backing = detail.backing;\r\n            const backingState: BackingEditorState = {\r\n                useChannels: backing.useChannels,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: backing.layers\r\n            };\r\n            this.initBackingPalette(backingState);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    degreeIndex: editorState.rootIndex,\r\n                    isFlat: editorState.isFlat,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n            }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        toggleMatrix: (channelIndex: number, lenIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !this.state.noteState.backingPaletteState.layers[sideIndex].table[channelIndex][lenIndex][0];\r\n            this.dispatchBase({ type: ActionType.BACKING_TOGGLE_MATRIX, payload: { sideIndex, channelIndex, lenIndex, isUse } });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const baseLayers = backingPaletteState.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n            }, 350);\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        play: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const symbol = getSymbolParams(detail.symbolKey);\r\n            const intervals = symbol?.intervals as number[];\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const tempo = 130;\r\n            // 1小節の長さミリ秒\r\n            const barMs = 60000 / tempo * 4;\r\n            // 末端に達したら全ての音を止める\r\n            setTimeout(() => {\r\n                this.state.sampler.releaseAll();\r\n            }, barMs);\r\n            for (let i = 0; i < 2; i++) {\r\n                let headMs = 1;\r\n                const sideScript = backing.layers[i];\r\n                // 音価のループ\r\n                sideScript.lens.forEach((lenBean, j) => {\r\n\r\n                    const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                    let curLenMs = barMs / lenValue;\r\n                    if (lenBean.isHalf) {\r\n                        curLenMs *= 1.5;\r\n                    }\r\n                    backing.useChannels.forEach((channel, k) => {\r\n\r\n                        if (sideScript.table[k][j][0]) {\r\n                            const soundIndex = detail.degreeIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                            const octave = Math.floor(soundIndex / 12);\r\n                            const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                            const soundFullName = root + octave;\r\n                            const velocity = 0.7 * sideScript.vels[j] / 10;\r\n                            // alert(soundFullName);\r\n                            setTimeout(() => {\r\n                                this.state.sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                            }, headMs);\r\n                        }\r\n                    });\r\n                    headMs += curLenMs;\r\n                });\r\n            }\r\n        }\r\n    }\r\n}","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\n// export const GlobalContext = createContext(({}) as GlobalContextType);\r\nexport const GlobalContext = createContext(({}) as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    const contextValue: GlobalContextType = { state, dispatch ,dispatcher};\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={contextValue}>\r\n                <TabbedPane groupName=\"system-tabs\"\r\n                    tabElements={[\r\n                        { name: 'Account', disable: false, cont: <div></div> },\r\n                        { name: 'Test', disable: false, cont: <div></div> },\r\n                        { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                        { name: 'Backing', disable: false, cont: <div></div> },\r\n                        { name: 'Symbol', disable: false, cont: <div></div> },\r\n                        { name: 'Sampler', disable: true, cont: <div></div> },\r\n                        { name: 'Setting', disable: false, cont: <div></div> }\r\n                    ]}\r\n                    activeNo={2}\r\n                />\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE, DetailChord, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n                    switch (e.key) {\r\n                        case 'c': {\r\n                            dispatcher.score.callChordSelector();\r\n                        }\r\n                            break;\r\n                        case 'b': {\r\n                            dispatcher.score.callBackingEditor();\r\n                        }\r\n                            break;\r\n                        case '1':\r\n                        case '2':\r\n                        case '3':\r\n                        case '4':\r\n                        case '5':\r\n                        case '6':\r\n                        case '7':\r\n                            const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                            dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowRight':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex + 1 });\r\n                            break;\r\n                        case 'ArrowLeft':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                        case '1':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            dispatcher.backing.play();\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            dispatcher.backing.setCurBackingScript();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section].includes(selectedData.type)) {\r\n        switch (e.key) {\r\n            case 'ArrowLeft': {\r\n                dispatcher.score.focusPreviousElement();\r\n            }\r\n                break;\r\n            case 'ArrowRight': {\r\n                dispatcher.score.focusNextElement();\r\n            }\r\n                break;\r\n            case 'ArrowUp': {\r\n                dispatcher.score.focusPreviousSection();\r\n            }\r\n                break;\r\n            case 'ArrowDown': {\r\n                dispatcher.score.focusNextSection();\r\n            }\r\n                break;\r\n            case 'Delete': {\r\n                dispatcher.score.deleteCurElement();\r\n                // dispatcher.score.addChordElement();\r\n            }\r\n                break;\r\n            case 'i': {\r\n                dispatcher.score.focusInitElement();\r\n            }\r\n                break;\r\n            case 'a':\r\n                // dispatch(ActionType.ADD_CHORD, { index: focusIndex });\r\n                dispatcher.score.addChordElement();\r\n                break;\r\n            case 's':\r\n                dispatch(ActionType.ADD_SECTION, { index: focusIndex });\r\n                break;\r\n            case 'w': {\r\n                const detail = selectedData.detail as DetailChord;\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        rootIndex: detail.degreeIndex,\r\n                        isFlat: detail.isFlat,\r\n                        symbolKey: detail.symbolKey,\r\n                        sustain: detail.sustain,\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\n\n// import Tone from 'lib/Tone.min.js';\n// import Tone from \"react-tone\";\nimport * as Tone from \"tone\";\n\nimport './desty.css';\nimport './App.css';\nimport MainFrame from 'contents/MainFrame';\n\nfunction App() {\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <MainFrame />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}