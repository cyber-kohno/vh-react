{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/common/utils.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentBlockDetailBar.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/common/Styles.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/footer/timing/FooterTiming.tsx","contents/systab/score/contTabs/note/footer/ensemble/FooterEnsemble.tsx","contents/systab/score/contTabs/note/footer/NoteFooter.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/floatwnd/section/SectionEditor.tsx","contents/systab/score/contTabs/note/floatwnd/setting/SettingEditor.tsx","contents/systab/score/contTabs/note/floatwnd/change/ChangeEditor.tsx","contents/systab/score/contTabs/note/floatwnd/thema/ThemaLoader.tsx","contents/systab/dialog/SourceDialog.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabCommonUtil.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabRoot.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabSustain.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabVoicing.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabCondition.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabCategory.tsx","contents/systab/score/contTabs/thema/tabs/ThemaTabPattern.tsx","contents/systab/score/contTabs/thema/ScoreContThemaTab.tsx","contents/systab/score/contTabs/tune/ScoreContTuneTab.tsx","contents/systab/score/contTabs/preview/ScoreContPreviewTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/login/LoginFrame.tsx","contents/user/UserPlate.tsx","contents/systab/sampler/SamplerTab.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSignatures","KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","id","groupName","tabElements","map","tab","index","disable","undefined","selectTabIndex","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","SymbolType","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES","SYMBOL_PARAMS_LIST","key","MAJOR","category","TRIAD","MINOR","SUS4","DIM","AUG","MAJ7","TETRAD7TH","SEVENTH","MIN7","MINOR_MAJ7","ADD9","ADD9TH","MINOR_ADD9","SIXTH_9TH","MINOR_MINUS5","MIN7_MINUS5","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","isFlat","DIATONIC_MINOR_SCALE_LIST","getSymbolTypeName","symbolType","TETRAD6TH","SEVENTH_9TH","getSymbolParams","symbol","forEach","data","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","ChangeType","ModulateRelation","TempoRelation","TypeNoteElement","getAdjustSusValue","value","ret","toString","getChordRoot","rootInfo","keyIndex","rootIndex","getSymbolName","sendQueryRequestToAPI","queryType","sql","fetch","API_DOMAIN","mode","method","headers","Accept","body","JSON","stringify","createQueryRequestInit","applyOnChord","molRootIndex","denRootIndex","denInterval","fixedIntervals","fixedStruct","isAdded","intervals","cur","i","length","struct","ActionType","initialState","login","isLogin","dialog","left","top","contents","scoreTabIndex","noteData","scoreName","chordMode","SCALE","dataList","noteState","cuScoreId","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","defaultSustain","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","molecule","denominator","sustain","headAdjust","tailAdjust","backingPaletteState","backingThreads","ensembleInfo","fileURL","audio","Audio","startPosition","volume","cloneRange","cloneDataList","themaDataTree","themaName","sustains","themaState","focusRef","themaCacheList","form","root","src","beat","pattern","def","condition","tgtSymbols","minRootIndex","maxRootIndex","voicing","isCreate","reffers","sampler","Sampler","toDestination","soundUseList","Array","dinamicCache","reducer","state","action","type","payload","SET_LOGIN","SET_DIALOG","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","scale","Fixed","label","labelName","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","SET_DATA_LIST","SET_NOTE_STATE","SET_THEMA_STATE","SET_THEMA_DATA","SET_SAMPLER","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","editorState","useChannels","BACKING_TOGGLE_MATRIX","sideIndex","lenIndex","channelIndex","divIndex","script","layers","table","isUse","DINAMIC_CACHE","getDegreeRoot","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeMolRoot","degreeDenRoot","chordMolRoot","init","chordDenRoot","symbolName","isDiatonic","degreeName","chordName","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Change","prevCache","changeInnerJsx","changeType","MODULATE","relation","modulateRelation","isValuable","DOMINANT","KEY","oldKeyIndex","oldIsMinor","newKeyIndex","newIsMinor","domminantValue","keyAdjust","RELATIVE","PARALLEL","oldKeyName","newKeyName","TEMPO","tempoRelation","oldTempo","newTempo","DIFF","tempoDiff","RATE","tempoRate","ABSOLUTE","tempoAbsolute","BEAT","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","isMajor","rootKey","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","TRANSPLANT","CLONE","isReverse","start","end","getCloneRangeStyle","some","setSelectedList","selectorElementClickAction","setCloneRange","onContextMenu","e","setDinamicCache","INIT_PALETTE","style","clientX","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","addChangeElement","setNoteData","callChordSelector","callBackingEditor","callThemaAccessor","setCriteria","callSectionEditor","callChangeEditor","deleteCurElement","menuList","ChordSelector","canvasRef","canvas","width","height","updatePianoView","ctx","getContext","list","denIndex","fillStyle","fillRect","WIDTH","posX","keyboadList","color","isBlack","HEIGHT","keyboad","strokeRect","save","chordList","symbolList","beatList","operationJsx","isDirect","degS","degF","chdS","chdF","isHalf","isDenominator","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getAdjustOprJsx","offset","cls","callback","scaleMatrixRowJsxList","getScaleMatrixRowJsx","titleLabel","chordInfoList","boxJsxList","info","degreeList","souondList","degreeRoot","soundRoot","BLANK","Adjuster","CurrentBlockDetailBar","curData","innerJsx","chordRoot","baseBlockJsx","buildInfoBlock","chordBlockJsx","String","structList","len","interval","sound","sectionBlockJsx","changeInfo","changeBlockJsx","dataRecordList","jsxList","BackingOperation","paletteState","curSideScript","selectedLenIndex","curLenBean","lens","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","buttonList","button","channelRowSize","onChange","newValue","parseInt","target","diff","layer","record","j","abs","setPaletteState","val","isDisabled","getActiveState","curLayerIndex","lineIndex","back","curCellRange","getCellRange","backLenBean","k","backRange","isOverlapJudge","range1","range2","head","getLenSize","size","NotesMatrix","channelList","matrixLayersJsx","l","linesJsx","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","curLayer","sustainLength","measureInner","measureLength","cnt","isLimit","limitLeft","limitJsx","BackingTable","testPlaySound","channelJsxList","blankAdjust","curIndex","isExist","soundFullName","volumeList","isEditPattern","setLayerIndex","isUsePedal","setUsePedal","styled","div","backgroundColor","padding","margin","textAlign","defaultProps","opacity","_Text","span","fontSize","fontWeight","StructMatrix","isDispVoicing","structTable","sort","a","b","octave","structIndex","overVoicingList","structs","cols","soundName","soundIndex","floor","isNone","channel","isOverVoicing","setUseChannels","BackingContext","createContext","getChannelList","BackingEditor","BACKING_PALETTE","triggerAttack","setTimeout","triggerRelease","operation","isCorrect","play","setCurBackingScript","thema","applyBackingPattern","applyBackingVoicing","Provider","FIXED_BLANK","getAdjustCls","FooterTiming","dataCount","scrollRef","blockJsxList","setBlockJsxList","measureJsxList","setMeasureJsxList","total","setTotal","chordDetail","isCur","isNear","scrollTo","behavior","totalWidth","FooterEnsemble","isPlay","setPlay","update","currentTime","setNoteState","paused","files","objectURL","window","URL","createObjectURL","Number","min","max","pause","NoteFooter","InitEditor","setTempo","setRythm","setKey","setScale","initBean","setInitParam","getItemSelector","optionsJsx","display","item","SectionEditor","setLabelName","section","setSectionParam","SECTION_PALETTE","SettingEditor","SETTING_EDITOR","defsus","sustainJsxList","getItemSelectorJsx","getItemNumberRangeJsx","ChangeEditor","setChangeType","setModulateRelation","setDomminantValue","setKeyAdjust","setTempoRelation","setTempoRate","setTempoDiff","setTempoAbsolute","setBeat","isInputOK","setInputOK","checkInput","itemsJsxList","concat","Object","values","filter","str","change","applyChangeParams","CHANGE_PALETTE","ThemaLoader","itemJsxList","_Item","THEMA_ACCESSOR","_Wrap","_WrapList","_WrapMatrix","SourceDialog","source","setSource","closeDialog","parse","EditModeBorder","PREVIEW","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","totalBeat","totalMsec","lastBar","bar","isModalBlind","curScoreId","console","log","alert","callDialog","ScoreContLiblaryTab","focus","setFocus","message","setMessage","recordList","setRecordList","titleList","setTitleList","isEdit","setEdit","title","setTitle","setChordMode","isLoad","setLoad","reload","initFocus","then","response","json","results","catch","error","chord_mode","createButton","createInfoRecored","isDisplayMsg","selectedRecord","result","data_cnt","createFixedForm","createTextForm","createSelectForm","optionJSXList","createButtonRecord","buttonJSXList","disabled","ThemaTabRoot","getFocusElement","setThemaState","setThemaeData","addChildSustain","ThemaTabSustain","validate","patterns","addChildPattern","ThemaTabVoicing","param","getList","callBackingVoicingEditor","ThemaTabCondition","parent","voicings","addChildVoicing","ThemaTabCategory","v","isNaN","addChildCondition","ThemaTabPattern","getChannel","notes","count","line","cell","getNotes","callBackingPatternEditor","tgtTypes","addChildCategory","ScoreContThemaTab","dataIndexies","treeItemJsxList","setTreeItemJsxList","buildIndex","activeRefList","depth","symbols","indentWidth","ChildCnt","isClose","createTreeItemJsx","ScoreContTuneTab","ScoreContPreviewTab","notesTable","setNotesTable","blocks","setBlocks","barPos","setBarPos","setCurIndex","bpm","setBpm","limit","setLimist","tableRef","intervalRef","measureRef","BlocksRef","BEAT_WIDTH","curPos","block","tabY","note","m","posAdjust","widthAdjust","reverse","blockListJsx","useMemo","_Block","_Sus","_ChordName","boxListJsx","box","right","lineListJsx","notesListJsx","_Notes","_Line","_Box","intervalListJSX","num","_Interval","_Num","_SoundName","_WrapInterval","_WrapTimeLine","_Measure","_BlockLine","_TableWrap","onScroll","scrollLeft","scrollTop","_Table","_Current","_Button","taskList","clearTimeout","thr","clearInterval","releaseAll","preview","progressValue","css","ScoreTab","isScoreEdit","Dispatcher","dispatchBase","setLoginParams","arg","setSampler","sample","loadSampler","apllyFlasah","apllyFlashCur","apllyFlashList","setCloneCriteria","insertCloneData","cloneData","releaseCriteria","releaseCloneCriteria","getInitElement","setEditMode","addNoteElement","side","LEFT","RIGHT","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","backingState","selectedChannelIndex","updateLenIndex","getCurLenIndex","setChannelRowSize","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","use","setCorrect","changeLayerIndex","baseLayers","channelCount","lensSplitCount","baseTable","y","x","isScore","threads","totalTime","pastTime","audioHead","curTime","Date","getTime","limitIndex","next","editor","barMs","boxMs","adjustOverlap","headMs","lenValue","replace","curLenMs","tail","lag","patternDef","patternEl","sustainEl","VoicingDef","themaTree","rootBean","sustainBean","patternBean","categoryBean","conditions","conditionBean","voicingBean","bean","this","LoginTypeSwitch","loginType","curLoginType","setLoginType","resetError","TextForm","stateSetter","strLen","stateValue","isHanEisu","isMask","match","LoginFrame","userName","setUserName","password","setPassword","passConfirm","setPassConfirm","isError","setError","isLoading","setLoading","enterDisable","UserPlate","SamplerTab","setSamples","MainFrame","useReducer","actionType","tabIndex","onKeyDown","selectedData","selectedCache","diatonicChord","baseBacking","KeyboardShortCutAction","App","document","oncontextmenu","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be0413c4.chunk.js","sourcesContent":["import { ChangeType } from \"contents/redux/store\";\r\n\r\nexport const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'Cm', 'C#m', 'Dm', 'D#m', 'Em', 'Fm', 'F#m', 'Gm', 'G#m', 'Am', 'Bbm', 'Bm'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport enum TimeSignatures {\r\n    BEAT_4ON4 = '4/4',\r\n    BEAT_2ON4 = '2/4',\r\n    BEAT_3ON4 = '3/4',\r\n    BEAT_6ON8 = '6/8',\r\n    BEAT_12ON8 = '12/8',\r\n}\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\n\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    'bⅢ', 'bⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    'bⅥ', 'bⅥM7',\r\n    'bⅦ', 'bⅦ7'\r\n]\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n    MIN7_MINUS5,\r\n}\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD6TH,\r\n    ADD9TH,\r\n    SEVENTH_9TH,\r\n    SIXTH_9TH\r\n}\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey;\r\n    category: SymbolType;\r\n    name: string;\r\n    struct: string[];\r\n    intervals: number[];\r\n}\r\n\r\n// export const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n//     { key: SymbolKey.MAJOR, category: SymbolType.TRIAD, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n//     { key: SymbolKey.MINOR, category: SymbolType.TRIAD, sortNo: 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n//     { key: SymbolKey.SUS4, category: SymbolType.TRIAD, sortNo: 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n//     { key: SymbolKey.DIM, category: SymbolType.TRIAD, sortNo: 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n//     { key: SymbolKey.AUG, category: SymbolType.TRIAD, sortNo: 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n//     { key: SymbolKey.MAJ7, category: SymbolType.TETRAD7TH, sortNo: 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n//     { key: SymbolKey.SEVENTH, category: SymbolType.TETRAD7TH, sortNo: 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n//     { key: SymbolKey.MIN7, category: SymbolType.TETRAD7TH, sortNo: 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n//     { key: SymbolKey.MINOR_MAJ7, category: SymbolType.TETRAD7TH, sortNo: 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n//     { key: SymbolKey.ADD9, category: SymbolType.TETRAD9TH, sortNo: 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n//     { key: SymbolKey.MINOR_ADD9, category: SymbolType.TETRAD9TH, sortNo: 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n//     { key: SymbolKey.SIXTH_9TH, category: SymbolType.OTHER, sortNo: 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n//     { key: SymbolKey.MINOR_MINUS5, category: SymbolType.TRIAD, sortNo: 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n// ];\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, category: SymbolType.TRIAD, name: \"\", \"struct\": ['p1', 'M3', 'p5'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, category: SymbolType.TRIAD, name: \"m\", \"struct\": ['p1', 'm3', 'p5'], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, category: SymbolType.TRIAD, name: \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, category: SymbolType.TRIAD, name: \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, category: SymbolType.TRIAD, name: \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, category: SymbolType.TETRAD7TH, name: \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, category: SymbolType.TETRAD7TH, name: \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, category: SymbolType.TETRAD7TH, name: \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, category: SymbolType.TETRAD7TH, name: \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, category: SymbolType.ADD9TH, name: \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, category: SymbolType.ADD9TH, name: \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, category: SymbolType.SIXTH_9TH, name: \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, category: SymbolType.TRIAD, name: \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.MIN7_MINUS5, category: SymbolType.TETRAD7TH, name: \"m7(-5)\", \"struct\": ['p1', 'm3', 'd5', 'm7'], \"intervals\": [0, 3, 6, 10] },\r\n];\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.ADD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n    isFlat: boolean;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR, isFlat: false},\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR, isFlat: false },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR, isFlat: false },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5, isFlat: false },\r\n];\r\n\r\nexport const DIATONIC_MINOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR_MINUS5, isFlat: false },\r\n    { degreeIndex: 3, symbolKey: SymbolKey.MAJOR, isFlat: true },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MINOR, isFlat: false },\r\n    { degreeIndex: 8, symbolKey: SymbolKey.MAJOR, isFlat: true },\r\n    { degreeIndex: 10, symbolKey: SymbolKey.MAJOR, isFlat: true },\r\n];\r\n\r\nexport const getChangeTypeLabel = (changeType: ChangeType) => {\r\n    switch(changeType) {\r\n        case ChangeType.MODULATE: return 'MODULATE';\r\n        case ChangeType.TEMPO: return 'TEMPO';\r\n        case ChangeType.BEAT: return 'BEAT';\r\n    }\r\n}\r\n\r\nexport const API_DOMAIN = 'https://vh-sqlite.glitch.me';\r\n// export const API_DOMAIN = 'http://localhost:5000';","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    // const [tabList, setTabList] = useState<JSX.Element[]>([]);\r\n    // const [contList, setContList] = useState<JSX.Element[]>([]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     const tabList: JSX.Element[] = [];\r\n    //     const contList: JSX.Element[] = [];\r\n    //     props.tabElements.forEach((tab, index) => {\r\n    //         tabList.push(\r\n    //             <TabLabel\r\n    //                 key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n    //                 selectTab={() => selectTabIndex(index)}\r\n    //             />)\r\n    //             ;\r\n    //         contList.push(\r\n    //             <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n    //         );\r\n    //     });\r\n    //     setTabList(tabList);\r\n    //     setContList(contList);\r\n    //     console.log('create TabbedPane');\r\n    // }, [activeNo]);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {/* {tabList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabLabel\r\n                            key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                            selectTab={() => selectTabIndex(index)}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {/* {contList} */}\r\n                {\r\n                    props.tabElements.map((tab, index) => {\r\n                        return <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst TabLabel = (props: {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TabContents = (props: {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}) => {\r\n    // return props.isActive ?\r\n    //     <div className=\"tab-cont\">{props.cont}</div>\r\n    //     :\r\n    //     <></>\r\n    //     ;\r\n    return <div className={[\r\n        'tab-cont',\r\n        !props.isActive ? 'hidden' : ''\r\n    ].join(' ')}>{props.cont}</div>;\r\n}\r\n\r\nexport default TabbedPane;","import { Key12Info } from \"contents/redux/store\";\r\nimport { Sampler } from \"tone\";\r\nimport { API_DOMAIN, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SymbolType, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport const initDefaultSampler = () => {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}\r\n\r\nexport const loadSampler = (sample: Object) => {\r\n    return new Sampler(sample).toDestination();\r\n}\r\n\r\nexport const getSymbolTypeName = (symbolType: SymbolType): string => {\r\n    return ((): string => {\r\n        switch (symbolType) {\r\n            case SymbolType.TRIAD: return 'Triad'\r\n            case SymbolType.TETRAD7TH: return '7th'\r\n            case SymbolType.TETRAD6TH: return '6th'\r\n            case SymbolType.ADD9TH: return 'Add9th'\r\n            case SymbolType.SIXTH_9TH: return '6th-9th'\r\n            case SymbolType.SEVENTH_9TH: return '7th-9th'\r\n        }\r\n    })();\r\n}\r\n\r\nexport const getSymbolsIncludeCategory = (symbolType: SymbolType): SymbolKey[] => {\r\n    return SYMBOL_PARAMS_LIST.filter((symbol)=>{\r\n        return symbolType === symbol.category;\r\n    }).map((symbol) => symbol.key);\r\n}\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n\r\nexport const getAdjustSusValue = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = '+' + value;\r\n        else ret = value.toString();\r\n    }\r\n    return ret;\r\n}\r\n\r\n/**　コードネームを返す */\r\nexport const getChordRoot = (rootInfo: Key12Info | null, keyIndex: number): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n        name = list[(rootInfo.rootIndex + keyIndex) % 12];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　シンボルを返す */\r\nexport const getSymbolName = (symbolKey: SymbolKey): string => {\r\n    let name = '';\r\n    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n        if (symbol.key == symbolKey) {\r\n            name = symbol.name;\r\n        }\r\n    });\r\n    return name;\r\n}\r\n\r\nexport const createQueryRequestInit = (sql: string): RequestInit => {\r\n    return {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ sql })\r\n    }\r\n}\r\n\r\nexport const sendQueryRequestToAPI = (queryType: 'select' | 'update', sql: string): Promise<Response> => {\r\n    return fetch(API_DOMAIN + '/' + queryType,\r\n        createQueryRequestInit(sql)\r\n    );\r\n}\r\n\r\nexport const applyOnChord = (symbol: SymbolParams, molRootIndex: number, denRootIndex: number) => {\r\n\r\n    // 分母とコードルートの差分を算出\r\n    let denInterval = denRootIndex - molRootIndex;\r\n    if (denInterval < 0) {\r\n        denInterval += 12;\r\n    }\r\n    const fixedIntervals: number[] = [];\r\n    const fixedStruct: string[] = [];\r\n    let isAdded = false;\r\n    symbol.intervals.forEach((cur, i) => {\r\n        if (i < symbol.intervals.length) {\r\n            // const next = symbol.intervals[i + 1];\r\n            // if(cur <= denInterval && denInterval < next) {\r\n            if (!isAdded && denInterval < cur) {\r\n                fixedIntervals.push(denInterval);\r\n                fixedStruct.push('den');\r\n                isAdded = true;\r\n            }\r\n            if (denInterval != cur) {\r\n                fixedIntervals.push(cur);\r\n                fixedStruct.push(symbol.struct[i]);\r\n            }\r\n        }\r\n    });\r\n    if (!isAdded) {\r\n        fixedIntervals.push(denInterval);\r\n        fixedStruct.push('den');\r\n    }\r\n    symbol.intervals = fixedIntervals;\r\n    symbol.struct = fixedStruct;\r\n\r\n}","import { SymbolKey, SymbolType, SYMBOL_PARAMS_LIST, TimeSignatures } from 'contents/common/define'\r\nimport { initDefaultSampler } from 'contents/common/utils'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    login: LoginParams;\r\n    dialog: Dialog;\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    themaDataTree: ThemaDataTree;\r\n    themaState: ThemaState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    soundUseList: number[];\r\n    dinamicCache: null | object;\r\n}\r\n\r\nexport type LoginParams = {\r\n    isLogin: boolean,\r\n    id: number,\r\n    name: string\r\n}\r\n\r\nexport type Dialog = {\r\n    left: number;\r\n    top: number;\r\n    arg?: object;\r\n    contents: null | JSX.Element;\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\nexport type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    changePalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE,\r\n    CONTEXT_MENU,\r\n    CHORD_PALETTE,\r\n    SECTION_PALETTE,\r\n    CHANGE_PALETTE,\r\n    INIT_PALETTE,\r\n    BACKING_PALETTE,\r\n    SETTING_EDITOR,\r\n    THEMA_ACCESSOR,\r\n}\r\n\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    // rootIndex: number;\r\n    // isFlat: false;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain, Adjuster\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    target: BackingEditTarget;\r\n    isDispVoicing: boolean;\r\n    isEditPattern: boolean;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    channelRowSize: number;\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type BackingEditTarget = 'note' | 'thema-pattern' | 'thema-voicing';\r\n\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    cuScoreId: number;\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    defaultSustain: number;\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: null | BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n    ensembleInfo: EnsembleInfo;\r\n    cloneRange: number[];\r\n    cloneDataList: NoteElement[];\r\n}\r\n\r\nexport type ThemaState = {\r\n    focusIndex: number;\r\n    focusRef: null | ThemaReffer;\r\n    themaCacheList: ThemaIndexedElement[];\r\n    form: ThemaForm;\r\n    isCreate: boolean;\r\n}\r\n\r\nexport type ThemaForm = {\r\n    root: ThemaFormRoot;\r\n    sustain: ThemaFormSustain;\r\n    pattern: ThemaFormPattern;\r\n    category: ThemaFormCategory;\r\n    condition: ThemaFormCondition;\r\n    voicing: ThemaFormVoicing;\r\n}\r\n\r\nexport interface ThemaFormRoot {\r\n    themaName: string;\r\n    src: string;\r\n}\r\nexport interface ThemaFormSustain {\r\n    beat: null | number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport interface ThemaFormPattern {\r\n    name: string;\r\n    def: null | BackingPattern;\r\n    src: string;\r\n}\r\nexport interface ThemaFormCategory {\r\n    category: null | SymbolType;\r\n}\r\nexport interface ThemaFormCondition {\r\n    tgtSymbols: SymbolKey[];\r\n    minRootIndex: number;\r\n    maxRootIndex: number;\r\n}\r\nexport interface ThemaFormVoicing {\r\n    def: null | BackingVoicing;\r\n    src: string;\r\n}\r\n\r\nexport type ThemaIndexedElement = {\r\n    isClose: boolean;\r\n    ChildCnt: number;\r\n    type: ThemaElementType;\r\n    reffer: ThemaReffer;\r\n    parent: null | ThemaIndexedElement;\r\n}\r\n\r\nexport type ThemaReffer = ThemaDataTree | BTSustain | BTPattern | VoicingTargetType | VoicingTargetCondition | BTVoicing;\r\n\r\nexport type ThemaElementType = 'root' | 'sustain' | 'pattern' | 'category' | 'condition' | 'voicing';\r\n\r\nexport type ThemaDataTree = {\r\n    themaName: string;\r\n    sustains: BTSustain[];\r\n}\r\n\r\nexport type BTSustain = {\r\n    beat: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    patterns: BTPattern[];\r\n}\r\n\r\nexport type BTPattern = {\r\n    name: string;\r\n    def: null | BackingPattern;\r\n    tgtTypes: VoicingTargetType[];\r\n}\r\n\r\nexport type BackingPattern = {\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type VoicingTargetType = {\r\n    symbolType: SymbolType;\r\n    conditions: VoicingTargetCondition[];\r\n}\r\n\r\nexport type VoicingTargetCondition = {\r\n    tgtSymbols: SymbolKey[];\r\n    minRootIndex: number;\r\n    maxRootIndex: number;\r\n    voicings: BTVoicing[];\r\n}\r\n\r\nexport type BTVoicing = {\r\n    def: null | BackingVoicing;\r\n}\r\n\r\nexport type BackingVoicing = {\r\n    useChannels: ChannelParam[];\r\n}\r\n\r\ntype EnsembleInfo = {\r\n    fileURL: string;\r\n    audio: HTMLAudioElement;\r\n    startPosition: number;\r\n    volume: number;\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    TRANSPLANT,\r\n    CLONE,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    labelName: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    molecule: Key12Info | null;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type Key12Info = {\r\n    rootIndex: number;\r\n    isFlat: boolean;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailChange = {\r\n    changeType: null | ChangeType;\r\n    modulateRelation: null | ModulateRelation;\r\n    domminantValue: number;\r\n    keyAdjust: number;\r\n    tempoRelation: null | TempoRelation;\r\n    tempoDiff: number;\r\n    tempoRate: number;\r\n    tempoAbsolute: number;\r\n    beat: null | TimeSignatures;\r\n}\r\n\r\nexport enum ChangeType {\r\n    MODULATE = 'Modulate',\r\n    TEMPO = 'Tempo',\r\n    BEAT = 'Beat'\r\n}\r\n\r\n// export type ChangeModulation = {\r\n//     relation: ModulateRelation;\r\n//     value: number;\r\n// }\r\n\r\nexport enum ModulateRelation {\r\n    DOMINANT = 'Domminant',\r\n    PARALLEL = 'Parallel',\r\n    RELATIVE = 'Relative',\r\n    KEY = 'Key',\r\n}\r\n\r\n// export type ChangeBeat = {\r\n//     value: number;\r\n// }\r\n\r\n// export type ChangeTempo = {\r\n//     relation: TempoRelation;\r\n//     value: number;\r\n// }\r\n\r\nexport enum TempoRelation {\r\n    DIFF = 'Diff',\r\n    RATE = 'Rate',\r\n    ABSOLUTE = 'Absolute'\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailChange | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Change = 'Change',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    login: {\r\n        isLogin: false,\r\n        id: -1,\r\n        name: ''\r\n    },\r\n    dialog: {\r\n        left: 0,\r\n        top: 0,\r\n        contents: null\r\n    },\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', chordMode: CHORD_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        cuScoreId: -1,\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        defaultSustain: 2,\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            molecule: { rootIndex: 0, isFlat: false },\r\n            denominator: null,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4,\r\n            headAdjust: 0,\r\n            tailAdjust: 0\r\n        },\r\n        backingPaletteState: null,\r\n        backingThreads: [],\r\n        ensembleInfo: {\r\n            fileURL: '',\r\n            audio: new Audio(),\r\n            startPosition: 0,\r\n            volume: 3\r\n        },\r\n        cloneRange: [],\r\n        cloneDataList: []\r\n    },\r\n    themaDataTree: {\r\n        themaName: 'thema001',\r\n        sustains: []\r\n    },\r\n    themaState: {\r\n        focusIndex: 0,\r\n        focusRef: null,\r\n        themaCacheList: [],\r\n        form: {\r\n            root: {\r\n                themaName: '',\r\n                src: ''\r\n            },\r\n            sustain: {\r\n                beat: null,\r\n                headAdjust: 0,\r\n                tailAdjust: 0\r\n            },\r\n            pattern: {\r\n                name: '',\r\n                def: null,\r\n                src: ''\r\n            },\r\n            category: {\r\n                category: SymbolType.TRIAD\r\n            },\r\n            condition: {\r\n                tgtSymbols: [],\r\n                minRootIndex: 0,\r\n                maxRootIndex: 11\r\n            },\r\n            voicing: {\r\n                def: null,\r\n                src: ''\r\n            }\r\n        },\r\n        isCreate: false\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initDefaultSampler(),\r\n    soundUseList: new Array(88),\r\n    dinamicCache: null\r\n};","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache, BackingEditorState } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_LOGIN,\r\n    SET_DIALOG,\r\n    SELECT_SCORETAB,\r\n    ADD_SECTION,\r\n    SET_DEGREE_INDEX,\r\n    SET_SYMBOL_KEY,\r\n    DETAIL_PARAMS_SETTER,\r\n    GET_ELEMENT_REFFER,\r\n    INIT_DEFAULT_ELEMENTS,\r\n    SELECT_NOTE_ELEMENT,\r\n    GET_REFFER,\r\n    GET_REFFER_CONTEXT,\r\n    GET_REFFER_CHORD_PALETTE,\r\n    GET_REFFER_SECTION_PALETTE,\r\n    GET_REFFER_BACKING_PALETTE,\r\n    FLOATWND_STATE,\r\n    CHORD_PALETTE_SETTER,\r\n    SET_NOTE_DATA,\r\n    SET_DATA_LIST,\r\n    SET_NOTE_STATE,\r\n    SET_THEMA_DATA,\r\n    SET_THEMA_STATE,\r\n    SET_SAMPLER,\r\n    INIT_BACKING_PALETTE,\r\n    SET_USE_CHANNELS,\r\n    BACKING_TOGGLE_MATRIX,\r\n    DINAMIC_CACHE\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_LOGIN:\r\n            return { ...state, login: payload.login };\r\n        case ActionType.SET_DIALOG:\r\n            return { ...state, dialog: payload.dialog };\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            if (detail.molecule == null) {\r\n                detail.molecule = { rootIndex: payload.degreeIndex, isFlat: false };\r\n            } else {\r\n                detail.molecule.rootIndex = payload.degreeIndex;\r\n            }\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 80,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                labelName: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.SET_THEMA_STATE: {\r\n            return {\r\n                ...state, themaState: payload.themaState\r\n            };\r\n        }\r\n        case ActionType.SET_THEMA_DATA: {\r\n            return {\r\n                ...state, themaDataTree: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_SAMPLER: {\r\n            return {\r\n                ...state, sampler: payload.sampler\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const editorState = state.noteState.backingPaletteState as BackingEditorState;\r\n            // const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            // const script: BackingLayer[] = new Array(2);\r\n            // for (let i = 0; i < 2; i++) {\r\n            //     const channelCount = backingPaletteState.useChannels.length;\r\n            //     const lensSplitCount = baseScript[i].lens.length;\r\n            //     const baseTable = baseScript[i].table;\r\n            //     const table: boolean[][][] = new Array(channelCount);\r\n\r\n            //     for (let y = 0; y < channelCount; y++) {\r\n            //         if (y < baseTable.length) {\r\n            //             table[y] = baseTable[y];\r\n            //         } else {\r\n            //             table[y] = new Array(lensSplitCount);\r\n            //             for (let x = 0; x < lensSplitCount; x++) {\r\n            //                 table[y][x] = new Array(1);\r\n            //                 table[y][x][0] = false;\r\n            //             }\r\n            //         }\r\n            //     }\r\n            //     script[i] = {\r\n            //         ...baseScript[i],\r\n            //         table,\r\n            //     };\r\n            // }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...editorState,\r\n                        useChannels,\r\n                        // layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const editorState = state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = editorState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...editorState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DINAMIC_CACHE: {\r\n            return {\r\n                ...state, dinamicCache: payload.dinamicCache\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, DIATONIC_MINOR_SCALE_LIST, DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES, getChangeTypeLabel, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getChordRoot, getSymbolName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailChange, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress, Key12Info, ChangeType, ModulateRelation, TempoRelation } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Scale: </span>\r\n                        <span>{detail.scale}</span>\r\n                    </div>\r\n                );\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Key: </span>\r\n                        {/* <span>{detail.key}</span> */}\r\n                        <span>{\r\n                            detail.scale == SCALE_LIST[0] ?\r\n                                KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                        }</span>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            const degreeMolRoot = getDegreeRoot(detail.molecule);\r\n            const degreeDenRoot = getDegreeRoot(detail.denominator);\r\n            const chordMolRoot = getChordRoot(detail.molecule, cache.init.keyIndex);\r\n            const chordDenRoot = getChordRoot(detail.denominator, cache.init.keyIndex);\r\n            let symbolName = '';\r\n            let isDiatonic = false;\r\n            let degreeName = 'blank';\r\n            let chordName = '-';\r\n            if (degreeMolRoot != null) {\r\n                symbolName = getSymbolName(detail.symbolKey);\r\n                const diatonitChordList = cache.init.scale == 'major' ? DIATONIC_MAJOR_SCALE_DEGREE_NAMES : DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES;\r\n                isDiatonic = diatonitChordList.includes(degreeMolRoot + symbolName);\r\n                degreeName = `${degreeMolRoot}${symbolName}${degreeDenRoot == null ? '' : '/' + degreeDenRoot}`;\r\n                chordName = `${chordMolRoot}${symbolName}${chordDenRoot == null ? '' : '/' + chordDenRoot}`;\r\n            }\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.molecule == null ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        // ダイレクトモード時は非表示\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}\r\n                    >\r\n                        <span>{degreeName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.labelName}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Change: {\r\n            const detail = props.noteElement.detail as DetailChange;\r\n            const prevCache = state.noteState.cacheList[props.index - 1];\r\n            let changeInnerJsx = <></>;\r\n            switch (detail.changeType) {\r\n                case null: {\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>No setting</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>***</span>]\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.MODULATE: {\r\n                    const relation = detail.modulateRelation === null ? 'None' : detail.modulateRelation.toString();\r\n                    const isValuable = detail.modulateRelation === ModulateRelation.DOMINANT || detail.modulateRelation === ModulateRelation.KEY;\r\n                    let value = 0;\r\n                    const oldKeyIndex = prevCache.init.keyIndex;\r\n                    const oldIsMinor = prevCache.init.scale == 'minor';\r\n                    const newKeyIndex = cache.init.keyIndex;\r\n                    const newIsMinor = cache.init.scale == 'minor';\r\n                    switch (detail.modulateRelation) {\r\n                        case ModulateRelation.DOMINANT: {\r\n                            value = detail.domminantValue;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.KEY: {\r\n                            value = detail.keyAdjust;\r\n                        }\r\n                            break;\r\n                        case ModulateRelation.RELATIVE: { } break;\r\n                        case ModulateRelation.PARALLEL: { } break;\r\n                    }\r\n                    const oldKeyName = (!oldIsMinor ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST)[oldKeyIndex];\r\n                    const newKeyName = (!newIsMinor ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST)[newKeyIndex];\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>{relation + (isValuable ? ': ' : '')}</span>\r\n                                {isValuable ? (<span>{value}</span>) : <></>}\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>{oldKeyName} → {newKeyName}</span>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.TEMPO: {\r\n                    const relation = detail.tempoRelation === null ? 'None' : detail.tempoRelation.toString();\r\n                    let value = 0;\r\n                    const oldTempo = prevCache.init.tempo;\r\n                    const newTempo = cache.init.tempo;\r\n                    switch (detail.tempoRelation) {\r\n                        case TempoRelation.DIFF: {\r\n                            value = detail.tempoDiff;\r\n                        }\r\n                            break;\r\n                        case TempoRelation.RATE: {\r\n                            value = detail.tempoRate;\r\n                        }\r\n                            break;\r\n                        case TempoRelation.ABSOLUTE: {\r\n                            value = detail.tempoAbsolute;\r\n                        }\r\n                            break;\r\n                    }\r\n                    changeInnerJsx = (\r\n                        <>\r\n                            <div className=\"value\">\r\n                                <span>{relation + ': '}</span>\r\n                                <span>{value}</span>\r\n                            </div>\r\n                            <div className=\"result\">\r\n                                <span>{`${oldTempo} → ${newTempo}`}</span>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n                case ChangeType.BEAT: {\r\n                    changeInnerJsx = (\r\n                        <>\r\n                        </>\r\n                    );\r\n                }\r\n                    break;\r\n            }\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n            }\r\n            return (\r\n                <>\r\n                    <div className=\"change-type\">\r\n                        {/* <span>{detail.changeType === null ? '' : getChangeTypeLabel(detail.changeType)}</span> */}\r\n                        <span>{detail.changeType === null ? 'Change' : detail.changeType.toString()}</span>\r\n                    </div>\r\n                    {changeInnerJsx}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**　ディグリーネームを返す */\r\nconst getDegreeRoot = (rootInfo: Key12Info | null): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        name = list[rootInfo.rootIndex];\r\n    }\r\n    return name;\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailChange, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport CurrentElementInfo from '../sideDetail/CurrentElementInfo';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Change: return 'detail-change';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.TRANSPLANT) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.molecule != null;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getCloneRangeStyle = (): string => {\r\n        if (editMode != EditMode.CLONE) return '';\r\n\r\n        if (![TypeNoteElement.Fixed, TypeNoteElement.Init].includes(type)) {\r\n            const cloneRange = state.noteState.cloneRange;\r\n            const isReverse = cloneRange[0] > cloneRange[1];\r\n            const start = cloneRange[isReverse ? 1 : 0];\r\n            const end = cloneRange[isReverse ? 0 : 1];\r\n            if (props.index >= start && props.index <= end) {\r\n                return 'copy-selected';\r\n            } else {\r\n                return 'copy-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n                const isMajor = cache.init.scale == 'major';\r\n                const scaleList = isMajor ? KEY12_MAJOR_SCALE_LIST : KEY12_MINOR_SCALE_LIST;\r\n                const rootKey = scaleList[cache.init.keyIndex];\r\n                // スケールモード時のみ調性を表示\r\n                if (chordMode === CHORD_MODE.SCALE) {\r\n                    retJsxList.push(\r\n                        <div key={retJsxList.length}\r\n                            className={[\r\n                                'scale',\r\n                                isMajor ? 'maj' : 'min'\r\n                            ].join(' ')}>\r\n                            <span>[{rootKey}]</span>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord,\r\n                            TypeNoteElement.Change,\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle(),\r\n                        getCloneRangeStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else if (editMode == EditMode.TRANSPLANT) {\r\n                            selectorElementClickAction();\r\n                        } else if (editMode == EditMode.CLONE) {\r\n                            dispatcher.score.setCloneRange(props.index);\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init: {\r\n                                    dispatcher.setDinamicCache(props.noteElement.detail);\r\n                                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                case TypeNoteElement.Change:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { SYMBOL_PARAMS_LIST, SYMBOL_TYPE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { ChordPaletteState, DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.CONTEXT_MENU) {\r\n    //     return (<></>);\r\n    // }\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        molecule: { rootIndex: 0, isFlat: false },\r\n                        denominator: null,\r\n                        symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                        sustain: state.noteState.defaultSustain,\r\n                    } as ChordPaletteState\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT CHANGE', keyName: 'F', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChangeElement();\r\n                close();\r\n            }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'SET BLANK', keyName: 'D', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        const noteData = state.noteData;\r\n                        const detail = noteData.dataList[state.noteState.focusIndex].detail as DetailChord;\r\n                        detail.molecule = null;\r\n                        detail.denominator = null;\r\n                        dispatcher.score.setNoteData(noteData);\r\n                        // dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callChordSelector();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'THEMA', keyName: 'T', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callThemaAccessor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'COPY BACKING', keyName: 'X', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.setCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callSectionEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Change: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHANGE', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callChangeEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.deleteCurElement();\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: 'call' | 'order';\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { getSymbolName, getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE, ChordPaletteState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordSelector.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n    useEffect(() => {\r\n        // if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n        const canvas: any = canvasRef.current;\r\n        canvas.width = 590;\r\n        canvas.height = 66;\r\n        // }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n            updatePianoView(\r\n                editorState.molecule.rootIndex,\r\n                editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                editorState.symbolKey\r\n            );\r\n        }\r\n    }, [editorState, state.noteState.floatwndState]);\r\n\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.CHORD_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n    const updatePianoView = (molRootIndex: number, denRootIndex: number, symbolKey: SymbolKey) => {\r\n        const ctx = (canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        const keyIndex = (cache.init.keyIndex + molRootIndex) % 12;\r\n        const intervalList = (getSymbolParams(symbolKey) as SymbolParams).intervals;\r\n        const list = intervalList.map((value) => keyIndex + value);\r\n        let denIndex = -1;\r\n        if (denRootIndex != -1) {\r\n            denIndex = cache.init.keyIndex + denRootIndex;\r\n        }\r\n        ctx.fillStyle = '#008';\r\n        ctx.fillRect(0, 0, 594, 70);\r\n        const WIDTH = 34;\r\n        const HEIGHT = 60;\r\n        const BLACK_RATE_W = 0.5;\r\n        const BLACK_RATE_H = 0.6;\r\n        const MARGIN_W = 1;\r\n        const START_ADJUST = 1;\r\n        let posX = 0;\r\n        const keyboadList: {\r\n            posX: number;\r\n            fillStyle: string;\r\n            width: number;\r\n            height: number;\r\n            isBlack: boolean;\r\n        }[] = [];\r\n        for (let i = 0; i < 27; i++) {\r\n            let color = '#eee';\r\n            let width = WIDTH;\r\n            let height = HEIGHT;\r\n            const isBlack = [1, 3, 6, 8, 10].includes(i % 12);\r\n            if (isBlack) {\r\n                color = '#111';\r\n                width = WIDTH * BLACK_RATE_W;\r\n                height = HEIGHT * BLACK_RATE_H;\r\n            }\r\n            if (list.includes(i)) {\r\n                color = '#fa0';\r\n            }\r\n            if (denIndex == i) {\r\n                color = '#ff0000';\r\n            }\r\n            keyboadList.push({ posX: 15 + posX, fillStyle: color, width, height, isBlack });\r\n\r\n            switch (i % 12) {\r\n                case 0: case 2: case 5: case 7: case 9:\r\n                    //次が黒鍵\r\n                    posX += WIDTH - WIDTH * BLACK_RATE_W / 2;\r\n                    break;\r\n                case 1: case 3: case 6: case 8: case 10:\r\n                    //黒鍵\r\n                    posX += WIDTH * BLACK_RATE_W / 2 + MARGIN_W;\r\n                    break;\r\n                default:\r\n                    //次が白鍵\r\n                    posX += WIDTH + MARGIN_W;\r\n            }\r\n        }\r\n        keyboadList.forEach((keyboad) => {\r\n            if (!keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        keyboadList.forEach((keyboad) => {\r\n            if (keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n                ctx.fillStyle = '#f00';\r\n                ctx.strokeRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        ctx.save();\r\n    }\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operationJsx: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = cache.init.keyIndex;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.molecule.rootIndex == i;\r\n            const isDenominator = (editorState.denominator == null ? -1 : editorState.denominator.rootIndex) == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={[\r\n                                isSelected ? 'active' : '',\r\n                                isDenominator ? 'denominator' : ''\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                const denominator = !isDenominator ? editorState.denominator : null;\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     i,\r\n                                //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                if (isSelected) return;\r\n                                const denominator = (!isDenominator ? { rootIndex: i, isFlat: false } : null);\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     editorState.molecule.rootIndex,\r\n                                //     i,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && !editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && !editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && !editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: false } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: true }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: true } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                        // updatePianoView(\r\n                        //     editorState.molecule.rootIndex,\r\n                        //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                        //     symbol.key\r\n                        // );\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operationJsx = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    const getAdjustOprJsx = (type: 'h' | 't', offset: number): JSX.Element => {\r\n        let [label, cls, isActive, callback] = type == 'h' ?\r\n            ['h', 'head', editorState.headAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, headAdjust: offset\r\n                    }\r\n                })] :\r\n            ['t', 'tail', editorState.tailAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, tailAdjust: offset\r\n                    }\r\n                })];\r\n        if (offset >= 0) {\r\n            label += (offset > 0 ? '+' : '±');\r\n        }\r\n        return (\r\n            <div\r\n                className={[\r\n                    cls,\r\n                    isActive ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label + offset}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const scaleMatrixRowJsxList: JSX.Element[] = [];\r\n    const getScaleMatrixRowJsx = (\r\n        titleLabel: JSX.Element,\r\n        chordInfoList: {\r\n            rootIndex: number,\r\n            isFlat: boolean,\r\n            symbolKey: SymbolKey\r\n        }[]\r\n    ): JSX.Element => {\r\n        const boxJsxList: JSX.Element[] = [];\r\n        chordInfoList.forEach((info, i) => {\r\n            if (info.rootIndex === -1) {\r\n                boxJsxList.push(\r\n                    <div key={i} className=\"box blank\" />\r\n                );\r\n            } else {\r\n                const degreeList = info.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n                const souondList = info.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n                const degreeRoot = degreeList[info.rootIndex];\r\n                const soundRoot = souondList[info.rootIndex];\r\n                const symbol = getSymbolParams(info.symbolKey) as SymbolParams;\r\n                const isSelected = (\r\n                    info.rootIndex === editorState.molecule.rootIndex &&\r\n                    info.isFlat === editorState.molecule.isFlat &&\r\n                    info.symbolKey === editorState.symbolKey\r\n                );\r\n                boxJsxList.push(\r\n                    <div\r\n                        key={i}\r\n                        className={[\r\n                            'box',\r\n                            isSelected ? 'active' : ''\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            if (!isSelected) {\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        molecule: { rootIndex: info.rootIndex, isFlat: info.isFlat },\r\n                                        symbolKey: info.symbolKey\r\n                                    } as ChordPaletteState\r\n                                });\r\n                            }\r\n                        }}>\r\n                        <div className=\"degree\">\r\n                            {degreeRoot}{symbol.name}\r\n                        </div>\r\n                        <div className=\"chord\">\r\n                            {soundRoot}{symbol.name}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n        return (\r\n            <div key={scaleMatrixRowJsxList.length} className=\"scale-row\">\r\n                <div className=\"header\">\r\n                    <span>{titleLabel}</span>\r\n                </div>\r\n                {boxJsxList}\r\n            </div>\r\n        );\r\n    }\r\n    const BLANK = { rootIndex: -1, isFlat: false, symbolKey: {} as SymbolKey };\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Diatonic<br />Triad</>,\r\n            [\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 2, isFlat: false, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 5, isFlat: false, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 7, isFlat: false, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 11, isFlat: false, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n            ]\r\n        )\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Diatonic<br />Tetrad</>,\r\n            [\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.MAJ7 },\r\n                { rootIndex: 2, isFlat: false, symbolKey: SymbolKey.MIN7 },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.MIN7 },\r\n                { rootIndex: 5, isFlat: false, symbolKey: SymbolKey.MAJ7 },\r\n                { rootIndex: 7, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.MIN7 },\r\n                { rootIndex: 11, isFlat: false, symbolKey: SymbolKey.MIN7_MINUS5 },\r\n            ]\r\n        )\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Sus4</>,\r\n            [\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.SUS4 },\r\n                BLANK,\r\n                BLANK,\r\n                BLANK,\r\n                { rootIndex: 7, isFlat: false, symbolKey: SymbolKey.SUS4 },\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.SUS4 },\r\n                BLANK,\r\n            ]\r\n        ),\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Parallel</>,\r\n            [\r\n                { rootIndex: 0, isFlat: true, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 2, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 3, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 5, isFlat: true, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 7, isFlat: true, symbolKey: SymbolKey.MINOR },\r\n                { rootIndex: 8, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n                { rootIndex: 10, isFlat: true, symbolKey: SymbolKey.MAJOR },\r\n            ]\r\n        ),\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Secondary<br />Dominant</>,\r\n            [\r\n                BLANK,\r\n                { rootIndex: 9, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 11, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 0, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 2, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.SEVENTH },\r\n                BLANK,\r\n            ]\r\n        ),\r\n    );\r\n    scaleMatrixRowJsxList.push(\r\n        getScaleMatrixRowJsx(\r\n            <>Secondary<br />Non Root</>,\r\n            [\r\n                BLANK,\r\n                { rootIndex: 1, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 3, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 4, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 6, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                { rootIndex: 8, isFlat: false, symbolKey: SymbolKey.DIM },\r\n                BLANK\r\n            ]\r\n        ),\r\n    );\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                                <div className={'scale-matrix'}>\r\n                                    {scaleMatrixRowJsxList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Direct', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'piano-view'}>\r\n                <canvas ref={canvasRef} />\r\n            </div>\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className={'adjuster' + (editorState.selectedLine == ChordPaletteLine.Adjuster ? ' active' : '')}>\r\n                {getAdjustOprJsx('h', -0.5)}\r\n                {getAdjustOprJsx('h', -0.25)}\r\n                {getAdjustOprJsx('h', 0)}\r\n                {getAdjustOprJsx('h', 0.25)}\r\n                {getAdjustOprJsx('h', 0.5)}\r\n                {getAdjustOprJsx('t', -0.5)}\r\n                {getAdjustOprJsx('t', -0.25)}\r\n                {getAdjustOprJsx('t', 0)}\r\n                {getAdjustOprJsx('t', 0.25)}\r\n                {getAdjustOprJsx('t', 0.5)}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operationJsx}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChordSelector;","import { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SCALE_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getAdjustSusValue, getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, DetailSection, TypeNoteElement, DetailChange} from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentBlockDetailBar.css';\r\n\r\nconst CurrentBlockDetailBar = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const curData = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let innerJsx: JSX.Element = <></>;\r\n    switch (curData.type) {\r\n        // コードブロック選択時\r\n        case TypeNoteElement.Chord: {\r\n            const detail = curData.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.molecule != null) {\r\n                const rootIndex = detail.molecule.rootIndex;\r\n                const degreeRoot = DEGREE12_SHARP_LIST[rootIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[rootIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.molecule != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const baseBlockJsx = buildInfoBlock('Base', [\r\n                { labelName: 'Tempo', value: '' + cache.init.tempo, disable: false },\r\n                { labelName: 'Beat', value: cache.init.rythm, disable: false },\r\n                { labelName: 'Key', value: KEY12_SHARP_LIST[cache.init.keyIndex], disable: false },\r\n                { labelName: 'Scale', value: cache.init.scale, disable: false },\r\n            ]);\r\n\r\n            const chordBlockJsx = buildInfoBlock('Chord', [\r\n                { labelName: 'Root', value: root, disable: root == '-' },\r\n                { labelName: 'Symbol', value: symbolName, disable: symbolName == '-' },\r\n                { labelName: 'On chord', value: '-', disable: true },\r\n                { labelName: 'Sustain', value: String(detail.sustain), disable: false },\r\n                { labelName: 'Adjsut-H', value: getAdjustSusValue(detail.headAdjust), disable: detail.headAdjust == 0 },\r\n                { labelName: 'Adjsut-T', value: getAdjustSusValue(detail.tailAdjust), disable: detail.tailAdjust == 0 },\r\n            ]);\r\n\r\n            innerJsx = (\r\n                <div\r\n                    className={\r\n                        'block'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {baseBlockJsx}\r\n                        {chordBlockJsx}\r\n                        {(() => {\r\n\r\n                            if (detail.molecule != null) {\r\n                                const structList: JSX.Element[] = [];\r\n                                const symbol = getSymbolParams(detail.symbolKey);\r\n                                const list = symbol?.intervals;\r\n                                const len = list?.length as number;\r\n                                for (let i = 0; i < 7; i++) {\r\n                                    if (i < len) {\r\n                                        const interval = symbol?.intervals[i] as number;\r\n                                        const struct = symbol?.struct[i];\r\n                                        const sound = KEY12_SHARP_LIST[(detail.molecule.rootIndex + interval) % 12];\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record\">\r\n                                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                                <div className=\"sound\"><span>{sound}</span></div>\r\n                                            </div>\r\n                                        );\r\n                                    } else {\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record disable\">\r\n                                                <div className=\"interval\"></div>\r\n                                                <div className=\"struct\"></div>\r\n                                                <div className=\"sound\"></div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return (<>\r\n                                    <div className=\"title\">\r\n                                        <span>Struct</span>\r\n                                    </div>\r\n                                    <div className=\"symbol-struct\">\r\n                                        {structList}\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<></>);\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        // セクションブロック選択時\r\n        case TypeNoteElement.Section: {\r\n            const detail = curData.detail as DetailSection;\r\n\r\n            const sectionBlockJsx = buildInfoBlock('Section', [\r\n                { labelName: 'label', value: detail.labelName, disable: false },\r\n                { labelName: 'box count', value: '-', disable: true },\r\n                { labelName: 'total bar', value: '-', disable: true },\r\n                { labelName: 'total time', value: '-', disable: true }\r\n            ]);\r\n            innerJsx = (\r\n                <div\r\n                    className={\r\n                        'block'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {sectionBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n\r\n        // チェンジブロック選択時\r\n        case TypeNoteElement.Change: {\r\n            const detail = curData.detail as DetailChange;\r\n            let changeInfo = ['-','-','-','-','-','-','-','-','-'];\r\n\r\n            if(detail.changeType != null){\r\n                changeInfo[0] = String(detail.changeType);\r\n            }\r\n\r\n            if(detail.modulateRelation != null){\r\n                changeInfo[1] = String(detail.modulateRelation);\r\n            }\r\n\r\n            if(detail.domminantValue != 0){\r\n                changeInfo[2] = String(detail.domminantValue);\r\n            }\r\n\r\n            if(detail.keyAdjust != 0){\r\n                changeInfo[3] = String(detail.keyAdjust);\r\n            }\r\n            \r\n            if(detail.tempoRelation != null){\r\n                changeInfo[4] = String(detail.tempoRelation);\r\n            }\r\n\r\n            if(detail.tempoDiff != 0){\r\n                changeInfo[5] = String(detail.tempoDiff);\r\n            }\r\n\r\n            if(detail.tempoRate != 0){\r\n                changeInfo[6] = String(detail.tempoRate);\r\n            }\r\n\r\n            if(detail.tempoAbsolute != 0){\r\n                changeInfo[7] = String(detail.tempoAbsolute);\r\n            }\r\n\r\n            if(detail.beat != null){\r\n                changeInfo[8] = String(detail.beat);\r\n            }\r\n\r\n            const changeBlockJsx = buildInfoBlock('Change', [\r\n                { labelName: 'type', value: changeInfo[0], disable: changeInfo[0] == '-' },\r\n                { labelName: 'modulate', value: changeInfo[1], disable: changeInfo[1] == '-' },\r\n                { labelName: 'domm', value: changeInfo[2], disable: changeInfo[2] == '-' },\r\n                { labelName: 'key', value: changeInfo[3], disable: changeInfo[3] == '-' },\r\n                { labelName: 'tempo', value: changeInfo[4], disable: changeInfo[4] == '-' },\r\n                { labelName: 'diff', value: changeInfo[5], disable: changeInfo[5] == '-' },\r\n                { labelName: 'rate', value: changeInfo[6], disable: changeInfo[6] == '-' },\r\n                { labelName: 'absolute', value: changeInfo[7], disable: changeInfo[7] == '-' },\r\n                { labelName: 'beat', value: changeInfo[8], disable: changeInfo[8] == '-' },\r\n            ]);\r\n            innerJsx = (\r\n                <div\r\n                    className={\r\n                        'block'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {changeBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {innerJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentBlockDetailBar;\r\n\r\n/**\r\n * 情報レコードのプロパティ\r\n */\r\ntype DataRecord = {\r\n    /** 表示タイトル */\r\n    labelName: string;\r\n    /** 値 */\r\n    value: string;\r\n    /** 非活性にするかどうか（true: 非活性） */\r\n    disable: boolean;\r\n}\r\n\r\n/**\r\n * タイトルと情報レコードを持つブロックのJSXを生成します。\r\n *\r\n * @param {string} titleLabel ブロックのタイトル\r\n * @param {DataRecord[]} dataRecordList データレコード要素のリスト\r\n * @return {*}  {JSX.Element} 生成するJSX\r\n */\r\nconst buildInfoBlock = (titleLabel: string, dataRecordList: DataRecord[]): JSX.Element => {\r\n    const jsxList: JSX.Element[] = [];\r\n    dataRecordList.forEach((state, i) => {\r\n        jsxList.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (state.disable ? ' disable' : '')\r\n                }>\r\n                <div className=\"title\"><span>{state.labelName}:</span></div>\r\n                <div className=\"value\"><span>{state.value}</span></div>\r\n            </div>\r\n        );\r\n    });\r\n    return (<>\r\n        <div className=\"title\">\r\n            <span>{titleLabel}</span>\r\n        </div>\r\n        <div className=\"current-state\">\r\n            {jsxList}\r\n        </div>\r\n    </>);\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps = {\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        // {\r\n        //     label: 'all clear',\r\n        //     isActive: false,\r\n        //     isDisable: false,\r\n        //     callback: () => {\r\n        //         const backingState: BackingEditorState = {\r\n        //             useChannels: [],\r\n        //             isUsePedal: false,\r\n        //             sideIndex: 0,\r\n        //             selectedLenIndex: 0,\r\n        //             selectedChannelIndex: -1,\r\n        //             layers: [\r\n        //                 {\r\n        //                     lens: [{\r\n        //                         len: BACKING_LEN_TYPE.LEN4,\r\n        //                         isDiv3: false,\r\n        //                         isHalf: false\r\n        //                     }],\r\n        //                     side: BACKING_SIDE.LEFT,\r\n        //                     table: [],\r\n        //                     vels: [5]\r\n        //                 },\r\n        //                 {\r\n        //                     lens: [{\r\n        //                         len: BACKING_LEN_TYPE.LEN4,\r\n        //                         isDiv3: false,\r\n        //                         isHalf: false\r\n        //                     }],\r\n        //                     side: BACKING_SIDE.RIGHT,\r\n        //                     table: [],\r\n        //                     vels: [5]\r\n        //                 }\r\n        //             ],\r\n        //             isCorrect: true\r\n        //         };\r\n        //         dispatcher.initBackingPalette(backingState);\r\n        //     }\r\n        // }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>\r\n        <select\r\n            value={paletteState.channelRowSize}\r\n            onChange={(e) => {\r\n                const backing = props.paletteState;\r\n                const newValue = parseInt(e.target.value);\r\n                const diff = newValue - backing.channelRowSize;\r\n                const layers = backing.layers;\r\n                if (diff > 0) {\r\n                    layers.forEach((layer) => {\r\n                        for (let i = 0; i < diff; i++) {\r\n                            const record: boolean[][] = [];\r\n                            for (let j = 0; j < layer.lens.length; j++) {\r\n                                record.push([false]);\r\n                            }\r\n                            layer.table.splice(backing.channelRowSize, 0, record);\r\n                        }\r\n                    });\r\n                } else if (diff < 0) {\r\n                    layers.forEach((layer) => {\r\n                        layer.table.splice(newValue, Math.abs(diff));\r\n                    });\r\n                }\r\n                backing.channelRowSize = newValue;\r\n                dispatcher.backing.setPaletteState(props.paletteState);\r\n            }}>\r\n            {(() => {\r\n                const list: JSX.Element[] = [];\r\n                for (let i = 0; i < 12; i++) {\r\n                    const val = i + 1;\r\n                    const isDisabled = val < paletteState.channelRowSize;\r\n                    list.push(\r\n                        <option\r\n                            key={i}\r\n                            value={val}\r\n                            className={isDisabled ? 'del' : ''}\r\n                        >\r\n                            {val}\r\n                        </option>\r\n                    );\r\n                }\r\n                return list;\r\n            })()}\r\n        </select>\r\n        {buttonList}\r\n    </>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    // const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = paletteState.channelRowSize - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    // setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingEditorState, BackingLayer, BACKING_LEN_TYPE, DetailChord } from \"contents/redux/store\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    paletteState: BackingEditorState;\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curLayer = props.layer;\r\n    const paletteState = props.paletteState;\r\n    const sustainLength = (paletteState.sustain + paletteState.headAdjust + paletteState.tailAdjust) * 4;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 0;\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    // コードブロックの拍の方が長い場合は上書き\r\n    const isLimit = measureLength > sustainLength;\r\n    measureLength = (!isLimit ? sustainLength : measureLength);\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const pos = i + (paletteState.headAdjust * 4);\r\n        const getLen = () => {\r\n            if (pos % 2 == 0) {\r\n                if (pos % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLimit = false;//i == sustainLength;\r\n        measureInner.push(<div key={i} className={getLen() + (isLimit ? ' limit' : '')} />);\r\n    }\r\n\r\n    const limitLeft = sustainLength * 31;\r\n    const limitJsx = !isLimit ?\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: '5px'\r\n        }} className=\"safe\"></div>)\r\n        :\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: `${(measureLength - sustainLength) * 31}px`\r\n        }} className=\"over\"></div>);\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n            {limitJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam, DetailChord } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curLayer = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    // チャンネル数に対してボイシングが足りなければ、その数（高音）だけ空白を設定する\r\n    const blankAdjust = paletteState.channelRowSize - channelList.length;\r\n    for (let i = 0; i < paletteState.channelRowSize; i++) {\r\n        // ブランクの数だけボイシングから取得するインデックスを調整する\r\n        const curIndex = i - blankAdjust;\r\n        // チャンネルに音が設定済みかどうか\r\n        const isExist = curIndex >= 0;\r\n        let soundFullName = '-';\r\n        if (isExist) {\r\n            soundFullName = channelList[curIndex].soundFullName;\r\n        }\r\n        channelJsxList.push(\r\n            <div key={i}>\r\n                <div\r\n                    className={[\r\n                        'channel',\r\n                        !isExist ? 'blank' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (isExist) {\r\n                            testPlaySound(soundFullName)\r\n                        }\r\n                    }}\r\n                >\r\n                    <span>{soundFullName}</span>\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'opr',\r\n                        props.paletteState.channelRowSize == 1 ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        const backing = props.paletteState;\r\n                        const layers = backing.layers;\r\n                        const index = backing.channelRowSize - (i + 1);\r\n                        layers.forEach((layer) => {\r\n                            layer.table.splice(index, 1);\r\n                        });\r\n                        backing.channelRowSize = backing.channelRowSize - 1;\r\n                        dispatcher.backing.setPaletteState(props.paletteState);\r\n                    }}\r\n                >\r\n                    <span>-</span>\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'opr',\r\n                        props.paletteState.channelRowSize == 12 ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        const backing = props.paletteState;\r\n                        const layers = backing.layers;\r\n                        const index = backing.channelRowSize - (i + 1);\r\n                        layers.forEach((layer) => {\r\n                            const record: boolean[][] = [];\r\n                            for (let j = 0; j < layer.lens.length; j++) {\r\n                                record.push([false]);\r\n                            }\r\n                            layer.table.splice(index, 0, record);\r\n                        });\r\n                        backing.channelRowSize = backing.channelRowSize + 1;\r\n                        dispatcher.backing.setPaletteState(props.paletteState);\r\n                    }}\r\n                >\r\n                    <span>+</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curLayer.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={[\r\n            'backing-table',\r\n            paletteState.isEditPattern ? '' : 'disable'\r\n        ].join(' ')}>\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>R-Layer</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>L-Layer</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    paletteState={paletteState}\r\n                    layer={curLayer}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import styled from \"styled-components\";\r\n\r\n\r\nexport const _Record = styled.div<{\r\n    backgroundColor?: string,\r\n    textAlign?: string,\r\n    padding?: string,\r\n    margin?: string,\r\n}>`\r\n    display: inline-block;\r\n    background-color: ${(props) => props.backgroundColor};\r\n    width: 100%;\r\n    padding: ${(props) => props.padding};\r\n    margin: ${(props) => props.margin};\r\n    text-align: ${(props) => props.textAlign};\r\n    box-sizing: border-box;\r\n`;\r\n_Record.defaultProps = {\r\n    backgroundColor: 'inherit',\r\n    textAlign: 'inherit',\r\n    padding: '0',\r\n    margin: '0'\r\n}\r\n\r\nexport const _Hide = styled.div`\r\n    opacity: ${(props: { opacity: number }) => props.opacity}\r\n`;\r\n\r\nexport const _Text = styled.span<{\r\n    fontSize?: string,\r\n    color?: string,\r\n    fontWeight?: string\r\n}>`\r\n    font-size: ${(props)=> props.fontSize};\r\n    color: ${(props)=> props.color};\r\n    font-weight: ${(props)=> props.fontWeight};\r\n`;\r\n_Text.defaultProps = {\r\n    fontSize: 'inherit',\r\n    color: 'inherit',\r\n    fontWeight: 'inherit'\r\n}","import { SymbolParams } from \"contents/common/define\";\r\nimport { _Text } from \"contents/common/Styles\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\nexport const StructMatrix = (props: {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}) => {\r\n    if(!props.paletteState.isDispVoicing) {\r\n        return <></>;\r\n    }\r\n    const useChannels = props.paletteState.useChannels;\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    \r\n    // 音程の降順にソート\r\n    useChannels.sort((a, b) => {\r\n        return (a.octave * 12 + a.structIndex) - (b.octave * 12 + b.structIndex);\r\n    });\r\n    const overVoicingList = useChannels.slice(props.paletteState.channelRowSize);\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.structs.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const hasDom = props.structs.length - props.symbol.intervals.length == 1;\r\n            const index = hasDom ? i - 1 : i;\r\n            const interval = index == -1 ? -1 : props.symbol.intervals[index];\r\n            const relation = index == -1 ? 'dom' : props.symbol.struct[index];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: <_Text color=\"#000\">{soundName}</_Text></span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + interval + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = soundName + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                // const isLimit = props.paletteState.useChannels.length >= props.paletteState.channelRowSize && !isSelected;\r\n                const isLimit = useChannels.length >= 12 && !isSelected;\r\n\r\n                // if(isSelected) {\r\n                //     useChannels.forEach((channel, k) =>{\r\n                //         if (channel.octave == j && channel.structIndex == i) {\r\n\r\n                //         }\r\n                //     });\r\n                // }\r\n                let isOverVoicing = false;\r\n                overVoicingList.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isOverVoicing = true;\r\n                    }\r\n                });\r\n\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={[\r\n                            'col',\r\n                            (isNone || isLimit ? 'disable' : ''),\r\n                            (isSelected ? 'active' : ''),\r\n                            (isOverVoicing ? 'over' : '')\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { applyOnChord, getChordRoot, getSymbolParams, getSymbolTypeName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam, Key12Info } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\ntype BackingContextType = {\r\n    // isCorrect: boolean;\r\n    // setCorrect: (isCorrect: boolean) => void;\r\n    editorState: BackingEditorState;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [isCorrect, setCorrect] = useState(true);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     dispatcher.backing.setCorrect(isCorrect);\r\n    // }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState as BackingEditorState;\r\n\r\n    // const foocusIndex = state.noteState.focusIndex;\r\n    // const detail = state.noteData.dataList[foocusIndex].detail as DetailChord;\r\n    // const cache = state.noteState.cacheList[foocusIndex];\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    // let rootIndex = (detail.molecule as Key12Info).rootIndex;\r\n    // const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n\r\n    const molecule = paletteState.molecule as Key12Info;\r\n    const denominator = paletteState.denominator;\r\n    const symbol: SymbolParams = { ...(getSymbolParams(paletteState.symbolKey) as SymbolParams) };\r\n    const sustain = paletteState.sustain;\r\n    const headAdjust = paletteState.headAdjust;\r\n    const tailAdjust = paletteState.tailAdjust;\r\n\r\n    const root = KEY12_SHARP_LIST[molecule.rootIndex];\r\n    let chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    //オンコードの追加\r\n    if (denominator != null) {\r\n\r\n        // コードネームの修正\r\n        chordName += `/${getChordRoot(denominator, 0)}`;\r\n\r\n        // オンコードをシンボル情報に反映する\r\n        applyOnChord(symbol, molecule.rootIndex, denominator.rootIndex);\r\n    }\r\n    symbol.intervals.forEach((value) => {\r\n        // structs.push(KEY12_SHARP_LIST[(cache.init.keyIndex + rootIndex + value) % 12]);\r\n        structs.push(KEY12_SHARP_LIST[(molecule.rootIndex + value) % 12]);\r\n    });\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, molecule.rootIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.play(false);\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                switch (paletteState.target) {\r\n                    case 'note': {\r\n                        dispatcher.backing.setCurBackingScript();\r\n                    }\r\n                        break;\r\n                    case 'thema-pattern': {\r\n                        dispatcher.thema.applyBackingPattern();\r\n                    }\r\n                        break;\r\n                    case 'thema-voicing': {\r\n                        dispatcher.thema.applyBackingVoicing();\r\n                    }\r\n                        break;\r\n                }\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            editorState: paletteState\r\n            // isCorrect: isCorrect,\r\n            // setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                // id=\"backing-palette\"\r\n                className={[\r\n                    'backing-palette',\r\n                    'floatwnd',\r\n                    state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : ''\r\n                ].join(' ')}\r\n                // className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                // className=\"floatwnd\"\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className={[\r\n                        'record',\r\n                        paletteState.isDispVoicing ? '' : 'hidden'\r\n                    ].join(' ')}>\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className={[\r\n                        'record',\r\n                        paletteState.isDispVoicing ? '' : 'hidden'\r\n                    ].join(' ')}>\r\n                        <div className=\"title\"><span>Category:</span></div>\r\n                        <div className=\"value\"><span>{getSymbolTypeName(symbol.category)}</span></div>\r\n                    </div>\r\n                    <div className={[\r\n                        'record',\r\n                        paletteState.isDispVoicing ? '' : 'hidden'\r\n                    ].join(' ')}>\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{sustain + headAdjust + tailAdjust}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={molecule.rootIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\nimport './FooterTiming.css';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from 'styled-components';\r\n\r\nconst MEM_WIDTH = 16;\r\nconst FIXED_BLANK = 100;\r\n\r\nconst StyleTest = styled.div`\r\n    font-size: 0;\r\n    display: inline-inline-block;\r\n`;\r\n\r\n\r\n\r\nconst FooterTiming: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n    const [measureJsxList, setMeasureJsxList] = useState([] as JSX.Element[]);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const chordDetail = dataList[focusIndex].type == TypeNoteElement.Chord ?\r\n        (dataList[focusIndex].detail as DetailChord) : null;\r\n    const sustain = chordDetail == null ? 0 : chordDetail.sustain;\r\n    const headAdjust = chordDetail == null ? 0 : chordDetail.headAdjust;\r\n    const tailAdjust = chordDetail == null ? 0 : chordDetail.tailAdjust;\r\n    useEffect(() => {\r\n        let total = 0;\r\n        const blockJsxList: JSX.Element[] = [];\r\n        const measureJsxList: JSX.Element[] = [];\r\n        const dataList = state.noteData.dataList;\r\n\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                        ].join(' ')}\r\n                        style={{ width: `${FIXED_BLANK}px` }}\r\n                    />\r\n                )\r\n            }\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                const detail = data.detail as DetailChord;\r\n                const len = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                const width = len * MEM_WIDTH * 4;\r\n                const isCur = focusIndex == i;\r\n                const isNear = focusIndex == i - 1 || focusIndex == i + 1;\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                            isCur ? 'active' : '',\r\n                            isNear ? 'near' : '',\r\n                        ].join(' ')}\r\n                        style={{ width: `${width - 1}px` }}\r\n                    >\r\n                        <div className=\"sus\">\r\n                            <span>{detail.sustain}</span>\r\n                        </div>\r\n                        <div className=\"adjust\">\r\n                            <span className={getAdjustCls(detail.headAdjust)}>\r\n                                {getAdjustSusValue(detail.headAdjust)}\r\n                            </span>\r\n                            <span className={getAdjustCls(detail.tailAdjust)}>\r\n                                {getAdjustSusValue(detail.tailAdjust)}\r\n                            </span>\r\n                        </div>\r\n                    </div >\r\n                );\r\n                if (isCur) {\r\n                    scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n                }\r\n                total += len * 4;\r\n            }\r\n        });\r\n\r\n        // measureJsxList.push(\r\n        //     <div key={measureJsxList.length} className=\"blank\" style={{ left: `${0}px` }} />\r\n        // )\r\n        for (let i = 0; i < total; i++) {\r\n            let name = '';\r\n            const isBar = i % 16 == 0;\r\n            /** 小節数 */\r\n            const barCount = 1 + (i / 16);\r\n            if (isBar) {\r\n                name = 'mem-bar';\r\n            } else {\r\n                switch (i % 4) {\r\n                    case 0: name = 'mem4'; break;\r\n                    case 2: name = 'mem8'; break;\r\n                    default: name = 'mem16'; break;\r\n                }\r\n            }\r\n            measureJsxList.push(\r\n                <div key={measureJsxList.length} className={name} style={{ left: `${FIXED_BLANK + i * MEM_WIDTH}px` }}>{\r\n                    i % 16 == 0 ?\r\n                        <div className=\"bar\" style={{ left: `${-14}px`, top: '24px' }}>{barCount}</div>\r\n                        :\r\n                        <></>\r\n                }</div>\r\n            );\r\n        }\r\n        // alert(measureJsxList.length);\r\n        setBlockJsxList(blockJsxList);\r\n        setMeasureJsxList(measureJsxList);\r\n        setTotal(total);\r\n    }, [dataCount, focusIndex, sustain, headAdjust, tailAdjust]);\r\n\r\n    if (chordDetail == null) {\r\n        return (<></>);\r\n    }\r\n\r\n    const totalWidth = FIXED_BLANK * 2 + total * MEM_WIDTH;\r\n    return (\r\n        <div id=\"footer-timing\" className=\"footer-child\">\r\n            <div className=\"scroll\" ref={scrollRef}>\r\n                <div className=\"blocks\" style={{ width: `${totalWidth}px` }}>\r\n                    {blockJsxList}\r\n                </div>\r\n                <div className=\"measure\" style={{ width: `${totalWidth}px` }}>\r\n                    {measureJsxList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getAdjustCls = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = 'aug';\r\n        else ret = 'dim';\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport default FooterTiming;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\n// import './FooterEnsemble.css';\r\n\r\nconst FooterEnsemble: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isPlay, setPlay] = useState<boolean>(false);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n    const info = state.noteState.ensembleInfo;\r\n\r\n    const update = () => {\r\n        info.audio.currentTime = info.startPosition * 0.001;\r\n        info.audio.volume = info.volume * 0.01;\r\n        dispatcher.score.setNoteState({\r\n            ...state.noteState, ensembleInfo: info\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPlay(!info.audio.paused);\r\n    }, [info.audio.paused]);\r\n\r\n    // const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n\r\n    return (\r\n        <div id=\"footer-ensemble\" className=\"footer-child\">\r\n            <div className=\"record data\">\r\n                <input type=\"text\" value={info.fileURL} onChange={(e) => {\r\n                    info.fileURL = e.target.value;\r\n                    info.audio.src = info.fileURL;\r\n                    info.audio.currentTime = info.startPosition * 0.001;\r\n                    update();\r\n                }} />\r\n                <input type=\"file\" onChange={(e) => {\r\n                    if (e.target.files != null && e.target.files[0] != null) {\r\n                        const objectURL = window.URL.createObjectURL(e.target.files[0]);\r\n                        info.audio.src = objectURL;\r\n                        info.fileURL = objectURL;\r\n                        update();\r\n                    }\r\n                }} />\r\n            </div>\r\n            <div className=\"record adjust\">\r\n                <input type=\"text\" value={info.startPosition} onChange={(e) => {\r\n                    info.startPosition = Number(e.target.value);\r\n                    update();\r\n                }} />\r\n                <input type=\"range\" min={1} max={100} value={info.volume} onChange={(e) => {\r\n                    info.volume = Number(e.target.value);\r\n                    update();\r\n                }} />\r\n            </div>\r\n            <div className=\"record\">\r\n                <button\r\n                    className={[\r\n                        isPlay ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio.play();\r\n                        setPlay(true);\r\n                    }}>Play</button>\r\n                <button\r\n                    className={[\r\n                        !isPlay ? 'disable' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio.pause();\r\n                        setPlay(false);\r\n                    }}>Stop</button>\r\n                <button\r\n                    className={[\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        info.audio.currentTime = info.startPosition * 0.001;\r\n                    }}>Reset</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FooterEnsemble;","\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport FooterTiming from './timing/FooterTiming';\r\nimport './NoteFooter.css';\r\nimport FooterEnsemble from './ensemble/FooterEnsemble';\r\n\r\nconst NoteFooter = () => {\r\n\r\n    return (\r\n        <div id=\"score-footer\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Progress', disable: false, cont: <FooterTiming /> },\r\n                    { name: 'Target', disable: true, cont: <div></div> },\r\n                    { name: 'Ensemble', disable: false, cont: <FooterEnsemble /> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteFooter;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, DetailInit, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(state.noteState.floatwndState === FloatWndState.INIT_PALETTE) {\r\n            const initBean = state.dinamicCache as DetailInit;\r\n            setTempo(initBean.tempo);\r\n            setRythm(initBean.rythm);\r\n            setKey(initBean.keyIndex);\r\n            setScale(initBean.scale);\r\n        }\r\n    }, [state.noteState.floatwndState]);\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.INIT_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                dispatcher.setDinamicCache(null);\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n                dispatcher.setDinamicCache(null);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    {/* <span>{tempo}</span> */}\r\n                    <input\r\n                        type=\"number\" value={tempo} min=\"30\" max=\"180\"\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                    <input\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './SectionEditor.css';\r\n\r\nconst SectionEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.SECTION_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.section.setSectionParam(labelName);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const getTextForm = (label: string, value: string, callback: (value: string) => void): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"section-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.SECTION_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getTextForm('Name', labelName, (value: string) => { setLabelName(value) })}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionEditor;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './SettingEditor.css';\r\n\r\nconst SettingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    if (state.noteState.floatwndState != FloatWndState.SETTING_EDITOR) {\r\n        return (<></>);\r\n    }\r\n    const defsus = state.noteState.defaultSustain;\r\n    const sustainJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        sustainJsxList.push(\r\n            <div\r\n                key={sustainJsxList.length}\r\n                className={[\r\n                    i + 1 <= defsus ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={()=>{\r\n                    dispatcher.score.setNoteState({...state.noteState, defaultSustain: i + 1});\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <div id=\"setting-editor\"\r\n            className=\"floatwnd active\">\r\n            <div className=\"sustain\">{sustainJsxList}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingEditor;\r\n","\r\nimport { RYTHM_LIST, TimeSignatures } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { ChangeType, CHORD_MODE, FloatWndState, ModulateRelation, TempoRelation } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './ChangeEditor.css';\r\n\r\nconst ChangeEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        // dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [changeType, setChangeType] = useState<string>('');\r\n    const [modulateRelation, setModulateRelation] = useState<string>('');\r\n    const [domminantValue, setDomminantValue] = useState<'' | number>('');\r\n    const [keyAdjust, setKeyAdjust] = useState<'' | number>('');\r\n    const [tempoRelation, setTempoRelation] = useState<string>('');\r\n    const [tempoRate, setTempoRate] = useState<'' | number>('');\r\n    const [tempoDiff, setTempoDiff] = useState<'' | number>('');\r\n    const [tempoAbsolute, setTempoAbsolute] = useState<'' | number>('');\r\n    const [beat, setBeat] = useState<string>('');\r\n\r\n    const [isInputOK, setInputOK] = useState<boolean>(false);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n\r\n    const checkInput = () => {\r\n        setInputOK(false);\r\n        switch (changeType) {\r\n            case ChangeType.MODULATE: {\r\n                switch (modulateRelation) {\r\n                    case ModulateRelation.DOMINANT: {\r\n                        if (domminantValue !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.KEY: {\r\n                        if (keyAdjust !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.RELATIVE: {\r\n                        setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case ModulateRelation.PARALLEL: {\r\n                        setInputOK(true);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case ChangeType.TEMPO: {\r\n                switch (tempoRelation) {\r\n                    case TempoRelation.DIFF: {\r\n                        if (tempoDiff !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case TempoRelation.RATE: {\r\n                        if (tempoRate !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                    case TempoRelation.ABSOLUTE: {\r\n                        if (tempoAbsolute !== '') setInputOK(true);\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n                break;\r\n            case ChangeType.BEAT: {\r\n                if (beat !== '') setInputOK(true);\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkInput();\r\n    }, [changeType, modulateRelation, domminantValue, keyAdjust,\r\n        tempoRelation, tempoDiff, tempoRate, tempoAbsolute, beat\r\n    ]);\r\n\r\n\r\n    // if (state.noteState.floatwndState != FloatWndState.CHANGE_PALETTE) {\r\n    //     return (<></>);\r\n    // }\r\n    const directModeFilter = (type: ChangeType) => !(chordMode === CHORD_MODE.DIRECT && type === ChangeType.MODULATE);\r\n    let itemsJsxList: JSX.Element[] = [];\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Change Type', changeType,\r\n            (value: string) => {\r\n                setChangeType(value);\r\n                if (value !== ChangeType.MODULATE) {\r\n                    setModulateRelation('');\r\n                    setDomminantValue('');\r\n                    setKeyAdjust('');\r\n                }\r\n                if (value !== ChangeType.TEMPO) {\r\n                    setTempoRelation('');\r\n                    setTempoRate('');\r\n                    setTempoDiff('');\r\n                    setTempoAbsolute('');\r\n                }\r\n                if (value !== ChangeType.BEAT) {\r\n                    setBeat('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(ChangeType).filter(directModeFilter).map((item) => {\r\n                    return { value: item.toString(), display: item.toString() };\r\n                })\r\n            ),\r\n            false\r\n        )\r\n    );\r\n\r\n    // スケールモード時のみ追加\r\n    if (chordMode === CHORD_MODE.SCALE) {\r\n        itemsJsxList.push(\r\n            getItemSelectorJsx(itemsJsxList.length, 'Modulate Relation', modulateRelation,\r\n                (value: string) => {\r\n                    setModulateRelation(value);\r\n\r\n                    if (value !== ModulateRelation.KEY) {\r\n                        setKeyAdjust('');\r\n                    }\r\n                    if (value !== ModulateRelation.DOMINANT) {\r\n                        setDomminantValue('');\r\n                    }\r\n                },\r\n                // 先頭に空白を挿入\r\n                [{ value: '', display: '' }].concat(\r\n                    Object.values(ModulateRelation).map((item) => {\r\n                        const str = item.toString();\r\n                        return { value: str, display: str };\r\n                    })\r\n                ),\r\n                changeType !== ChangeType.MODULATE.toString()\r\n            )\r\n        );\r\n        itemsJsxList.push(\r\n            getItemNumberRangeJsx(itemsJsxList.length, 'Domminant Value', domminantValue, -3, 3,\r\n                (value: string) => {\r\n                    setDomminantValue(value as '' | number);\r\n                },\r\n                modulateRelation !== ModulateRelation.DOMINANT.toString()\r\n            )\r\n        );\r\n        itemsJsxList.push(\r\n            getItemNumberRangeJsx(itemsJsxList.length, 'Key Adjust', keyAdjust, -3, 3,\r\n                (value: string) => {\r\n                    setKeyAdjust(value as '' | number);\r\n                },\r\n                modulateRelation !== ModulateRelation.KEY.toString()\r\n            )\r\n        );\r\n    }\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Tempo Relation', tempoRelation,\r\n            (value: string) => {\r\n                setTempoRelation(value);\r\n\r\n                if (value !== TempoRelation.RATE) {\r\n                    setTempoRate('');\r\n                }\r\n                if (value !== TempoRelation.DIFF) {\r\n                    setTempoDiff('');\r\n                }\r\n                if (value !== TempoRelation.ABSOLUTE) {\r\n                    setTempoAbsolute('');\r\n                }\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(TempoRelation).map((item) => {\r\n                    const str = item.toString();\r\n                    return { value: str, display: str };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.TEMPO.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Diff', tempoDiff, -150, 150,\r\n            (value: string) => {\r\n                setTempoDiff(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.DIFF.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Rate', tempoRate, 20, 200,\r\n            (value: string) => {\r\n                setTempoRate(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.RATE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemNumberRangeJsx(itemsJsxList.length, 'Tempo Absolute', tempoAbsolute, 30, 180,\r\n            (value: string) => {\r\n                setTempoAbsolute(value as '' | number);\r\n            },\r\n            tempoRelation !== TempoRelation.ABSOLUTE.toString()\r\n        )\r\n    );\r\n    itemsJsxList.push(\r\n        getItemSelectorJsx(itemsJsxList.length, 'Beat', beat,\r\n            (value: string) => {\r\n                setBeat(value);\r\n            },\r\n            // 先頭に空白を挿入\r\n            [{ value: '', display: '' }].concat(\r\n                Object.values(TimeSignatures).map((item) => {\r\n                    const key = item.toString();\r\n                    return { value: key, display: key };\r\n                })\r\n            ),\r\n            changeType !== ChangeType.BEAT.toString()\r\n        )\r\n    );\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                isInputOK ? '' : 'disable'\r\n            ].join('')}\r\n            onClick={() => {\r\n                dispatcher.change.applyChangeParams(\r\n                    changeType as ChangeType,\r\n                    modulateRelation === '' ? null : modulateRelation as ModulateRelation,\r\n                    domminantValue === '' ? 0 : domminantValue as number,\r\n                    keyAdjust === '' ? 0 : keyAdjust as number,\r\n                    tempoRelation === '' ? null : tempoRelation as TempoRelation,\r\n                    tempoDiff === '' ? 0 : tempoDiff as number,\r\n                    tempoRate === '' ? 0 : tempoRate as number,\r\n                    tempoAbsolute === '' ? 0 : tempoAbsolute as number,\r\n                    beat === '' ? null : beat as TimeSignatures\r\n                );\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"change-editor\"\r\n            className={[\r\n                'floatwnd',\r\n                state.noteState.floatwndState == FloatWndState.CHANGE_PALETTE ? ' active' : ''\r\n            ].join(' ')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {itemsJsxList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getItemSelectorJsx = (key: number, label: string, value: string,\r\n    callback: (value: string) => void,\r\n    list: { value: string, display: string }[], isDisable: boolean\r\n): JSX.Element => {\r\n    const optionsJsx: JSX.Element[] = [];\r\n    list.forEach((data) => {\r\n        optionsJsx.push(\r\n            <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n        );\r\n    });\r\n    return (\r\n        <div\r\n            key={key}\r\n            className={[\r\n                'record',\r\n                isDisable ? 'disable' : ''\r\n            ].join(' ')}\r\n        >\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"value\">\r\n                <select\r\n                    className={\r\n                        !isDisable && value === '' ? 'error' : ''\r\n                    }\r\n                    value={value}\r\n                    onChange={(e) => {\r\n                        callback(e.target.value);\r\n                    }}\r\n                >\r\n                    {optionsJsx}\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getItemNumberRangeJsx = (key: number, label: string, value: '' | number,\r\n    min: number, max: number, callback: (value: string) => void, isDisable: boolean\r\n): JSX.Element => {\r\n    return (\r\n        <div\r\n            key={key}\r\n            className={[\r\n                'record',\r\n                isDisable ? 'disable' : ''\r\n            ].join(' ')}\r\n        >\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"value\">\r\n                <input type=\"number\"\r\n                    className={\r\n                        !isDisable && (value === '' || !(value >= min && value <= max)) ? 'error' : ''\r\n                    }\r\n                    value={value} min={min} max={max}\r\n                    onChange={(e) => {\r\n                        callback(e.target.value);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangeEditor;","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport './ThemaLoader.css';\r\n\r\nconst ThemaLoader = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    // const ref = useRef({} as HTMLDivElement);\r\n    // useEffect(() => {\r\n    //     dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    // }, []);\r\n\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const itemJsxList: JSX.Element[] = [];\r\n    const list: string[] = ['barrade01', 'barrade02', 'barrade03', 'pops01', 'fill-in01'];\r\n    list.forEach((item, i) => {\r\n        itemJsxList.push(\r\n            <_Item key={i}>{item}</_Item>\r\n        );\r\n    });\r\n    return (\r\n\r\n        <div\r\n            id=\"thema-accessor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.THEMA_ACCESSOR ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <_Wrap>\r\n                <_WrapList>\r\n                    {itemJsxList}\r\n                </_WrapList>\r\n                <_WrapMatrix>\r\n\r\n                </_WrapMatrix>\r\n            </_Wrap>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaLoader;\r\n\r\n\r\nconst _Wrap = styled.div`\r\n    display: inline-block;\r\n    height: 250px;\r\n`;\r\n\r\nconst _WrapList = styled.div`\r\n    display: inline-block;\r\n    width: 280px;\r\n    height: 100%;\r\n    background-color: #000000;\r\n    vertical-align: top;\r\n    overflow-y: auto;\r\n`;\r\nconst _Item = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: #272727;\r\n    overflow-x: hidden;\r\n    border: solid 1px #b4b4b4;\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: #ffffff;\r\n    line-height: 25px;\r\n    padding-left: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst _WrapMatrix = styled.div`\r\n    display: inline-block;\r\n    width: 280px;\r\n    height: 100%;\r\n    background-color: #868686;\r\n    vertical-align: top;\r\n    overflow-y: auto;\r\n`;\r\n","import { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { useContext, useState } from 'react';\r\nimport './SourceDialog.css';\r\n\r\nconst SourceDialog = (props: { target: 'score' | 'backing' }) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [source, setSource] = useState<string>(JSON.stringify(state.noteData));\r\n    return (\r\n\r\n        <div className=\"source-dialog\">\r\n            <textarea value={source} onChange={(e) => {\r\n                setSource(e.target.value);\r\n            }}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.closeDialog();\r\n                }}\r\n            >\r\n                Cancel\r\n            </button>\r\n            <button\r\n                onClick={() => {\r\n                    switch(props.target) {\r\n                        case 'score': {\r\n                            dispatcher.score.setNoteData(JSON.parse(source));\r\n                        }\r\n                        break;\r\n                        case 'backing': {\r\n                            dispatcher.score.setNoteData(JSON.parse(source));\r\n                        }\r\n                        break;\r\n                    }\r\n                    dispatcher.closeDialog();\r\n                }}\r\n            >\r\n                Aplly\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SourceDialog;","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress, DetailChange, ChangeType, ModulateRelation, TempoRelation } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentBlockDetailBar from './sideDetail/CurrentBlockDetailBar';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport NoteFooter from './footer/NoteFooter';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\nimport SectionEditor from './floatwnd/section/SectionEditor';\r\nimport SettingEditor from './floatwnd/setting/SettingEditor';\r\nimport ChangeEditor from './floatwnd/change/ChangeEditor';\r\nimport ThemaLoader from './floatwnd/thema/ThemaLoader';\r\nimport SourceDialog from 'contents/systab/dialog/SourceDialog';\r\nimport { sendQueryRequestToAPI } from 'contents/common/utils';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                const sustain = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                totalBeat += sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * sustain;\r\n                no++;\r\n            } else if (data.type == TypeNoteElement.Change) {\r\n                const detail = data.detail as DetailChange;\r\n                switch (detail.changeType) {\r\n                    case ChangeType.MODULATE: {\r\n                        let newKeyIndex = cache.init.keyIndex;\r\n                        let newIsMinor = cache.init.scale == 'minor';\r\n                        switch (detail.modulateRelation) {\r\n                            case ModulateRelation.DOMINANT: {\r\n                                newKeyIndex = (24 + newKeyIndex + detail.domminantValue * 7) % 12;\r\n                            }\r\n                                break;\r\n                            case ModulateRelation.KEY: {\r\n                                const keyAdjust = Number(detail.keyAdjust);\r\n                                newKeyIndex = (12 + newKeyIndex + keyAdjust) % 12;\r\n                            }\r\n                                break;\r\n                            case ModulateRelation.RELATIVE: {\r\n                                if (!newIsMinor) {\r\n                                    newKeyIndex = (12 + newKeyIndex - 3) % 12;\r\n                                } else {\r\n                                    newKeyIndex = (12 + newKeyIndex + 3) % 12;\r\n                                }\r\n                                newIsMinor = !newIsMinor;\r\n                            }\r\n                                break;\r\n                            case ModulateRelation.PARALLEL: {\r\n                                newIsMinor = !newIsMinor;\r\n                            }\r\n                                break;\r\n                        }\r\n\r\n                        cache.init.keyIndex = newKeyIndex;\r\n                        cache.init.scale = newIsMinor ? 'minor' : 'major';\r\n                    }\r\n                        break;\r\n                    case ChangeType.TEMPO: {\r\n                        let newTempo: number = cache.init.tempo;\r\n                        switch (detail.tempoRelation) {\r\n                            case TempoRelation.DIFF: {\r\n                                newTempo += Number(detail.tempoDiff);\r\n                            }\r\n                                break;\r\n                            case TempoRelation.RATE: {\r\n                                newTempo = Math.floor(newTempo * detail.tempoRate / 100);\r\n                            }\r\n                                break;\r\n                            case TempoRelation.ABSOLUTE: {\r\n                                newTempo = detail.tempoAbsolute;\r\n                            }\r\n                                break;\r\n                        }\r\n                        cache.init.tempo = newTempo;\r\n                    }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            cacheList[i] = { ...cacheList[i], init: { ...cache.init }, progress };\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).labelName} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList, state.noteData.dataList.length]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={[\r\n                            [EditMode.TRANSPLANT, EditMode.CLONE].includes(editMode) ? 'mode-selector' : '',\r\n                            [EditMode.PREVIEW].includes(editMode) ? 'mode-preview' : ''\r\n                        ].join(' ')}\r\n                    >\r\n                        {/* <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                        }}><span>BACK</span></button> */}\r\n                        <button className=\"\" onClick={() => {\r\n                            (async () => {\r\n                                const curScoreId = state.noteState.cuScoreId;\r\n                                console.log('----start----');\r\n                                const values: string[] = [];\r\n                                    state.noteData.dataList.forEach((data, i) => {\r\n                                        values.push(`(${curScoreId}, ${i}, '${JSON.stringify(data)}')`);\r\n                                    });\r\n                                    await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${curScoreId}`);\r\n                                    await sendQueryRequestToAPI('update', `insert into data_tbl values${values.join(',')}`);\r\n                                console.log('----end----');\r\n                                alert('The data was saved successfully!');\r\n                            })();\r\n                        }}><span>SAVE</span></button>\r\n                        <button className=\"disable\"><span>RELOAD</span></button>\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatcher.callDialog(50, 50, <SourceDialog target=\"score\" />);\r\n                        }}><span>SOURCE</span></button>\r\n                        <button className=\"\" onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SETTING_EDITOR })\r\n                        }}> <span>SETTING</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={[\r\n                            [EditMode.TRANSPLANT, EditMode.CLONE].includes(editMode) ? 'mode-selector' : '',\r\n                            [EditMode.PREVIEW].includes(editMode) ? 'mode-preview' : ''\r\n                        ].join(' ')}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={[\r\n                            [EditMode.TRANSPLANT, EditMode.CLONE].includes(editMode) ? 'mode-selector' : '',\r\n                            [EditMode.PREVIEW].includes(editMode) ? 'mode-preview' : ''\r\n                        ].join(' ')}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <SectionEditor />\r\n                    <ChangeEditor />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                    <SettingEditor />\r\n                    <ThemaLoader />\r\n                </div>\r\n                <NoteFooter />\r\n\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentBlockDetailBar />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.TRANSPLANT ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>TRANSPLANT</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.CLONE ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, NoteData, NoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { API_DOMAIN } from 'contents/common/define';\r\nimport { createQueryRequestInit, sendQueryRequestToAPI } from 'contents/common/utils';\r\n\r\ntype Record = { id: number, title: string, chord_mode: CHORD_MODE, data_cnt: number };\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [focus, setFocus] = useState<number>(-1);\r\n    const [message, setMessage] = useState<string>('');\r\n    const [recordList, setRecordList] = useState<Record[]>([]);\r\n    const [titleList, setTitleList] = useState<JSX.Element[]>([]);\r\n    const [isEdit, setEdit] = useState<boolean>(false);\r\n    const [title, setTitle] = useState<string>('');\r\n    const [chordMode, setChordMode] = useState<CHORD_MODE | ''>('');\r\n    const [isLoad, setLoad] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        console.log('create ScoreContLiblaryTab');\r\n    }, []);\r\n\r\n    // 非同期で表示データを更新。\r\n    const reload = (initFocus: number) => {\r\n        // setFocus(initFocus);\r\n        setLoad(true);\r\n        setMessage('Now roading scores...');\r\n        sendQueryRequestToAPI('select', `SELECT s.*, (select count(*) from data_tbl where score = s.id) as data_cnt FROM sclibtbl s where user = ${state.login.id}`)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(results => {\r\n                console.log(`[${state.login.id}]score count: ` + results.length);\r\n                const isExist = results.length > 0;\r\n                if (isExist) {\r\n                    setRecordList(results);\r\n                    setMessage('');\r\n                } else {\r\n                    setMessage('There is no musical score you manage yet.');\r\n                }\r\n                setLoad(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error + \"失敗しました\");\r\n                setLoad(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const list: JSX.Element[] = [];\r\n        recordList.forEach((record, i) => {\r\n            list.push(\r\n                <div\r\n                    key={i}\r\n                    className={[\r\n                        'record',\r\n                        focus == i ? 'focus' : ''\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        setFocus(i);\r\n                    }}\r\n                >\r\n                    <span>{record.id}:</span>\r\n                    <span className=\"title\">{record.title}</span>\r\n                    <span>[</span>\r\n                    <span className=\"mode\">{record.chord_mode}</span>\r\n                    <span>]</span>\r\n                </div>\r\n            );\r\n        });\r\n        setTitleList(list);\r\n    }, [recordList, focus]);\r\n\r\n    useEffect(() => {\r\n        if (!isEdit) {\r\n            reload(-1);\r\n        }\r\n\r\n    }, [isEdit]);\r\n\r\n    const createButton = (label: string, isDisable: boolean, callback: () => void, isActive: boolean = false): JSX.Element => {\r\n        return (\r\n            <button className={[\r\n                isDisable ? 'disable' : '',\r\n                isActive ? 'active' : ''\r\n            ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label}</span>\r\n            </button>\r\n        );\r\n    }\r\n\r\n    const createInfoRecored = (label: string, innerJsx: JSX.Element): JSX.Element => {\r\n        return (\r\n            <div\r\n                className=\"info-record\"\r\n            >\r\n                <span>{label}</span>\r\n                <span>{': '}</span>\r\n                {innerJsx}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const isDisplayMsg = message != '';\r\n    const selectedRecord = recordList[focus];\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                {/* <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button> */}\r\n                <div className=\"opr\">\r\n                    {createButton('Create', isEdit || isLoad, () => {\r\n                        setMessage('Create...');\r\n                        sendQueryRequestToAPI('update', `INSERT INTO sclibtbl(user, title, chord_mode) VALUES(${state.login.id}, 'new_title', '')`)\r\n                            .then((result) => {\r\n                                reload(recordList.length);\r\n                                return result;\r\n                            })\r\n                    })}\r\n                    {createButton('Update', focus == -1 || isLoad, () => {\r\n                        if (!isEdit) {\r\n                            setEdit(true);\r\n                            setTitle(selectedRecord.title);\r\n                            setChordMode(selectedRecord.chord_mode);\r\n                        }\r\n                    }, isEdit)}\r\n                    {createButton('Delete', focus == -1 || isEdit || isLoad, () => {\r\n                        (async () => {\r\n                            setMessage('Delete...');\r\n                            console.log('----start----');\r\n                            await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${recordList[focus].id}`);\r\n                            await sendQueryRequestToAPI('update', `delete from sclibtbl where id = ${recordList[focus].id}`);\r\n                            reload(-1);\r\n                            setFocus(-1);\r\n                            console.log('----end----');\r\n                        })();\r\n                    })}\r\n                </div>\r\n                <div className={[\r\n                    'lib',\r\n                    isEdit ? 'disable' : ''\r\n                ].join(' ')}>\r\n                    <div className={[\r\n                        'message',\r\n                        !isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        <span>{message}</span>\r\n                    </div>\r\n                    <div className={[\r\n                        'list',\r\n                        isDisplayMsg ? 'hidden' : ''\r\n                    ].join(' ')}>\r\n                        {titleList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <div className=\"opr\">\r\n                    {createButton('Cancel', !isEdit || isLoad, () => {\r\n                        dispatcher.score.setNoteData({...state.noteData, dataList: []});\r\n                        setEdit(false);\r\n                    })}\r\n                    {createButton('Save', !isEdit || chordMode === '' || isLoad, () => {\r\n                        setLoad(true);\r\n                        (async () => {\r\n                            console.log('----start----');\r\n                            const values: string[] = [];\r\n                            await sendQueryRequestToAPI('update', `update sclibtbl set title = '${title}', chord_mode = '${chordMode}' where id = ${selectedRecord.id}`);\r\n                            if (state.noteData.dataList.length > 0) {\r\n                                state.noteData.dataList.forEach((data, i) => {\r\n                                    values.push(`(${selectedRecord.id}, ${i}, '${JSON.stringify(data)}')`);\r\n                                });\r\n                                await sendQueryRequestToAPI('update', `delete from data_tbl where score = ${selectedRecord.id}`);\r\n                                await sendQueryRequestToAPI('update', `insert into data_tbl values${values.join(',')}`);\r\n                            }\r\n                            console.log('----end----');\r\n                            alert('The data was saved successfully!');\r\n                            // setEdit(false);\r\n                            setLoad(false);\r\n                        })();\r\n                    })}\r\n                    {createButton('Edit', !isEdit || chordMode === '' || isLoad, () => {\r\n                        setLoad(true);\r\n                        (async () => {\r\n                            if (selectedRecord.data_cnt == 0) {\r\n                                dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                            } else {\r\n                                const response = await sendQueryRequestToAPI('select', `SELECT json from data_tbl where score = ${selectedRecord.id} order by seq`);\r\n                                const results = await response.json();\r\n                                // alert(JSON.stringify(results));\r\n                                const dataList: NoteElement[] = [];\r\n                                results.forEach((result: { json: string }) => {\r\n                                    dataList.push(JSON.parse(result.json));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList, chordMode: chordMode as CHORD_MODE  });\r\n                            }\r\n                            state.noteState.cuScoreId = selectedRecord.id;\r\n                            dispatcher.score.setNoteState({...state.noteState});\r\n                            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: 2 });\r\n                            dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                            setLoad(false);\r\n                        })();\r\n                    })}\r\n                </div>\r\n                {\r\n                    !isEdit ? <></> : (\r\n                        <div className=\"data\">\r\n                            {createInfoRecored('Id', (\r\n                                <span className=\"value\">{selectedRecord.id}</span>\r\n                            ))}\r\n                            {createInfoRecored('Title', (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    onChange={(e) => {\r\n                                        // recordList[focus].title = e.target.value;\r\n                                        // setRecordList(recordList);\r\n                                        setTitle(e.target.value);\r\n                                    }}\r\n                                    value={title}\r\n                                />\r\n                            ))}\r\n                            {createInfoRecored('Mode', (\r\n                                // <span className=\"value\">{selectedRecord.chord_mode}</span>\r\n                                <select className={[\r\n                                    'value',\r\n                                    selectedRecord.data_cnt > 0 ? 'disable' : ''\r\n                                ].join(' ')}\r\n                                    value={chordMode}\r\n                                    onChange={(e) => {\r\n                                        setChordMode(e.target.value as CHORD_MODE | '');\r\n                                    }}>\r\n                                    <option value=''></option>\r\n                                    <option value={CHORD_MODE.SCALE}>{CHORD_MODE.SCALE}</option>\r\n                                    <option value={CHORD_MODE.DIRECT}>{CHORD_MODE.DIRECT}</option>\r\n                                </select>\r\n                            ))}\r\n                            {createInfoRecored('Show', (\r\n                                <span className=\"value\">{'PRIVATE'}</span>\r\n                            ))}\r\n                            {createInfoRecored('Data', (\r\n                                <span className=\"value\">{selectedRecord.data_cnt}</span>\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","\r\nexport const createFixedForm = (label: string, value: string): JSX.Element => {\r\n    return (\r\n        <div className=\"record\">\r\n            <div className=\"label\">{label}</div>\r\n            <div className=\"fixed\">{value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createTextForm = (\r\n    label: string, value: string,\r\n    callback: (e: React.ChangeEvent<HTMLInputElement>) => void): JSX.Element => {\r\n    return (\r\n        <div className=\"record\">\r\n            <div className=\"label\">{label}</div>\r\n            <input type=\"text\" value={value} onChange={(e) => callback(e)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createSelectForm = (\r\n    label: string, value: string,\r\n    list: { value: string, display: string }[],\r\n    callback: (e: React.ChangeEvent<HTMLSelectElement>) => void): JSX.Element => {\r\n\r\n    const optionJSXList: JSX.Element[] = [];\r\n    list.forEach((item, i) => {\r\n        optionJSXList.push(\r\n            <option key={i} value={item.value}>{item.display}</option>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"record\">\r\n            <div className=\"label\">{label}</div>\r\n            <select value={value} onChange={(e) => callback(e)}>\r\n                {optionJSXList}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const createButtonRecord = (list: { label: string, disabled: boolean, callback: () => void }[]) => {\r\n\r\n    const buttonJSXList: JSX.Element[] = [];\r\n    list.forEach((item, i) => {\r\n        buttonJSXList.push(\r\n            <button\r\n                key={i}\r\n                className={[item.disabled ? 'disable' : ''].join(' ')}\r\n                onClick={() => item.callback()}\r\n            >{item.label}</button>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"record\">{buttonJSXList}</div>\r\n    );\r\n}","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTSustain, ThemaDataTree, ThemaIndexedElement } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createSelectForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\n\r\nconst ThemaTabRoot = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.root;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'root') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as ThemaDataTree;\r\n\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createTextForm(\r\n                'Name',\r\n                form.themaName,\r\n                (e) => {\r\n                    form.themaName = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.sustains.length)\r\n            )}\r\n\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            form.themaName = data.themaName;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            data.themaName = form.themaName;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Sustain',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildSustain();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n\r\n            <div className=\"src\">\r\n                <textarea value={form.src} onChange={(e) => {\r\n                    form.src = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }} />\r\n            </div>\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Sync',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.setThemaeData(JSON.parse(form.src));\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabRoot;","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTSustain, ThemaIndexedElement } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createSelectForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabSustain = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.sustain;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'sustain') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as BTSustain;\r\n    let sustain = '-';\r\n    if (form.beat != null) {\r\n        sustain = String(form.beat + form.headAdjust + form.tailAdjust);\r\n    }\r\n    const validate = form.beat != null;\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createSelectForm(\r\n                'Beat',\r\n                form.beat ? String(form.beat) : '',\r\n                [\r\n                    { value: '', display: '' },\r\n                    { value: String(1), display: String(1) },\r\n                    { value: String(2), display: String(2) },\r\n                    { value: String(3), display: String(3) },\r\n                    { value: String(4), display: String(4) }\r\n                ],\r\n                (e) => {\r\n                    form.beat = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createSelectForm(\r\n                'Head',\r\n                String(form.headAdjust),\r\n                [\r\n                    { value: String(-0.5), display: String(-0.5) },\r\n                    { value: String(-0.25), display: String(-0.25) },\r\n                    { value: String(0), display: String(0) },\r\n                    { value: String(0.25), display: String(+0.25) },\r\n                    { value: String(0.5), display: String(+0.5) },\r\n                ],\r\n                (e) => {\r\n                    form.headAdjust = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createSelectForm(\r\n                'Tail',\r\n                String(form.tailAdjust),\r\n                [\r\n                    { value: String(-0.5), display: String(-0.5) },\r\n                    { value: String(-0.25), display: String(-0.25) },\r\n                    { value: String(0), display: String(0) },\r\n                    { value: String(0.25), display: String(+0.25) },\r\n                    { value: String(0.5), display: String(+0.5) },\r\n                ],\r\n                (e) => {\r\n                    form.tailAdjust = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createFixedForm('Sustain', sustain)}\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.patterns.length)\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: !validate,\r\n                        callback: () => {\r\n                            data.beat = form.beat as number;\r\n                            data.headAdjust = form.headAdjust;\r\n                            data.tailAdjust = form.tailAdjust;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Pattern',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildPattern(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabSustain;","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTPattern, BTVoicing, ThemaIndexedElement, VoicingTargetCondition } from \"contents/redux/store\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabVoicing = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.voicing;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            form.def = JSON.parse(form.src);\r\n        } catch (e) {\r\n            form.def = null;\r\n        }\r\n    },[form.src]);\r\n\r\n    if (cur.type !== 'voicing') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as BTVoicing;\r\n\r\n    const getList = () => {\r\n        const list:string[] = [];\r\n        if(form.def != null)  {\r\n            form.def.useChannels.forEach(param=>{\r\n                list.push(`${param.octave}-${param.structIndex}`);\r\n            });\r\n        }\r\n        return list.join(' ');\r\n    }\r\n\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n        {createFixedForm('Channel', getList())}\r\n        <div className=\"src\">\r\n            <textarea value={form.src} onChange={(e) => {\r\n                form.src = e.target.value;\r\n                dispatcher.thema.setThemaState(state.themaState);\r\n            }} />\r\n        </div>\r\n        {\r\n            createButtonRecord([\r\n                {\r\n                    label: 'Edit',\r\n                    disabled: false,\r\n                    callback: () => {\r\n                        dispatcher.thema.callBackingVoicingEditor();\r\n                    }\r\n                }\r\n            ])\r\n        }\r\n        {\r\n            createButtonRecord([\r\n                {\r\n                    label: 'Cancel',\r\n                    disabled: state.themaState.isCreate,\r\n                    callback: () => {\r\n\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Update',\r\n                    disabled: false,\r\n                    callback: () => {\r\n                        data.def = JSON.parse(form.src);\r\n                        dispatcher.thema.setThemaeData(thema);\r\n                        state.themaState.isCreate = false;\r\n                        dispatcher.thema.setThemaState(state.themaState);\r\n                    }\r\n                },\r\n                {\r\n                    label: 'Delete',\r\n                    disabled: false,\r\n                    callback: () => {\r\n\r\n                    }\r\n                },\r\n            ])\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabVoicing;","import { KEY12_SHARP_LIST, SymbolType } from \"contents/common/define\";\r\nimport { getSymbolName, getSymbolsIncludeCategory, getSymbolTypeName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTPattern, ThemaIndexedElement, VoicingTargetCondition, VoicingTargetType } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createSelectForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabCondition = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.condition;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'condition') {\r\n        return <></>\r\n    }\r\n    const data = cur.reffer as VoicingTargetCondition;\r\n    const parent = cur.parent?.reffer as VoicingTargetType;\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n        {createFixedForm(\r\n            'Category',\r\n            getSymbolTypeName(parent.symbolType)\r\n        )}\r\n            {createSelectForm(\r\n                'Root Min',\r\n                form.minRootIndex.toString(),\r\n                (() => {\r\n                    const list: { value: string, display: string }[] = [];\r\n                    for (let i = 0; i < 12; i++) {\r\n                        list.push({\r\n                            value: String(i),\r\n                            display: KEY12_SHARP_LIST[i]\r\n                        });\r\n                    }\r\n                    return list;\r\n                })(),\r\n                (e) => {\r\n                    form.minRootIndex = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createSelectForm(\r\n                'Root Max',\r\n                form.maxRootIndex.toString(),\r\n                (() => {\r\n                    const list: { value: string, display: string }[] = [];\r\n                    for (let i = 0; i < 12; i++) {\r\n                        list.push({\r\n                            value: String(i),\r\n                            display: KEY12_SHARP_LIST[i]\r\n                        });\r\n                    }\r\n                    return list;\r\n                })(),\r\n                (e) => {\r\n                    form.maxRootIndex = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {/* {createFixedForm(\r\n                'Symbols',\r\n                String(data.tgtSymbols.map((symbol) => `[${getSymbolName(symbol)}]`).join(', '))\r\n            )} */}\r\n            <div className={['selector'].join(' ')}>\r\n                {(() => {\r\n                    const category: SymbolType = (cur.parent?.reffer as VoicingTargetType).symbolType;\r\n                    return getSymbolsIncludeCategory(category).\r\n                        map((symbol, i): JSX.Element => {\r\n                            return (\r\n                                <div key={i} className={[\r\n                                    'item',\r\n                                    form.tgtSymbols.includes(symbol) ? 'active' : ''\r\n                                ].join(' ')}\r\n                                    onClick={() => {\r\n                                        if (!form.tgtSymbols.includes(symbol)) {\r\n                                            form.tgtSymbols.push(symbol);\r\n                                        } else {\r\n                                            form.tgtSymbols = form.tgtSymbols.filter((item) => item !== symbol);\r\n                                        }\r\n                                        dispatcher.thema.setThemaState(state.themaState);\r\n                                    }}\r\n                                >[{getSymbolName(symbol)}]</div>\r\n                            );\r\n                        });\r\n                })()}\r\n            </div>\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.voicings.length)\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            data.minRootIndex = form.minRootIndex;\r\n                            data.maxRootIndex = form.maxRootIndex;\r\n                            data.tgtSymbols = form.tgtSymbols;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Voicing',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildVoicing(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabCondition;","import { SymbolType } from \"contents/common/define\";\r\nimport { getSymbolTypeName } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { BTPattern, ThemaIndexedElement, VoicingTargetType } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { createButtonRecord, createSelectForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabCategory = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.category;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    if (cur.type !== 'category') {\r\n        return <></>\r\n    }\r\n    const data = dispatcher.thema.getFocusElement().reffer as VoicingTargetType;\r\n    // alert('cat: ' + state.themaState.themaCacheList[state.themaState.focusIndex].type);\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createSelectForm(\r\n                'Category',\r\n                form.category == null ? '' : form.category.toString(),\r\n                (() => {\r\n                    const list: { value: string, display: string }[] = [];\r\n                    list.push({ value: '', display: '' });\r\n                    Object.values(SymbolType).filter(v => !isNaN(Number(v))).forEach((item, i) => {\r\n                        list.push({\r\n                            value: String(item),\r\n                            display: getSymbolTypeName(Number(item))\r\n                        });\r\n                    });\r\n                    return list;\r\n                })(),\r\n                (e) => {\r\n                    form.category = Number(e.target.value);\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            data.symbolType = form.category as SymbolType;\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Condition',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildCondition(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabCategory;","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { BackingPattern, BTPattern, BTSustain, ThemaIndexedElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { createButtonRecord, createFixedForm, createTextForm } from \"./ThemaTabCommonUtil\";\r\n\r\nconst ThemaTabPattern = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const form = state.themaState.form.pattern;\r\n    const cur = dispatcher.thema.getFocusElement();\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            form.def = JSON.parse(form.src);\r\n        } catch (e) {\r\n            form.def = null;\r\n        }\r\n    },[form.src]);\r\n\r\n    if (cur.type !== 'pattern') {\r\n        return <></>\r\n    }\r\n    const data = cur.reffer as BTPattern;\r\n\r\n    const parent = cur.parent?.reffer as BTSustain;\r\n    \r\n\r\n    const getChannel = () => {\r\n        let channel = '-';\r\n        if(form.def != null)  {\r\n            channel = String(form.def.layers[0].table.length);\r\n        }\r\n        return channel;\r\n    }\r\n\r\n    const getNotes = () => {\r\n        let notes = '-';\r\n        if(form.def != null)  {\r\n            const def: BackingPattern = JSON.parse(form.src);\r\n            let count = 0;\r\n            def.layers.forEach(layer => {\r\n                layer.table.forEach(line => {\r\n                    line.forEach(cell => {\r\n                        cell.forEach(isUse => {\r\n                            if (isUse) count++;\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n            notes = String(count);\r\n        }\r\n        return notes;\r\n    }\r\n\r\n    const validate = ():boolean => {\r\n        return form.name != '' && form.def != null;\r\n    };\r\n    return (\r\n        <div className=\"thematab-detail\">\r\n            {createFixedForm('Beat', String(parent.beat))}\r\n            {createFixedForm('Head', String(parent.headAdjust))}\r\n            {createFixedForm('Tail', String(parent.tailAdjust))}\r\n            {createFixedForm('Sustain', String(parent.beat + parent.headAdjust + parent.tailAdjust))}\r\n            {createTextForm(\r\n                'Name',\r\n                form.name,\r\n                (e) => {\r\n                    form.name = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }\r\n            )}\r\n            {createFixedForm('Channel', getChannel())}\r\n            {createFixedForm('Notes', getNotes())}\r\n            <div className=\"src\">\r\n                <textarea value={form.src} onChange={(e) => {\r\n                    form.src = e.target.value;\r\n                    dispatcher.thema.setThemaState(state.themaState);\r\n                }} />\r\n            </div>\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Edit',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.callBackingPatternEditor();\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n            {createFixedForm(\r\n                'Children',\r\n                String(data.tgtTypes.length)\r\n            )}\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Cancel',\r\n                        disabled: state.themaState.isCreate,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Update',\r\n                        disabled: !validate(),\r\n                        callback: () => {\r\n                            data.name = form.name;\r\n                            data.def = JSON.parse(form.src);\r\n                            dispatcher.thema.setThemaeData(thema);\r\n                            state.themaState.isCreate = false;\r\n                            dispatcher.thema.setThemaState(state.themaState);\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        disabled: false,\r\n                        callback: () => {\r\n\r\n                        }\r\n                    },\r\n                ])\r\n            }\r\n            {\r\n                createButtonRecord([\r\n                    {\r\n                        label: 'Add Category',\r\n                        disabled: false,\r\n                        callback: () => {\r\n                            dispatcher.thema.addChildCategory(cur);\r\n                        }\r\n                    }\r\n                ])\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemaTabPattern;","import './ScoreContThemaTab.css';\r\n\r\nimport { BTSustain, ThemaDataTree, BTPattern, VoicingTargetType, VoicingTargetCondition, BTVoicing, ThemaElementType, ThemaIndexedElement, FloatWndState, BackingVoicing, ChannelParam } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ThemaTabRoot from './tabs/ThemaTabRoot';\r\nimport { KEY12_SHARP_LIST, SymbolType } from 'contents/common/define';\r\nimport ThemaTabSustain from './tabs/ThemaTabSustain';\r\nimport ThemaTabVoicing from './tabs/ThemaTabVoicing';\r\nimport ThemaTabCondition from './tabs/ThemaTabCondition';\r\nimport ThemaTabCategory from './tabs/ThemaTabCategory';\r\nimport ThemaTabPattern from './tabs/ThemaTabPattern';\r\nimport { getSymbolName, getSymbolTypeName } from 'contents/common/utils';\r\nimport BackingEditor from '../note/floatwnd/backing/BackingEditor';\r\n\r\nconst ScoreContThemaTab = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const thema = state.themaDataTree;\r\n    const themaState = state.themaState;\r\n    const dataIndexies = themaState.themaCacheList;\r\n\r\n    const [treeItemJsxList, setTreeItemJsxList] = useState<JSX.Element[]>([]);\r\n\r\n    // ツリーのインデックス化\r\n    useEffect(() => {\r\n        dispatcher.thema.buildIndex();\r\n    }, [thema]);\r\n\r\n    // インデックスのJSX化\r\n    useEffect(() => {\r\n        const treeItemJsxList: JSX.Element[] = [];\r\n\r\n        const createTreeItemJsx = (data: ThemaIndexedElement, isActive: boolean): JSX.Element => {\r\n            const key = treeItemJsxList.length;\r\n            const depth = ((): number => {\r\n                switch (data.type) {\r\n                    case 'root': return 0;\r\n                    case 'sustain': return 1;\r\n                    case 'pattern': return 2;\r\n                    case 'category': return 3;\r\n                    case 'condition': return 4;\r\n                    case 'voicing': return 5;\r\n                }\r\n            })();\r\n\r\n            const label: JSX.Element = themaState.isCreate && key === themaState.focusIndex ?\r\n                (<span className=\"create\">Creating...</span>)\r\n                : (() => {\r\n                    switch (data.type) {\r\n                        case 'root': {\r\n                            const reffer = data.reffer as ThemaDataTree;\r\n                            return (\r\n                                <span className=\"value\">{reffer.themaName}</span>\r\n                            );\r\n                        }\r\n                        case 'sustain': {\r\n                            const reffer = data.reffer as BTSustain;\r\n                            return (<>\r\n                                <span>beat: </span>\r\n                                <span className=\"value\">{reffer.beat}</span>\r\n                                <span>[head: </span>\r\n                                <span className=\"value\">{reffer.headAdjust}</span>\r\n                                <span>, tail: </span>\r\n                                <span className=\"value\">{reffer.tailAdjust}</span>\r\n                                <span>]</span>\r\n                            </>);\r\n                        }\r\n                        case 'pattern': {\r\n                            const reffer = data.reffer as BTPattern;\r\n                            return (<>\r\n                                <span className=\"value\">{reffer.name}</span>\r\n                                <span> [channel: </span>\r\n                                <span className=\"value\">0</span>\r\n                                <span>, notes: </span>\r\n                                <span className=\"value\">0</span>\r\n                                <span>]</span>\r\n                            </>);\r\n                        }\r\n                        case 'category': {\r\n                            const reffer = data.reffer as VoicingTargetType;\r\n                            return (<>\r\n                                <span className=\"value\">{getSymbolTypeName(reffer.symbolType as SymbolType)}</span>\r\n                            </>);\r\n                        }\r\n                        case 'condition': {\r\n                            const reffer = data.reffer as VoicingTargetCondition;\r\n                            const min = KEY12_SHARP_LIST[reffer.minRootIndex];\r\n                            const max = KEY12_SHARP_LIST[reffer.maxRootIndex];\r\n                            const symbols = reffer.tgtSymbols.map((symbol) => `[${getSymbolName(symbol)}]`).join(', ');\r\n                            return (<>\r\n                                <span className=\"value\">{min}</span>\r\n                                <span>～</span>\r\n                                <span className=\"value\">{max}</span>\r\n                                <span> {'{'}</span>\r\n                                <span className=\"value\">{symbols}</span>\r\n                                <span>{'}'}</span>\r\n                            </>);\r\n                        }\r\n                        case 'voicing': {\r\n                            const reffer = data.reffer as BTVoicing;\r\n                            let src = '';\r\n                            if (reffer.def !== null) {\r\n                                const list = reffer.def.useChannels;\r\n                                const items = list.map((item) => {\r\n                                    return `${item.octave}-${item.structIndex}`;\r\n                                });\r\n                                src = items.join(', ');\r\n                            }\r\n                            return (<>\r\n                                <span>[</span>\r\n                                <span className=\"value\">{src}</span>\r\n                                <span>]</span>\r\n                            </>);\r\n                        }\r\n                    }\r\n                })();\r\n\r\n            const callback: Function = (() => {\r\n                switch (data.type) {\r\n                    case 'root': return () => dispatcher.thema.addChildSustain();\r\n                    case 'sustain': return () => dispatcher.thema.addChildPattern(data);\r\n                    case 'pattern': return () => dispatcher.thema.addChildCategory(data);\r\n                    case 'category': return () => dispatcher.thema.addChildCondition(data);\r\n                    case 'condition': return () => dispatcher.thema.addChildVoicing(data);\r\n                }\r\n                return () => { };\r\n            })();\r\n            const indentWidth = 10 + depth * 50;\r\n            return (\r\n                <div\r\n                    key={key}\r\n                    className={[\r\n                        'item',\r\n                        isActive ? 'active' : '',\r\n                        themaState.isCreate && themaState.focusIndex !== key ? 'lock' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <div className=\"indent\" style={{ width: indentWidth + 'px' }}></div>\r\n                    <div className={[\r\n                        'opener',\r\n                        data.ChildCnt == 0 ? 'hidden' : ''\r\n                    ].join(' ')} onClick={() => {\r\n                        data.isClose = !data.isClose;\r\n                        themaState.themaCacheList = dataIndexies.slice();\r\n                        dispatcher.thema.setThemaState(themaState);\r\n                    }}>\r\n                        <span>{data.isClose ? '＋' : '－'}</span>\r\n                    </div>\r\n                    {((): JSX.Element => {\r\n                        switch (data.type) {\r\n                            case 'root': return (<div className=\"type root\"><span>ROOT</span></div>);\r\n                            case 'sustain': return (<div className=\"type sustain\"><span>SUSTAIN</span></div>);\r\n                            case 'pattern': return (<div className=\"type pattern\"><span>PATTERN</span></div>);\r\n                            case 'category': return (<div className=\"type category\"><span>CATEGORY</span></div>);\r\n                            case 'condition': return (<div className=\"type condition\"><span>CONDITION</span></div>);\r\n                            case 'voicing': return (<div className=\"type voicing\"><span>VOICING</span></div>);\r\n                        }\r\n                    })()}\r\n                    <div\r\n                        className={[\r\n                            'label',\r\n                            themaState.focusIndex === key ? 'active' : ''\r\n                        ].join(' ')}\r\n                        onClick={() => {\r\n                            themaState.focusIndex = key;\r\n                            const cur = themaState.themaCacheList[themaState.focusIndex];\r\n                            switch (cur.type) {\r\n                                case 'root': {\r\n                                    const data = cur.reffer as ThemaDataTree;\r\n                                    const form = themaState.form.root;\r\n                                    form.themaName = data.themaName;\r\n                                    form.src = JSON.stringify(thema);\r\n                                }\r\n                                    break;\r\n                                case 'sustain': {\r\n                                    const data = cur.reffer as BTSustain;\r\n                                    const form = themaState.form.sustain;\r\n                                    form.beat = data.beat;\r\n                                    form.headAdjust = data.headAdjust;\r\n                                    form.tailAdjust = data.tailAdjust;\r\n                                }\r\n                                    break;\r\n                                case 'pattern': {\r\n                                    const data = cur.reffer as BTPattern;\r\n                                    const form = themaState.form.pattern;\r\n                                    form.name = data.name;\r\n                                    form.def = null;\r\n                                    form.src = JSON.stringify(data.def);\r\n                                }\r\n                                    break;\r\n                                case 'category': {\r\n                                    const data = cur.reffer as VoicingTargetType;\r\n                                    const form = themaState.form.category;\r\n                                    form.category = data.symbolType as SymbolType;\r\n                                }\r\n                                    break;\r\n                                case 'condition': {\r\n                                    const data = cur.reffer as VoicingTargetCondition;\r\n                                    const form = themaState.form.condition;\r\n                                    form.tgtSymbols = data.tgtSymbols;\r\n                                    form.minRootIndex = data.minRootIndex;\r\n                                    form.maxRootIndex = data.maxRootIndex;\r\n                                }\r\n                                    break;\r\n                                case 'voicing': {\r\n                                    const data = cur.reffer as BTVoicing;\r\n                                    const form = themaState.form.voicing;\r\n                                    form.def = null;\r\n                                    form.src = JSON.stringify(data.def);\r\n                                }\r\n                                    break;\r\n                            }\r\n                            dispatcher.thema.setThemaState(themaState);\r\n                        }}\r\n                        onContextMenu={() => callback()}\r\n                    >{label}</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const activeRefList: ThemaIndexedElement[] = [];\r\n        let ref: null | ThemaIndexedElement = dataIndexies[themaState.focusIndex];\r\n        while (ref != null) {\r\n            activeRefList.push(ref);\r\n            ref = ref.parent;\r\n        }\r\n        // for (let ref = dataIndexies[themaState.focusIndex]; ref.parent !== null; ref = ref.parent) {\r\n        //     activeRefList.push(ref);\r\n        // }\r\n        // activeRefList.push(dataIndexies[0]);\r\n        dataIndexies.forEach((data) => {\r\n            treeItemJsxList.push(\r\n                createTreeItemJsx(data, activeRefList.includes(data))\r\n            );\r\n        });\r\n\r\n        setTreeItemJsxList(treeItemJsxList);\r\n    }, [dataIndexies, themaState.focusIndex]);\r\n\r\n\r\n    if (dataIndexies.length === 0) {\r\n        return (<></>);\r\n    }\r\n    const cur = dataIndexies[themaState.focusIndex];\r\n\r\n    return (\r\n        <div id=\"scorecont-thematab-root\">\r\n            <BackingEditor />\r\n            <div className=\"cont left\">\r\n                <div className=\"loader\">\r\n\r\n                </div>\r\n                <div className={[\r\n                    'tree',\r\n                    themaState.isCreate ? 'lock' : ''\r\n                ].join(' ')}>\r\n                    {treeItemJsxList}\r\n                </div>\r\n                <div className=\"operation\">\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"cont right\">\r\n\r\n                <div id=\"themainfotab-root\">\r\n                    <TabbedPane groupName=\"themainfo-tabs\"\r\n                        tabElements={[\r\n                            { name: 'Root', disable: true, cont: <ThemaTabRoot /> },\r\n                            { name: 'Sustain', disable: true, cont: <ThemaTabSustain /> },\r\n                            { name: 'Pattern', disable: true, cont: <ThemaTabPattern /> },\r\n                            { name: 'Type', disable: true, cont: <ThemaTabCategory /> },\r\n                            { name: 'Condition', disable: true, cont: <ThemaTabCondition /> },\r\n                            { name: 'Voicing', disable: true, cont: <ThemaTabVoicing /> },\r\n                        ]}\r\n                        activeNo={(\r\n                            (): number => {\r\n                                switch (cur.type) {\r\n                                    case 'root': return 0;\r\n                                    case 'sustain': return 1;\r\n                                    case 'pattern': return 2;\r\n                                    case 'category': return 3;\r\n                                    case 'condition': return 4;\r\n                                    case 'voicing': return 5;\r\n                                }\r\n                            }\r\n                        )()}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ScoreContThemaTab;\r\n","import './ScoreContSourceTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\nconst ScoreContTuneTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scorecont-sourcetab-root\">\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContTuneTab;\r\n","import { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode, DetailChord, BACKING_LEN_TYPE } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef, useMemo } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport styled, { css } from \"styled-components\";\r\nimport { applyOnChord, getSymbolParams } from 'contents/common/utils';\r\nimport { KEY12_SHARP_LIST, SymbolParams } from 'contents/common/define';\r\n\r\ntype NotesInfo = {\r\n    pos: number,\r\n    width: number,\r\n    layer: 'left' | 'right',\r\n    soundName: string\r\n};\r\ntype BlockInfo = {\r\n    pos: number,\r\n    width: number,\r\n    sustain: number,\r\n    chordName: string\r\n};\r\nconst ScoreContPreviewTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [notesTable, setNotesTable] = useState<NotesInfo[][][]>([]);\r\n    const [blocks, setBlocks] = useState<BlockInfo[]>([]);\r\n    const [barPos, setBarPos] = useState<number>(0);\r\n    const [curIndex, setCurIndex] = useState<number>(0);\r\n    const [isPlay, setPlay] = useState<boolean>(false);\r\n    const [bpm, setBpm] = useState<number>(0);\r\n\r\n    const [limit, setLimist] = useState<number>(0);\r\n\r\n    const tableRef = useRef({} as HTMLDivElement);\r\n    const intervalRef = useRef({} as HTMLDivElement);\r\n    const measureRef = useRef({} as HTMLDivElement);\r\n    const BlocksRef = useRef({} as HTMLDivElement);\r\n\r\n    // タブ選択時の処理\r\n    const BEAT_WIDTH = 120;\r\n    const NOTES_HEIGHT = 12;\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex === 5) {\r\n\r\n            const notesTable: NotesInfo[][][] = [];\r\n            const blocks: BlockInfo[] = [];\r\n\r\n            let curPos = 0;\r\n            state.noteData.dataList.forEach((block, i) => {\r\n\r\n                const key = state.noteState.cacheList[i].init.keyIndex;\r\n                if (block.type === TypeNoteElement.Chord) {\r\n                    console.log(i);\r\n\r\n                    const table: NotesInfo[][] = [];\r\n                    for (let i = 0; i < 88; i++) {\r\n                        table.push([]);\r\n                    }\r\n                    // BPMの設定\r\n                    setBpm(state.noteState.cacheList[i].init.tempo);\r\n\r\n                    // フォーカスの設定\r\n                    if (state.noteState.focusIndex == i) {\r\n                        setCurIndex(blocks.length);\r\n                        setBarPos(curPos * BEAT_WIDTH);\r\n                    }\r\n\r\n                    const chord = block.detail as DetailChord;\r\n                    const sustain = chord.sustain + chord.headAdjust + chord.tailAdjust;\r\n                    const rootIndex = ((chord.molecule?.rootIndex as number) + key) % 12;\r\n                    let symbol = getSymbolParams(chord.symbolKey) as SymbolParams;\r\n                    if (chord.denominator != null) {\r\n                        symbol = { ...symbol };\r\n                        applyOnChord(symbol, rootIndex, chord.denominator.rootIndex)\r\n                    }\r\n                    blocks.push({\r\n                        pos: curPos * BEAT_WIDTH,\r\n                        width: sustain * BEAT_WIDTH,\r\n                        sustain: sustain,\r\n                        chordName: KEY12_SHARP_LIST[rootIndex] + symbol.name\r\n                    });\r\n                    //最終要素のみリミットの設定\r\n                    setLimist(curPos * BEAT_WIDTH + sustain * BEAT_WIDTH);\r\n\r\n                    const backing = chord.backing;\r\n                    backing.layers.forEach((layer, j) => {\r\n                        layer.table.forEach((tabY, k) => {\r\n                            let index = 0;\r\n                            if (backing.useChannels.length - 1 >= k) {\r\n                                const channel = backing.useChannels[k];\r\n                                index = rootIndex + channel.octave * 12 + symbol.intervals[channel.structIndex] - 9;\r\n                            }\r\n                            let pos = curPos;\r\n                            console.log(`index=${index}, lenSize=${layer.lens.length}, k=${k}, tableSize=${layer.table.length}`);\r\n                            tabY.forEach((notes, l) => {\r\n                                let width = 0;\r\n                                switch (layer.lens[l].len) {\r\n                                    case BACKING_LEN_TYPE.LEN1: width = 4; break;\r\n                                    case BACKING_LEN_TYPE.LEN2: width = 2; break;\r\n                                    case BACKING_LEN_TYPE.LEN4: width = 1; break;\r\n                                    case BACKING_LEN_TYPE.LEN8: width = 1 / 2; break;\r\n                                    case BACKING_LEN_TYPE.LEN16: width = 1 / 4; break;\r\n                                }\r\n                                if (layer.lens[l].isHalf) {\r\n                                    width *= 1.5;\r\n                                }\r\n                                if (!layer.lens[l].isDiv3) {\r\n                                    if (notes[0]) {\r\n                                        table[index].push({\r\n                                            pos: pos * BEAT_WIDTH,\r\n                                            width: width * BEAT_WIDTH,\r\n                                            layer: j == 0 ? 'left' : 'right',\r\n                                            soundName: KEY12_SHARP_LIST[(index + 9) % 12] + Math.floor((index + 9) / 12)\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    console.log(JSON.stringify(notes));\r\n                                    notes.forEach((note, m) => {\r\n                                        if (note) {\r\n                                            const posAdjust = pos + width / 3 * m;\r\n                                            const widthAdjust = width / 3;\r\n                                            table[index].push({\r\n                                                pos: posAdjust * BEAT_WIDTH,\r\n                                                width: widthAdjust * BEAT_WIDTH,\r\n                                                layer: j == 0 ? 'left' : 'right',\r\n                                                soundName: KEY12_SHARP_LIST[index % 12] + Math.floor(index / 12)\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                                pos += width;\r\n                            });\r\n                        });\r\n                    });\r\n                    curPos += sustain;\r\n                    notesTable.push(table.reverse());\r\n                }\r\n            });\r\n            setNotesTable(notesTable);\r\n            setBlocks(blocks);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    useEffect(() => {\r\n        tableRef.current.scrollTo({ left: barPos - 400, behavior: 'smooth' });\r\n        BlocksRef.current.scrollTo({ left: barPos - 400, behavior: 'smooth' });\r\n\r\n    }, [curIndex]);\r\n    useEffect(() => {\r\n        if (\r\n            blocks.length > curIndex + 1 &&\r\n            (barPos >= blocks[curIndex + 1].pos)\r\n        ) {\r\n            setCurIndex(curIndex + 1);\r\n        }\r\n    }, [barPos]);\r\n\r\n    const blockListJsx: JSX.Element[] = useMemo(() => {\r\n        const blockListJsx: JSX.Element[] = [];\r\n        blocks.forEach((block, i) => {\r\n            const left = block.pos;\r\n            const right = left + block.width;\r\n            // if (\r\n            //     !isPlay ||\r\n            //     (barPos > left - 500 && barPos < right + 700)\r\n            // ) {\r\n            blockListJsx.push(\r\n                <_Block key={i} pos={block.pos} width={block.width} isActive={i === curIndex}\r\n                    onClick={() => {\r\n                        setCurIndex(i);\r\n                        setBarPos(block.pos);\r\n                    }}\r\n                >\r\n                    <_Sus>{block.sustain}</_Sus>\r\n                    <_ChordName>{block.chordName}</_ChordName>\r\n                </_Block>\r\n            );\r\n            // }\r\n        });\r\n        return blockListJsx;\r\n    }, [notesTable, curIndex]);\r\n\r\n    const boxListJsx: JSX.Element[] = useMemo(() => {\r\n        const boxListJsx: JSX.Element[] = [];\r\n        notesTable.forEach((box, i) => {\r\n            const left = blocks[i].pos;\r\n            const right = left + blocks[i].width;\r\n            if (\r\n                !isPlay ||\r\n                (barPos > left - 500 && barPos < right + 700)\r\n            ) {\r\n                const lineListJsx: JSX.Element[] = [];\r\n                box.forEach((line, j) => {\r\n                    const notesListJsx: JSX.Element[] = [];\r\n                    line.forEach((notes, k) => {\r\n                        const isActive = notes.pos <= barPos && notes.pos + notes.width >= barPos;\r\n                        // if (notes.pos + notes.width > pos && pos < notes.pos + 500) {\r\n                        notesListJsx.push(\r\n                            <_Notes key={k} pos={notes.pos - blocks[i].pos} width={notes.width} layer={notes.layer} isActive={isActive}>\r\n                                {notes.soundName}\r\n                            </_Notes>\r\n                        );\r\n                        // }\r\n                    });\r\n                    lineListJsx.push(\r\n                        <_Line key={j} soundIndex={j % 12}>\r\n                            {notesListJsx}\r\n                        </_Line>\r\n                    );\r\n                });\r\n                boxListJsx.push(\r\n                    <_Box\r\n                        key={i}\r\n                        isActive={barPos >= left && barPos < right}\r\n                        pos={left}\r\n                        width={blocks[i].width}\r\n                    >\r\n                        {lineListJsx}\r\n                    </_Box>\r\n                );\r\n            }\r\n        });\r\n        return boxListJsx;\r\n    }, [notesTable, barPos]);\r\n\r\n    const intervalListJSX: JSX.Element[] = useMemo(() => {\r\n        const intervalListJSX: JSX.Element[] = [];\r\n        for (let i = 0; i < 88; i++) {\r\n            const num = 88 - (i);\r\n            const octave = Math.floor((87 + 9 - i) / 12);\r\n            const chordName = KEY12_SHARP_LIST[(87 + 9 -i) % 12];\r\n            intervalListJSX.push(\r\n                <_Interval\r\n                    key={i}\r\n                >\r\n                    <_Num>{num}</_Num> <_SoundName>{chordName + octave}</_SoundName>\r\n                </_Interval>\r\n            );\r\n        }\r\n        return intervalListJSX;\r\n    }, []);\r\n    // console.log('intervalListJSX:' + intervalListJSX.length);\r\n    return (\r\n        <>\r\n            <_WrapInterval ref={intervalRef} onClick={() => {\r\n                setBarPos(barPos + 100);\r\n            }}>\r\n                {intervalListJSX}\r\n            </_WrapInterval>\r\n            <_WrapTimeLine>\r\n                <_Measure ref={measureRef}>\r\n\r\n                </_Measure>\r\n                <_BlockLine ref={BlocksRef}>\r\n                    {blockListJsx}\r\n                </_BlockLine>\r\n                <_TableWrap ref={tableRef} onScroll={() => {\r\n\r\n                    const scrollLeft = tableRef.current.scrollLeft;\r\n                    const scrollTop = tableRef.current.scrollTop;\r\n                    measureRef.current.scrollTo({ left: scrollLeft });\r\n                    BlocksRef.current.scrollTo({ left: scrollLeft });\r\n                    intervalRef.current.scrollTo({ top: scrollTop });\r\n                }}>\r\n                    <_Table width={limit} >\r\n                        {boxListJsx}\r\n                        <_Current pos={barPos} />\r\n                    </_Table>\r\n                </_TableWrap>\r\n            </_WrapTimeLine>\r\n            <_Button onClick={() => {\r\n                const taskList:NodeJS.Timeout[] = [];\r\n                if (!isPlay) {\r\n                    setPlay(true);\r\n                    dispatcher.preview.play();\r\n                    const progressValue = bpm * BEAT_WIDTH / 600;\r\n                    for (let i = 0; i < 900; i++) {\r\n                        const id = setTimeout(() => {\r\n                            setBarPos(progressValue * i);\r\n                            console.log('time: ' + barPos);\r\n                        }, i * 100);\r\n                        taskList.push(id);\r\n                    }\r\n                } else {\r\n                    setPlay(false);\r\n                    taskList.forEach((id)=>{\r\n                        clearTimeout(id);\r\n                    });\r\n                    \r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n            }}>{!isPlay ? 'Play' : 'Stop'}</_Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ScoreContPreviewTab;\r\n\r\nconst _WrapInterval = styled.div`\r\n    display: inline-block;\r\n    background-color: #e7e7e7;\r\n    width: 60px;\r\n    height: calc(100% - 140px);\r\n    vertical-align: top;\r\n    margin-top: 100px;\r\n    overflow-y: hidden;\r\n`;\r\nconst _Interval = styled.div`\r\n    display: inline-block;\r\n    background-color: #b0d9ff;\r\n    width: 100%;\r\n    height: 12px;\r\n    font-size: 8px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    border: solid 1px #0000003b;\r\n    box-sizing: border-box;\r\n`;\r\nconst _Num = styled.span`\r\n    color: #7a7a7a;\r\n`;\r\nconst _SoundName = styled.span`\r\n    color: #3740c0;\r\n`;\r\nconst _WrapTimeLine = styled.div`\r\n    display: inline-block;\r\n    background-color: black;\r\n    width: calc(100% - 60px);\r\n    height: calc(100% - 40px);\r\n    vertical-align: top;\r\n`;\r\nconst _Measure = styled.div`\r\n    display: inline-block;\r\n    background-color: #ffffffbe;\r\n    width: 100%;\r\n    height: 40px;\r\n`;\r\nconst _BlockLine = styled.div`\r\n    display: inline-block;\r\n    background-color: #9e6363a2;\r\n    width: 100%;\r\n    height: 60px;\r\n    position: relative;\r\n    overflow-x: hidden;\r\n`;\r\nconst _Block = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: #0077ff67;\r\n    left: ${(props) => props.pos}px;\r\n    width: ${(props) => props.width}px;\r\n    height: 100%;\r\n    /* color: #002575d1; */\r\n    text-align: center;\r\n    border: solid 1px #0077ffd5;\r\n    opacity: ${(props) => props.isActive ? '1' : '0.5'};\r\n    & * {\r\n        display: inline-block;\r\n        width: 100%;\r\n        font-size: 25px;\r\n        font-weight: 600;\r\n    }\r\n`;\r\nconst _Sus = styled.span`\r\n    color: #ffffffd1;\r\n`;\r\nconst _ChordName = styled.span`\r\n    color: #002575d1;\r\n`;\r\n\r\n\r\nconst _TableWrap = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: calc(100% - 100px);\r\n    overflow-x: auto;\r\n    overflow-y: auto;\r\n`;\r\n\r\nconst _Table = styled.div<{\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    background-color: #000000;\r\n    width: ${(props) => props.width}px;\r\n    /* height: 100%; */\r\n    text-align: left;\r\n    position: relative;\r\n    white-space: nowrap;\r\n`;\r\n\r\nconst _Box = styled.div<{\r\n    isActive: boolean;\r\n    pos: number;\r\n    width: number;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${props => props.pos}px;\r\n    background-color: #0000ff2d;\r\n    /* border-right: solid 3px #0004dfc1; */\r\n    box-sizing: border-box;\r\n    width: ${(props) => props.width}px;\r\n    height: 1056px;\r\n    opacity: ${(props) => props.isActive ? '1' : '0.5'};\r\n`;\r\n\r\nconst _Line = styled.div<{\r\n    soundIndex: number;\r\n}>`\r\n    display: table;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 12px;\r\n    background-color: ${(props) => {\r\n        switch (props.soundIndex) {\r\n            case 0: return '#ffffff23';\r\n            case 1: return '#dadfe423';\r\n            case 2: return '#e9e9e923';\r\n            case 3: return '#dadfe423';\r\n            case 4: return '#e9e9e923';\r\n            case 5: return '#dfdfdf23';\r\n            case 6: return '#dadfe423';\r\n            case 7: return '#e9e9e923';\r\n            case 8: return '#dadfe423';\r\n            case 9: return '#e9e9e923';\r\n            case 10: return '#dadfe423';\r\n            case 11: return '#e9e9e923';\r\n        }\r\n        return '#a00';\r\n    }};\r\n    /* margin-bottom: 1px; */\r\n`;\r\nconst _Notes = styled.div<{\r\n    pos: number;\r\n    width: number;\r\n    layer: 'left' | 'right';\r\n    isActive: boolean;\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${(props) => props.pos}px;\r\n    width: ${(props) => props.width}px;\r\n    height: 100%;\r\n    background-color: ${(props) => props.layer == 'left' ? '#e95500c8' : '#d6007dd3'};\r\n    ${(props) => props.isActive ? css`\r\n        background-color: #dddd00;\r\n        box-shadow: 2px 2px 25px 4px #ffe81b47;\r\n    ` : ''}\r\n    transition: background-color 200ms, box-shadow 1000ms;\r\n    border: solid 1px #666666;\r\n    box-sizing: border-box;\r\n    font-size: 8px;\r\n    font-weight: 600;\r\n    padding-left: 2px;\r\n    color: #ffffff;\r\n    border-radius: 2px;\r\n    /* &:hover {\r\n        background-color: #dddd00;\r\n        box-shadow: 2px 2px 15px 4px #ffe81b47;\r\n    } */\r\n`;\r\n\r\nconst _Current = styled.div<{\r\n    pos: number\r\n}>`\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: ${(props) => props.pos}px;\r\n    width: 2px;\r\n    height: 1056px;\r\n    background-color: red;\r\n        box-shadow: 2px 2px 15px 4px #ff727290;\r\n    z-index: 99;\r\n`;\r\n\r\n\r\nconst _Button = styled.div<{\r\n}>`\r\n    display: inline-block;\r\n    padding: 0 10px 0 10px;\r\n    background-color: #808080;\r\n    min-width: 150px;\r\n    height: 35px;\r\n    font-size: 22px;\r\n    font-weight: 600;\r\n    line-height: 30px;\r\n    color: #4e4e4e;\r\n    text-align: center;\r\n    border: solid 1px #636363;\r\n    border-radius: 4px;\r\n    &:hover {\r\n        background-color: #afafaf;\r\n    }\r\n`","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContThemaTab from './contTabs/thema/ScoreContThemaTab';\r\nimport ScoreContTuneTab from './contTabs/tune/ScoreContTuneTab';\r\nimport ScoreContPreviewTab from './contTabs/preview/ScoreContPreviewTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isScoreEdit = state.noteData.dataList.length === 0;\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: isScoreEdit,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Tune', disable: isScoreEdit, cont: <ScoreContTuneTab /> },\r\n                    { name: 'Thema', disable: isScoreEdit, cont: <ScoreContThemaTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: isScoreEdit, cont: <ScoreContPreviewTab/> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST, SymbolKey, SymbolParams, SymbolType, SYMBOL_PARAMS_LIST, TimeSignatures } from \"contents/common/define\";\r\nimport { applyOnChord, getSymbolParams, loadSampler } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache, DetailChange, DetailFixed, LoginParams, ChordPaletteState, ChangeType, ModulateRelation, Key12Info, TempoRelation, ThemaIndexedElement, ThemaDataTree, ThemaState, BackingPattern, BackingVoicing, BTPattern, BTVoicing, BTSustain, VoicingTargetType, VoicingTargetCondition, Dialog } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    public setLoginParams = (login: LoginParams) => {\r\n        this.dispatch(ActionType.SET_LOGIN, { login });\r\n    }\r\n\r\n    public callDialog = (left: number, top: number, contents: JSX.Element, arg?: object) => {\r\n        const dialog: Dialog = { left, top, contents, arg };\r\n        this.dispatch(ActionType.SET_DIALOG, { dialog });\r\n    }\r\n\r\n    public closeDialog = () => {\r\n        this.dispatch(ActionType.SET_DIALOG, { dialog: { ...this.state.dialog, contents: null } });\r\n    }\r\n\r\n    public setDinamicCache = (dinamicCache: null | object) => {\r\n        this.dispatch(ActionType.DINAMIC_CACHE, { dinamicCache });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: null | NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public setSampler = (sample: object) => {\r\n        const sampler = loadSampler(sample);\r\n        this.dispatchBase({ type: ActionType.SET_SAMPLER, payload: { sampler } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n                // reffer.style.width = 'inherit';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.TRANSPLANT\r\n            });\r\n        },\r\n        setCloneCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneRange: [focusIndex, focusIndex], editMode: EditMode.CLONE, cloneDataList: []\r\n            });\r\n        },\r\n        setCloneRange: (index: number) => {\r\n            const cloneRange = this.state.noteState.cloneRange;\r\n            cloneRange[1] = index;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneRange\r\n            });\r\n        },\r\n        insertCloneData: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            const cloneDataList = this.state.noteState.cloneDataList;\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cloneDataList.forEach((cloneData, i) => {\r\n                dataList.splice(focusIndex + 1 + i, 0, cloneData);\r\n                // cacheList.splice(focusIndex + 1, i, {} as ScoreCache);\r\n            });\r\n            this.score.setNoteData({\r\n                ...this.state.noteData,\r\n                dataList\r\n            });\r\n            // for(let i = focusIndex + 1; i < focusIndex + 1 + cloneDataList.length; i ++) {\r\n            //     this.score.apllyFlasah(i);\r\n            // }\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneDataList: []\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        releaseCloneCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                cloneRange: [], editMode: EditMode.NORMAL\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n\r\n        addNoteElement: (type: TypeNoteElement, detail: DetailSection | DetailChord | DetailChange) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, { type, detail });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addChangeElement: () => {\r\n            // const detail = { type: ChangeType.NONE } as DetailChange;\r\n            // const mod:ChangeModulation = {\r\n            //     relation: ModulateRelation.DOMINANT,\r\n            //     value: 0,\r\n            // }\r\n            const detail = {\r\n                changeType: null,\r\n                modulateRelation: null,\r\n                domminantValue: 0,\r\n                keyAdjust: 0,\r\n                tempoRelation: null,\r\n                tempoDiff: 0,\r\n                tempoRate: 0,\r\n                tempoAbsolute: 0,\r\n                beat: null\r\n            } as DetailChange;\r\n            this.score.addNoteElement(TypeNoteElement.Change, detail);\r\n        },\r\n        addChordElement: () => {\r\n            const noteState = this.state.noteState;\r\n            const curIndex = noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    // degreeIndex: -1,\r\n                    // isFlat: false,\r\n                    molecule: null,\r\n                    denominator: null,\r\n                    symbolKey: SymbolKey.MAJOR,\r\n                    sustain: noteState.defaultSustain,\r\n                    headAdjust: 0,\r\n                    tailAdjust: 0,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [[[false]]],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [[[false]]],\r\n                                vels: [5]\r\n                            }\r\n                        ],\r\n                        isUsePedal: false\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                // this.state.noteState.focusIndex++;\r\n                const focusIndex = curIndex + 1;\r\n                // this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                this.score.setNoteState({ ...this.state.noteState, focusIndex });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            // let degreeIndex = detail.degreeIndex;\r\n            // if (degreeIndex == -1) {\r\n            //     degreeIndex = 0;\r\n            // }\r\n            let molecule = detail.molecule;\r\n            if (molecule == null) {\r\n                molecule = { rootIndex: 0, isFlat: false };\r\n            }\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    // rootIndex: degreeIndex,\r\n                    // isFlat: detail.isFlat,\r\n                    molecule,\r\n                    denominator: detail.denominator,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                    headAdjust: detail.headAdjust,\r\n                    tailAdjust: detail.tailAdjust,\r\n                } as ChordPaletteState\r\n            });\r\n        },\r\n\r\n        callSectionEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailSection;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SECTION_PALETTE });\r\n        },\r\n\r\n        callChangeEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChange;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHANGE_PALETTE });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const init = this.state.noteState.cacheList[focusIndex].init;\r\n            const backing = detail.backing;\r\n            const molecule = detail.molecule as Key12Info;\r\n            const backingState: BackingEditorState = {\r\n                target: \"note\",\r\n                isEditPattern: true,\r\n                isDispVoicing: true,\r\n                molecule: { rootIndex: molecule.rootIndex + init.keyIndex, isFlat: molecule.isFlat },\r\n                denominator: detail.denominator,\r\n                symbolKey: detail.symbolKey,\r\n                sustain: detail.sustain,\r\n                headAdjust: detail.headAdjust,\r\n                tailAdjust: detail.tailAdjust,\r\n                channelRowSize: backing.layers[0].table.length,\r\n                useChannels: JSON.parse(JSON.stringify(backing.useChannels)),\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: JSON.parse(JSON.stringify(backing.layers)),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        },\r\n\r\n        callThemaAccessor: () => {\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.THEMA_ACCESSOR });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * セクションエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public section = {\r\n        setSectionParam: (labelName: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    labelName\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * チェンジエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public change = {\r\n        applyChangeParams: (changeType: ChangeType, modulateRelation: null | ModulateRelation, domminantValue: number, keyAdjust: number,\r\n            tempoRelation: null | TempoRelation, tempoDiff: number, tempoRate: number, tempoAbsolute: number, beat: null | TimeSignatures) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    changeType,\r\n                    modulateRelation,\r\n                    domminantValue,\r\n                    keyAdjust,\r\n                    tempoRelation,\r\n                    tempoDiff,\r\n                    tempoRate,\r\n                    tempoAbsolute,\r\n                    beat\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    // degreeIndex: editorState.rootIndex,\r\n                    // isFlat: editorState.isFlat,\r\n                    molecule: editorState.molecule,\r\n                    denominator: editorState.denominator,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                    headAdjust: editorState.headAdjust,\r\n                    tailAdjust: editorState.tailAdjust,\r\n                } as DetailChord\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        setPaletteState: (paletteState: BackingEditorState) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            this.score.setNoteState({ ...this.state.noteState, backingPaletteState: backing });\r\n        },\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !backing.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        setChannelRowSize: (size: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.channelRowSize = size;\r\n            backing.layers.forEach((layer) => {\r\n                const table: boolean[][][] = new Array<boolean[][]>(size);\r\n                console.log('★★★' + table.length);\r\n                for (let i = 0; i < table.length; i++) {\r\n                    table[i] = new Array<boolean[]>(layer.lens.length);\r\n                    console.log('☆☆☆☆☆☆');\r\n                    for (let j = 0; j < table[i].length; j++) {\r\n                        table[i][j] = new Array<boolean>(1);\r\n                        table[i][j][0] = false;\r\n                    }\r\n                }\r\n                layer.table = table;\r\n            });\r\n            this.score.setNoteState({ ...this.state.noteState, backingPaletteState: backing });\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backing = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const baseLayers = backing.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backing.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        play: (isScore: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                editMode: EditMode.PREVIEW, backingThreads: threads\r\n            });\r\n            let totalTime = 0;\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            // const curDetail  = dataList[focusIndex].detail as DetailChord;\r\n            const pastTime = this.state.noteState.cacheList[focusIndex].progress.headMSec;\r\n\r\n            const audioHead = this.state.noteState.ensembleInfo.startPosition;\r\n\r\n            // Audioファイルが指定されている場合のみ再生\r\n            if (this.state.noteState.ensembleInfo.fileURL !== '') {\r\n                const audio = this.state.noteState.ensembleInfo.audio;\r\n                audio.currentTime = (audioHead + pastTime) * 0.001;\r\n                audio.play();\r\n            }\r\n            const curTime = new Date().getTime();\r\n            const limitIndex = isScore ? dataList.length : focusIndex + 1;\r\n            for (let i = focusIndex; i < limitIndex; i++) {\r\n                const data = dataList[i];\r\n\r\n\r\n                // フォーカスを更新\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        if (isScore && [TypeNoteElement.Chord, TypeNoteElement.Fixed].includes(data.type)) {\r\n                            // const hasNext = this.score.focusNextElement();\r\n                            // if (!hasNext) {\r\n                            //     this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                            // }\r\n                            const [editMode, next] =\r\n                                data.type == TypeNoteElement.Fixed ?\r\n                                    [EditMode.NORMAL, focusIndex] : [EditMode.PREVIEW, i];\r\n                            this.score.setNoteState({ ...this.state.noteState, focusIndex: next, editMode });\r\n                        }\r\n                    }, totalTime)\r\n                );\r\n                if (data.type == TypeNoteElement.Chord) {\r\n                    const detail = data.detail as DetailChord;\r\n\r\n                    const cache = this.state.noteState.cacheList[i];\r\n                    const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n                    if (detail.molecule != null && detail.denominator != null) {\r\n                        applyOnChord(symbol, detail.molecule.rootIndex, detail.denominator.rootIndex);\r\n                    }\r\n                    const intervals = symbol?.intervals as number[];\r\n                    const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n                    const backing: BackingScript = !isScore ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                        : detail.backing;\r\n                    const sampler = this.state.sampler;\r\n                    const tempo = cache.init.tempo;\r\n                    // 1小節の長さミリ秒\r\n                    const barMs = 60000 / tempo * 4;\r\n                    const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                    const adjustOverlap = barMs / 32;\r\n\r\n                    // バッキングエディタの場合は、1つの要素で止める\r\n                    if (!isScore) {\r\n                        threads.push(\r\n                            setTimeout(() => {\r\n                                this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n\r\n                            }, totalTime + boxMs)\r\n                        )\r\n                    }\r\n                    for (let i = 0; i < 2; i++) {\r\n                        let headMs = 0;\r\n                        const layer = backing.layers[i];\r\n                        // 音価のループ\r\n                        layer.lens.forEach((lenBean, j) => {\r\n\r\n                            const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                            let curLenMs = barMs / lenValue;\r\n                            if (lenBean.isHalf) {\r\n                                curLenMs *= 1.5;\r\n                            }\r\n                            backing.useChannels.forEach((channel, k) => {\r\n                                layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                    if (notes && detail.molecule != null) {\r\n                                        const degreeIndex = detail.molecule.rootIndex;\r\n                                        const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                        const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                        const octave = Math.floor(soundIndex / 12);\r\n                                        const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                        const soundFullName = root + octave;\r\n                                        const velocity = 0.5 * layer.vels[j] / 10;\r\n                                        const head = headMs + curLenMs / 3 * l;\r\n                                        const tail = !backing.isUsePedal ?\r\n                                            //ペダル未使用時\r\n                                            head + curLenMs :\r\n                                            //ペダル使用時\r\n                                            boxMs + adjustOverlap\r\n                                            ;\r\n                                        const lag = new Date().getTime() - curTime;\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                                soundUseList[soundIndex]++;\r\n                                            }, totalTime + head - lag)\r\n                                        );\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                soundUseList[soundIndex]--;\r\n                                                if (soundUseList[soundIndex] == 0) {\r\n                                                    sampler.triggerRelease(soundFullName);\r\n                                                }\r\n                                            }, totalTime + tail - lag)\r\n                                        );\r\n                                    }\r\n                                });\r\n                            });\r\n                            headMs += curLenMs;\r\n                        });\r\n                    }\r\n                    totalTime += boxMs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public thema = {\r\n\r\n        setThemaeData: (data: ThemaDataTree) => {\r\n            this.dispatch(ActionType.SET_THEMA_DATA, { data: { ...data } });\r\n        },\r\n        setThemaState: (themaState: ThemaState) => {\r\n            this.dispatch(ActionType.SET_THEMA_STATE, { themaState });\r\n        },\r\n\r\n        callBackingPatternEditor: () => {\r\n            const cur = this.thema.getFocusElement();\r\n            const sustainEl = cur.parent as ThemaIndexedElement;\r\n            const sustain = sustainEl.reffer as BTSustain;\r\n            const form = this.state.themaState.form.pattern;\r\n            const patternDef: BackingPattern = form.src == '' ? {\r\n                layers: [\r\n                    {\r\n                        lens: [{\r\n                            len: BACKING_LEN_TYPE.LEN4,\r\n                            isDiv3: false,\r\n                            isHalf: false\r\n                        }],\r\n                        side: BACKING_SIDE.LEFT,\r\n                        table: [[[false]]],\r\n                        vels: [5]\r\n                    },\r\n                    {\r\n                        lens: [{\r\n                            len: BACKING_LEN_TYPE.LEN4,\r\n                            isDiv3: false,\r\n                            isHalf: false\r\n                        }],\r\n                        side: BACKING_SIDE.RIGHT,\r\n                        table: [[[false]]],\r\n                        vels: [5]\r\n                    }\r\n                ],\r\n                isUsePedal: false\r\n            } : JSON.parse(form.src);\r\n            const backingState: BackingEditorState = {\r\n                target: \"thema-pattern\",\r\n                isDispVoicing: false,\r\n                isEditPattern: true,\r\n                molecule: { rootIndex: 0, isFlat: false },\r\n                denominator: null,\r\n                symbolKey: SymbolKey.MAJOR,\r\n                sustain: sustain.beat,\r\n                headAdjust: sustain.headAdjust,\r\n                tailAdjust: sustain.tailAdjust,\r\n                channelRowSize: patternDef.layers[0].table.length,\r\n                isUsePedal: patternDef.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                useChannels: [],\r\n                layers: patternDef.layers.slice(),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        },\r\n        callBackingVoicingEditor: () => {\r\n            const cur = this.thema.getFocusElement();\r\n            const patternEl = cur.parent?.parent?.parent as ThemaIndexedElement;\r\n            const sustainEl = patternEl.parent as ThemaIndexedElement;\r\n            const pattern = patternEl.reffer as BTPattern;\r\n            const sustain = sustainEl.reffer as BTSustain;\r\n            const patternDef = pattern.def as BackingPattern;\r\n            const form = this.state.themaState.form.voicing;\r\n            const VoicingDef: BackingVoicing = form.src == '' ? {\r\n                useChannels: []\r\n            } : JSON.parse(form.src);\r\n            const backingState: BackingEditorState = {\r\n                target: \"thema-voicing\",\r\n                isDispVoicing: true,\r\n                isEditPattern: false,\r\n                molecule: { rootIndex: 0, isFlat: false },\r\n                denominator: null,\r\n                symbolKey: SymbolKey.MAJOR,\r\n                sustain: sustain.beat,\r\n                headAdjust: sustain.headAdjust,\r\n                tailAdjust: sustain.tailAdjust,\r\n                channelRowSize: patternDef.layers[0].table.length,\r\n                isUsePedal: patternDef.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                useChannels: VoicingDef.useChannels.slice(),\r\n                layers: patternDef.layers,\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        },\r\n\r\n        buildIndex: () => {\r\n            const themaState = this.state.themaState;\r\n            const themaTree = this.state.themaDataTree;\r\n            const dataIndexies: ThemaIndexedElement[] = [];\r\n\r\n            const rootBean: ThemaIndexedElement = {\r\n                isClose: false,\r\n                ChildCnt: themaTree.sustains.length,\r\n                type: 'root',\r\n                reffer: themaTree,\r\n                parent: null\r\n            }\r\n            dataIndexies.push(rootBean);\r\n\r\n            // 拍リストを構成\r\n            themaTree.sustains.forEach((sustain) => {\r\n                const sustainBean: ThemaIndexedElement = {\r\n                    isClose: false,\r\n                    ChildCnt: sustain.patterns.length,\r\n                    type: 'sustain',\r\n                    reffer: sustain,\r\n                    parent: rootBean\r\n                };\r\n                dataIndexies.push(sustainBean);\r\n                sustain.patterns.forEach((pattern) => {\r\n                    const patternBean: ThemaIndexedElement = {\r\n                        isClose: false,\r\n                        ChildCnt: pattern.tgtTypes.length,\r\n                        type: 'pattern',\r\n                        reffer: pattern,\r\n                        parent: sustainBean\r\n                    };\r\n                    dataIndexies.push(patternBean);\r\n                    pattern.tgtTypes.forEach((category) => {\r\n                        const categoryBean: ThemaIndexedElement = {\r\n                            isClose: false,\r\n                            ChildCnt: category.conditions.length,\r\n                            type: 'category',\r\n                            reffer: category,\r\n                            parent: patternBean\r\n                        };\r\n                        dataIndexies.push(categoryBean);\r\n                        category.conditions.forEach((condition) => {\r\n                            const conditionBean: ThemaIndexedElement = {\r\n                                isClose: false,\r\n                                ChildCnt: condition.voicings.length,\r\n                                type: 'condition',\r\n                                reffer: condition,\r\n                                parent: categoryBean\r\n                            };\r\n                            dataIndexies.push(conditionBean);\r\n                            condition.voicings.forEach((voicing) => {\r\n                                const voicingBean: ThemaIndexedElement = {\r\n                                    isClose: false,\r\n                                    ChildCnt: 0,\r\n                                    type: 'voicing',\r\n                                    reffer: voicing,\r\n                                    parent: conditionBean\r\n                                };\r\n                                dataIndexies.push(voicingBean);\r\n                            });\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n\r\n            if (themaState.focusRef !== null) {\r\n                dataIndexies.forEach((data, i) => {\r\n                    if (data.reffer == themaState.focusRef) {\r\n                        themaState.focusIndex = i;\r\n                        themaState.focusRef = null;\r\n                        themaState.isCreate = true;\r\n                    }\r\n                });\r\n            }\r\n            this.thema.setThemaState({ ...themaState, themaCacheList: dataIndexies });\r\n        },\r\n        applyBackingPattern: () => {\r\n            const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const form = this.state.themaState.form.pattern;\r\n            const def: BackingPattern = {\r\n                layers: editor.layers.slice(),\r\n                isUsePedal: editor.isUsePedal\r\n            }\r\n            form.src = JSON.stringify(def);\r\n            this.thema.setThemaState(this.state.themaState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n        },\r\n        applyBackingVoicing: () => {\r\n            const editor = this.state.noteState.backingPaletteState as BackingEditorState;\r\n            const form = this.state.themaState.form.voicing;\r\n            const def: BackingVoicing = {\r\n                useChannels: editor.useChannels\r\n            }\r\n            form.src = JSON.stringify(def);\r\n            this.thema.setThemaState(this.state.themaState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n        },\r\n\r\n        getFocusElement: (): ThemaIndexedElement => {\r\n            return this.state.themaState.themaCacheList[this.state.themaState.focusIndex];\r\n        },\r\n\r\n        addChildSustain: () => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const bean: BTSustain = {\r\n                beat: 1,\r\n                headAdjust: 0,\r\n                tailAdjust: 0,\r\n                patterns: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.sustain;\r\n            form.beat = null;\r\n            form.headAdjust = 0;\r\n            form.tailAdjust = 0;\r\n            this.thema.setThemaState(themaState);\r\n            thema.sustains.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildPattern: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as BTSustain;\r\n            const bean: BTPattern = {\r\n                name: 'pattern1',\r\n                def: null,\r\n                tgtTypes: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.pattern;\r\n            form.name = '';\r\n            form.def = null;\r\n            form.src = '';\r\n            this.thema.setThemaState(themaState);\r\n            reffer.patterns.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildCategory: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as BTPattern;\r\n            const bean: VoicingTargetType = {\r\n                symbolType: SymbolType.TRIAD,\r\n                conditions: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.category;\r\n            form.category = null;\r\n            this.thema.setThemaState(themaState);\r\n            reffer.tgtTypes.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildCondition: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as VoicingTargetType;\r\n            const bean: VoicingTargetCondition = {\r\n                maxRootIndex: 11,\r\n                minRootIndex: 0,\r\n                tgtSymbols: [],\r\n                voicings: []\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.condition;\r\n            form.maxRootIndex = 0;\r\n            form.maxRootIndex = 11;\r\n            form.tgtSymbols = [];\r\n            this.thema.setThemaState(themaState);\r\n            reffer.conditions.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        },\r\n\r\n        addChildVoicing: (data: ThemaIndexedElement) => {\r\n            const thema = this.state.themaDataTree;\r\n            const themaState = this.state.themaState;\r\n            const reffer = data.reffer as VoicingTargetCondition;\r\n            const bean: BTVoicing = {\r\n                def: null\r\n            };\r\n            themaState.focusRef = bean;\r\n            const form = themaState.form.voicing;\r\n            form.def = null;\r\n            form.src = '';\r\n            this.thema.setThemaState(themaState);\r\n            reffer.voicings.push(bean);\r\n            this.thema.setThemaeData(thema);\r\n        }\r\n    }\r\n\r\n    public preview = {\r\n        play: () => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                editMode: EditMode.PREVIEW, backingThreads: threads\r\n            });\r\n            let totalTime = 0;\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList;\r\n            const pastTime = 0;\r\n\r\n            const audioHead = this.state.noteState.ensembleInfo.startPosition;\r\n\r\n            // Audioファイルが指定されている場合のみ再生\r\n            if (this.state.noteState.ensembleInfo.fileURL !== '') {\r\n                const audio = this.state.noteState.ensembleInfo.audio;\r\n                audio.currentTime = (audioHead + pastTime) * 0.001;\r\n                audio.play();\r\n            }\r\n            const curTime = new Date().getTime();\r\n            const limitIndex = dataList.length;\r\n            for (let i = focusIndex; i < limitIndex; i++) {\r\n                const data = dataList[i];\r\n\r\n                if (data.type == TypeNoteElement.Chord) {\r\n                    const detail = data.detail as DetailChord;\r\n\r\n                    const cache = this.state.noteState.cacheList[i];\r\n                    const symbol: SymbolParams = { ...(getSymbolParams(detail.symbolKey) as SymbolParams) };\r\n                    if (detail.molecule != null && detail.denominator != null) {\r\n                        applyOnChord(symbol, detail.molecule.rootIndex, detail.denominator.rootIndex);\r\n                    }\r\n                    const intervals = symbol?.intervals as number[];\r\n                    const backing: BackingScript = detail.backing;\r\n                    const sampler = this.state.sampler;\r\n                    const tempo = cache.init.tempo;\r\n                    // 1小節の長さミリ秒\r\n                    const barMs = 60000 / tempo * 4;\r\n                    const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                    const adjustOverlap = barMs / 32;\r\n\r\n                    for (let i = 0; i < 2; i++) {\r\n                        let headMs = 0;\r\n                        const layer = backing.layers[i];\r\n                        // 音価のループ\r\n                        layer.lens.forEach((lenBean, j) => {\r\n\r\n                            const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                            let curLenMs = barMs / lenValue;\r\n                            if (lenBean.isHalf) {\r\n                                curLenMs *= 1.5;\r\n                            }\r\n                            backing.useChannels.forEach((channel, k) => {\r\n                                layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                    if (notes && detail.molecule != null) {\r\n                                        const degreeIndex = detail.molecule.rootIndex;\r\n                                        const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                        const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                        const octave = Math.floor(soundIndex / 12);\r\n                                        const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                        const soundFullName = root + octave;\r\n                                        const velocity = 0.5 * layer.vels[j] / 10;\r\n                                        const head = headMs + curLenMs / 3 * l;\r\n                                        const tail = !backing.isUsePedal ?\r\n                                            //ペダル未使用時\r\n                                            head + curLenMs :\r\n                                            //ペダル使用時\r\n                                            boxMs + adjustOverlap\r\n                                            ;\r\n                                        const lag = new Date().getTime() - curTime;\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                                soundUseList[soundIndex]++;\r\n                                            }, totalTime + head - lag)\r\n                                        );\r\n                                        threads.push(\r\n                                            setTimeout(() => {\r\n                                                soundUseList[soundIndex]--;\r\n                                                if (soundUseList[soundIndex] == 0) {\r\n                                                    sampler.triggerRelease(soundFullName);\r\n                                                }\r\n                                            }, totalTime + tail - lag)\r\n                                        );\r\n                                    }\r\n                                });\r\n                            });\r\n                            headMs += curLenMs;\r\n                        });\r\n                    }\r\n                    totalTime += boxMs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { API_DOMAIN } from 'contents/common/define';\r\nimport { sendQueryRequestToAPI } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './LoginFrame.css';\r\n\r\nconst LoginFrame = () => {\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n\r\n    const [loginType, setLoginType] = useState<'guest' | 'login' | 'create'>('guest');\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [message, setMessage] = useState(' ');\r\n    const [isError, setError] = useState(false);\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    const enterDisable = (): boolean => {\r\n        switch (loginType) {\r\n            case 'guest': return false;\r\n            case 'login': {\r\n                return userName == '' || userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password == '' || password.length < 5 || password.length > 15 || !isHanEisu(password);\r\n            }\r\n            case 'create': {\r\n                return userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password.length < 5 || password.length > 15 || !isHanEisu(password) ||\r\n                    passConfirm.length < 5 || passConfirm.length > 15 || !isHanEisu(passConfirm);\r\n            }\r\n        }\r\n    }\r\n    return (<>\r\n        <div id=\"logo\"><span>Virtual Harmonizer</span></div>\r\n        <div id=\"login-frame\" ref={ref}>\r\n            <div className=\"guide\">\r\n                <span>Start to Virtual Harmonizer</span>\r\n            </div>\r\n            <div className=\"type\">\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"guest\"\r\n                    name=\"guest\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"login\"\r\n                    name=\"login\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"create\"\r\n                    name=\"create account\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setMessage('')}\r\n                />\r\n            </div>\r\n            <div className=\"body\">\r\n                <TextForm\r\n                    label=\"user name\"\r\n                    stateValue={userName}\r\n                    stateSetter={setUserName}\r\n                    isMask={false}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password\"\r\n                    stateValue={password}\r\n                    stateSetter={setPassword}\r\n                    isMask={true}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password confirm\"\r\n                    stateValue={passConfirm}\r\n                    stateSetter={setPassConfirm}\r\n                    isMask={true}\r\n                    isDisable={!['create'].includes(loginType)}\r\n                />\r\n            </div>\r\n            <div className=\"message\">\r\n                <span className={isError ? 'error' : ''}>{message}</span>\r\n            </div>\r\n            <div\r\n                className={['opr', (enterDisable() || isLoading) ? 'disable' : ''].join(' ')}\r\n            >\r\n                <button\r\n                    onClick={() => {\r\n\r\n                        const login = (id: number, name: string) => {\r\n                            ref.current.style.opacity = '0';\r\n                            setTimeout(() => {\r\n                                dispatcher.setLoginParams({\r\n                                    ...state.login,\r\n                                    isLogin: true,\r\n                                    id,\r\n                                    name\r\n                                });\r\n                            }, 300);\r\n                        }\r\n                        setLoading(true);\r\n                        setError(false);\r\n                        setMessage('Connect to server...');\r\n                        switch (loginType) {\r\n                            case 'guest': {\r\n                                login(-1, 'Guest');\r\n                                setLoading(false);\r\n                            }\r\n                                break;\r\n                            case 'login': {\r\n\r\n                                sendQueryRequestToAPI('select', `SELECT * FROM user_tbl where name = '${userName}' and password = '${password}'`)\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(results => {\r\n                                        console.log(results.length);\r\n                                        const isExist = results.length > 0;\r\n                                        if (isExist) {\r\n                                            login(results[0].id, results[0].name);\r\n                                        } else {\r\n                                            setError(true);\r\n                                            setMessage('The login attempt failed. Either the user ID or password is invalid.');\r\n                                        }\r\n                                        setLoading(false);\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                        setLoading(false);\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'create': {\r\n\r\n                                if (password != passConfirm) {\r\n                                    setError(true);\r\n                                    setMessage(`Confirmation passwords don't match.`);\r\n                                    setLoading(false);\r\n                                    break;\r\n                                }\r\n\r\n                                (async () => {\r\n                                    let response = await sendQueryRequestToAPI('select', `SELECT count(*) as cnt FROM user_tbl where name = '${userName}'`);\r\n                                    let results = await response.json();\r\n                                    console.log(JSON.stringify(results[0].cnt));\r\n                                    const isExist = results[0].cnt > 0;\r\n                                    if (isExist) {\r\n                                        setError(true);\r\n                                        setMessage('That user id has already been recorded.');\r\n                                    } else {\r\n                                        response = await sendQueryRequestToAPI('update', `INSERT INTO user_tbl(name, password) VALUES('${userName}', '${password}')`);\r\n                                        results = await response.json();\r\n                                        setMessage('');\r\n                                        alert('You have successfully created an account!');\r\n                                        setLoginType('login');\r\n                                    }\r\n                                    setLoading(false);\r\n                                })();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }}\r\n                >\r\n                    enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nconst LoginTypeSwitch = (\r\n    props: {\r\n        name: string,\r\n        curLoginType: string,\r\n        loginType: string,\r\n        setLoginType: Function,\r\n        resetError: Function\r\n    }\r\n) => {\r\n    const isSelected = props.loginType == props.curLoginType;\r\n    return (\r\n        <button\r\n            className={isSelected ? 'active' : ''}\r\n            onClick={() => {\r\n                if (!isSelected) {\r\n                    props.setLoginType(props.curLoginType);\r\n                    props.resetError();\r\n                }\r\n            }}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nconst TextForm = (\r\n    props: {\r\n        label: string,\r\n        stateValue: string,\r\n        stateSetter: Function,\r\n        isMask: boolean,\r\n        isDisable: boolean\r\n    }\r\n) => {\r\n    useEffect(() => {\r\n        if (props.isDisable) {\r\n            props.stateSetter('');\r\n        }\r\n    }, [props.isDisable]);\r\n    const strLen = props.stateValue.length;\r\n    return (\r\n        <div className={['form', props.isDisable ? 'disable' : ''].join(' ')}>\r\n            <span>{props.label}:</span>\r\n            <input\r\n                className={[\r\n                    !props.isDisable && strLen == 0 ? 'required' : '',\r\n                    !props.isDisable && (strLen < 5 || strLen > 15) ? 'range' : '',\r\n                    !props.isDisable && !isHanEisu(props.stateValue) ? 'ban' : ''\r\n                ].join(' ')}\r\n                type={props.isMask ? 'password' : 'text'}\r\n                value={props.stateValue}\r\n                onChange={(e) => props.stateSetter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isHanEisu = (str: string) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[A-Za-z0-9_!@]*$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LoginFrame;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { useContext } from 'react';\r\nimport './UserPlate.css';\r\n\r\nconst UserPlate = (\r\n    props: {\r\n    }\r\n) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    return (\r\n        <div id=\"user-plate\" className={[''].join(' ')}>\r\n            <div className=\"user-name\">\r\n                <span>{state.login.name}</span>\r\n            </div>\r\n            <div\r\n                className=\"logout\"\r\n\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData({\r\n                        ...state.noteData,\r\n                        dataList: []\r\n                    });\r\n                    dispatcher.setLoginParams({\r\n                        ...state.login,\r\n                        isLogin: false,\r\n                        name: ''\r\n                    });\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 0 });\r\n                }}>\r\n                <span>LOGOUT</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPlate;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport './SamplerTab.css';\r\n\r\ntype SampleRecord = {\r\n    // 音名\r\n    soundName: string,\r\n    // レコードの利用有無\r\n    isUse: boolean,\r\n    // URL\r\n    url: string\r\n};\r\n\r\nconst SamplerTab = () => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [samples, setSamples] = useState<SampleRecord[]>();\r\n\r\n    useEffect(() => {\r\n        const samples: SampleRecord[] = [];\r\n\r\n        setSamples(samples);\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"samplertab-root\">\r\n            // サンプラーの読み込みdiv\r\n            <div className=\"loader\"></div>\r\n\r\n            // 音程リストdiv\r\n            <div className=\"list\">\r\n                <div className=\"record\">\r\n                    <div className=\"label\">E3</div>\r\n                    <input type=\"checkbox\" />\r\n                    <input type=\"text\" />\r\n                </div>\r\n                <div className=\"record\">\r\n                    <div className=\"label\">F3</div>\r\n                    <input type=\"checkbox\" />\r\n                    <input type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            // 制御ボタンdiv\r\n            <div className=\"operation\">\r\n                <button\r\n                    className={[\r\n                        'disable'\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n\r\n                    }}>Save</button>\r\n\r\n                <button\r\n                    className={[\r\n                        'disable'\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n\r\n                    }}>Reset</button>\r\n\r\n                <button onClick={() => {\r\n                }}>Build</button>\r\n            </div>\r\n            <div className=\"keyboad\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SamplerTab;\r\n","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\nimport LoginFrame from './login/LoginFrame';\r\nimport UserPlate from './user/UserPlate';\r\nimport { Sampler } from 'tone';\r\nimport SamplerTab from './systab/sampler/SamplerTab';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                {\r\n                    !state.login.isLogin ?\r\n                        <LoginFrame />\r\n                        :\r\n                        <>\r\n                            <UserPlate />\r\n                            <TabbedPane groupName=\"system-tabs\"\r\n                                tabElements={[\r\n                                    { name: 'Account', disable: true, cont: <div></div> },\r\n                                    { name: 'Palette', disable: true, cont: <div></div> },\r\n                                    { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                                    { name: 'Symbol', disable: true, cont: <div></div> },\r\n                                    { name: 'Sampler', disable: false, cont: <SamplerTab/> },\r\n                                    { name: 'Setting', disable: true, cont: <div></div> }\r\n                                ]}\r\n                                activeNo={2}\r\n                            />\r\n                        </>\r\n                }\r\n                {((): JSX.Element => {\r\n                    const dialog = state.dialog;\r\n                    if (dialog.contents != null) {\r\n                        return (\r\n                            <div className=\"dialog-cover\">\r\n                                <div\r\n                                    className=\"dialog\"\r\n                                    style={{ left: dialog.left, top: dialog.top }}\r\n                                >{dialog.contents}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    return <></>;\r\n                })()}\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, DIATONIC_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BackingScript, BACKING_LEN_TYPE, BACKING_SIDE, ChordPaletteState, CHORD_MODE, DetailChange, DetailChord, DetailSection, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    if (state.scoreTabIndex != 1 || state.dialog.contents != null) {\r\n        return;\r\n    }\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n    const selectedCache = state.noteState.cacheList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Section: {\r\n            const detail = selectedData.detail as DetailSection;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callSectionEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.SECTION_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Change: {\r\n            const detail = selectedData.detail as DetailChange;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChangeEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHANGE_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.molecule != null) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case 't': {\r\n                                dispatcher.score.callThemaAccessor();\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const scaleList = selectedCache.init.scale == 'major' ? DIATONIC_MAJOR_SCALE_LIST : DIATONIC_MINOR_SCALE_LIST;\r\n                                const diatonicChord = scaleList[Number(e.key) - 1];\r\n                                // dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                // dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n\r\n                                detail.molecule = { rootIndex: diatonicChord.degreeIndex, isFlat: diatonicChord.isFlat };\r\n                                const prevSymbolCategory = SYMBOL_PARAMS_LIST[detail.symbolKey].category;\r\n                                const newSymbolCategory = SYMBOL_PARAMS_LIST[diatonicChord.symbolKey].category;\r\n                                if (prevSymbolCategory !== newSymbolCategory) {\r\n                                    detail.backing.useChannels.length = 0;\r\n                                }\r\n                                detail.symbolKey = diatonicChord.symbolKey;\r\n                                dispatcher.score.setNoteData(state.noteData);\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case 'q': {\r\n                                dispatcher.score.setCloneCriteria();\r\n                            }\r\n                                break;\r\n                            case 'z': {\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.TRANSPLANT) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.CLONE) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'q': {\r\n                                dispatcher.score.releaseCloneCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const cloneDataList = state.noteState.cloneDataList;\r\n                                const cloneRange = state.noteState.cloneRange;\r\n                                const isReverse = cloneRange[0] > cloneRange[1];\r\n                                const start = cloneRange[isReverse ? 1 : 0];\r\n                                const end = cloneRange[isReverse ? 0 : 1];\r\n                                for (let i = start; i <= end; i++) {\r\n                                    //ディープコピー\r\n                                    cloneDataList.push(JSON.parse(JSON.stringify(dataList[i])));\r\n                                }\r\n                                dispatcher.score.setNoteState({ ...state.noteState, cloneDataList, editMode: EditMode.NORMAL });\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        // case 'ArrowRight':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.molecule?.rootIndex + 1 });\r\n                        //     break;\r\n                        // case 'ArrowLeft':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        // case '1':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const backing = state.noteState.backingPaletteState as BackingEditorState;\r\n                    const isCorrect = backing.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.play(false);\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                        // JSON取得（開発用）\r\n                        case 'z': {\r\n                            const script: BackingScript = {\r\n                                isUsePedal: backing.isUsePedal,\r\n                                layers: backing.layers,\r\n                                useChannels: backing.useChannels\r\n                            };\r\n                            alert(JSON.stringify(script));\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Change].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'f':\r\n                    dispatcher.score.addChangeElement();\r\n                    break;\r\n                case 'v': {\r\n                    console.log(state.noteState.cloneDataList);\r\n                    dispatcher.score.insertCloneData();\r\n                }\r\n                    break;\r\n                case 'w': {\r\n                    const detail = selectedData.detail as DetailChord;\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            molecule: detail.molecule,\r\n                            denominator: detail.denominator,\r\n                            // rootIndex: detail.molecule?.rootIndex,\r\n                            // isFlat: detail.isFlat,\r\n                            symbolKey: detail.symbolKey,\r\n                            sustain: detail.sustain,\r\n                        } as ChordPaletteState\r\n                    });\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    // Audioファイルが指定されている場合のみ停止\r\n                    if (state.noteState.ensembleInfo.fileURL !== '') {\r\n                        state.noteState.ensembleInfo.audio.pause();\r\n                    }\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\r\n\r\n// import Tone from 'lib/Tone.min.js';\r\n// import Tone from \"react-tone\";\r\nimport * as Tone from \"tone\";\r\n\r\nimport './desty.css';\r\nimport './App.css';\r\nimport MainFrame from 'contents/MainFrame';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    // 右クリック無効\r\n    document.oncontextmenu = function () { return false; }\r\n\r\n    window.addEventListener(\"keydown\", function (e) {\r\n      // space and arrow keys\r\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n        e.preventDefault();\r\n      }\r\n    }, false);\r\n\r\n  }, []);\r\n  return (\r\n    <MainFrame />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}