{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/common/utils.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentElementInfo.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/footer/timing/FooterTiming.tsx","contents/systab/score/contTabs/note/footer/NoteFooter.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/floatwnd/section/SectionEditor.tsx","contents/systab/score/contTabs/note/floatwnd/setting/SettingEditor.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/backing/ScoreContBackingTab.tsx","contents/systab/score/contTabs/source/ScoreContSourceTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/login/LoginFrame.tsx","contents/user/UserPlate.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSignatures","KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","tabList","contList","tabElements","forEach","tab","index","disable","undefined","selectTabIndex","id","groupName","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","SymbolType","SYMBOL_PARAMS_LIST","key","MAJOR","sortNo","MINOR","SUS4","DIM","AUG","MAJ7","SEVENTH","MIN7","MINOR_MAJ7","ADD9","MINOR_ADD9","SIXTH_9TH","MINOR_MINUS5","TRIAD","TETRAD7TH","TETRAD9TH","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","ModulateRelationType","TypeNoteElement","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","ActionType","initialState","login","isLogin","user","scoreTabIndex","noteData","scoreName","chordMode","SCALE","dataList","noteState","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","defaultSustain","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","molecule","rootIndex","isFlat","denominator","sustain","headAdjust","tailAdjust","backingPaletteState","useChannels","isUsePedal","sideIndex","selectedLenIndex","selectedChannelIndex","layers","isCorrect","backingThreads","reffers","sampler","Sampler","toDestination","soundUseList","Array","reducer","state","action","type","payload","SET_LOGIN","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","keyIndex","scale","Fixed","label","labelName","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","data","SET_DATA_LIST","SET_NOTE_STATE","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","baseScript","script","i","channelCount","length","lensSplitCount","lens","baseTable","table","y","x","BACKING_TOGGLE_MATRIX","lenIndex","channelIndex","divIndex","isUse","getDegreeRoot","rootInfo","getChordRoot","getSymbolName","symbol","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeMolRoot","degreeDenRoot","chordMolRoot","init","chordDenRoot","symbolName","isDiatonic","degreeName","chordName","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Modulation","timeSignatures","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","BACKING","some","setSelectedList","selectorElementClickAction","onContextMenu","e","INIT_PALETTE","style","left","clientX","top","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","callBackingEditor","setCriteria","callSectionEditor","deleteCurElement","menuList","getSymbolParams","getAdjustSusValue","value","ret","toString","ChordSelector","canvasRef","editorState","canvas","width","height","updatePianoView","molRootIndex","denRootIndex","ctx","getContext","list","intervals","map","denIndex","fillStyle","fillRect","WIDTH","posX","keyboadList","color","isBlack","HEIGHT","keyboad","strokeRect","save","chordList","symbolList","beatList","operationJsx","isDirect","degS","degF","chdS","chdF","isHalf","isDenominator","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getAdjustOprJsx","offset","cls","callback","Adjuster","CurrentElementInfo","inner","root","degreeRoot","chordRoot","baseBlockJsx","buildInfoBlock","title","chordBlockJsx","String","structList","len","interval","struct","sound","sectionBlockJsx","titleLabel","dataRecordList","jsxList","BackingOperation","paletteState","curSideScript","curLenBean","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","backingState","side","LEFT","RIGHT","buttonList","button","getActiveState","curLayerIndex","lineIndex","cur","back","curCellRange","getCellRange","backLenBean","j","k","backRange","isOverlapJudge","range1","range2","head","getLenSize","size","NotesMatrix","setCorrect","BackingContext","channelList","matrixLayersJsx","hasError","l","linesJsx","layer","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","curLayer","chordDetail","sustainLength","measureInner","measureLength","cnt","isLimit","limitLeft","limitJsx","BackingTable","testPlaySound","channelJsxList","channel","soundFullName","volumeList","volume","setLayerIndex","setUsePedal","StructMatrix","structTable","cols","soundName","structs","relation","soundIndex","octave","floor","isNone","structIndex","sort","a","b","setUseChannels","createContext","getChannelList","BackingEditor","BACKING_PALETTE","foocusIndex","triggerAttack","setTimeout","triggerRelease","operation","play","setCurBackingScript","Provider","FIXED_BLANK","getAdjustCls","styled","div","FooterTiming","dataCount","scrollRef","blockJsxList","setBlockJsxList","measureJsxList","setMeasureJsxList","total","setTotal","isCur","isNear","scrollTo","behavior","totalWidth","NoteFooter","InitEditor","setTempo","setRythm","setKey","setScale","setInitParam","getItemSelector","optionsJsx","display","onChange","target","Number","min","max","item","SectionEditor","span","setLabelName","section","setSectionParam","SECTION_PALETTE","SettingEditor","SETTING_EDITOR","defsus","sustainJsxList","setNoteState","EditModeBorder","PREVIEW","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","totalBeat","totalMsec","lastBar","bar","isModalBlind","ScoreContLiblaryTab","setNoteData","ScoreContBackingTab","ScoreContSourceTab","JSON","stringify","parse","ScoreTab","Dispatcher","dispatchBase","setLoginParams","apllyFlasah","backgroundColor","apllyFlashCur","apllyFlashList","releaseCriteria","getInitElement","setEditMode","addNoteElement","curIndex","addModulationElement","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","callChordSelector","line","updateLenIndex","getCurLenIndex","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","use","changeLayerIndex","baseLayers","count","cell","isProceed","threads","rec","editor","barMs","boxMs","adjustOverlap","isEnd","headMs","lenValue","replace","curLenMs","notes","tail","this","LoginTypeSwitch","loginType","curLoginType","setLoginType","resetError","TextForm","stateSetter","strLen","stateValue","isHanEisu","isMask","str","match","LoginFrame","userName","setUserName","password","setPassword","passConfirm","setPassConfirm","error","setError","enterDisable","opacity","UserPlate","MainFrame","useReducer","actionType","tabIndex","onKeyDown","selectedData","diatonicChord","fetch","mode","method","headers","Accept","body","sql","then","response","json","alert","catch","console","log","database","baseBacking","thr","clearInterval","releaseAll","KeyboardShortCutAction","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7fd7b839.chunk.js","sourcesContent":["export const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'C#/Db', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport enum TimeSignatures  {\r\n    BEAT_4ON4 = '4/4',\r\n    BEAT_2ON4 = '2/4',\r\n    BEAT_3ON4 = '3/4',\r\n    BEAT_6ON8 = '6/8',\r\n    BEAT_12ON8 = '12/8',\r\n}\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\n\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES: string[] = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey\r\n    sortNo: number;\r\n    parentNo: number;\r\n    depth: number;\r\n    name: string;\r\n    struct: string[];\r\n    fixed: string[];\r\n    intervals: number[];\r\n}\r\n\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n}\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, \"sortNo\": 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, \"sortNo\": 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, \"sortNo\": 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, \"sortNo\": 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, \"sortNo\": 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, \"sortNo\": 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, \"sortNo\": 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, \"sortNo\": 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, \"sortNo\": 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, \"sortNo\": 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, \"sortNo\": 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, \"sortNo\": 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n];\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD9TH,\r\n}\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\n\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n];","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabList: JSX.Element[] = [];\r\n    const contList: JSX.Element[] = [];\r\n    props.tabElements.forEach((tab, index) => {\r\n        tabList.push(\r\n            <TabLabel\r\n                key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                selectTab={() => selectTabIndex(index)}\r\n            />)\r\n            ;\r\n        contList.push(\r\n            <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n        );\r\n    });\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {tabList}\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {contList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabLabelProps = {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}\r\n\r\nconst TabLabel = (props: TabLabelProps) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabContentsProps = {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabContents = (props: TabContentsProps) => {\r\n    if(!props.isActive) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"tab-cont\">\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","import { SymbolKey, SYMBOL_PARAMS_LIST, TimeSignatures } from 'contents/common/define'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    login: LoginParams;\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    soundUseList: number[];\r\n}\r\n\r\nexport type LoginParams = {\r\n    isLogin: boolean,\r\n    user: string\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\n export type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE,\r\n    CONTEXT_MENU,\r\n    CHORD_PALETTE,\r\n    SECTION_PALETTE,\r\n    INIT_PALETTE,\r\n    BACKING_PALETTE,\r\n    SETTING_EDITOR,\r\n}\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    // rootIndex: number;\r\n    // isFlat: false;\r\n    molecule: Key12Info;\r\n    denominator: Key12Info | null;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain, Adjuster\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    defaultSustain: number;\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    BACKING,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    labelName: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    molecule: Key12Info | null;\r\n    denominator: Key12Info | null;\r\n    // degreeIndex: number;\r\n    // isFlat: boolean;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    headAdjust: number;\r\n    tailAdjust: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type Key12Info = {\r\n    rootIndex: number;\r\n    isFlat: boolean;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailModulation = {\r\n    modulate?: ModulateRelation;\r\n    tempo: number;\r\n    timeSignatures?: TimeSignatures;\r\n}\r\n\r\nexport type ModulateRelation = {\r\n    type: ModulateRelationType;\r\n    value: number;\r\n}\r\n\r\nexport enum ModulateRelationType {\r\n    DOMINANT = 'DOMINANT',\r\n    ABSOLUTE = 'ABSOLUTE',\r\n    PARALLEL = 'PARALLEL',\r\n    RELATIVE = 'RELATIVE'\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailModulation | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Modulation = 'modulation',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    login: {\r\n        isLogin: false,\r\n        user: ''\r\n    },\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', chordMode: CHORD_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        defaultSustain: 2,\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            // rootIndex: 0,\r\n            // isFlat: false,\r\n            molecule: {rootIndex: 0, isFlat: false},\r\n            denominator: null,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4,\r\n            headAdjust: 0,\r\n            tailAdjust: 0\r\n        },\r\n        backingPaletteState: {\r\n            useChannels: [],\r\n            isUsePedal: false,\r\n            sideIndex: 0,\r\n            selectedLenIndex: 0,\r\n            selectedChannelIndex: -1,\r\n            layers: [],\r\n            isCorrect: true\r\n        },\r\n        backingThreads: []\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initSampler(),\r\n    soundUseList: new Array(88)\r\n};\r\n\r\nfunction initSampler() {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_LOGIN,\r\n    SELECT_SCORETAB,\r\n    ADD_SECTION,\r\n    SET_DEGREE_INDEX,\r\n    SET_SYMBOL_KEY,\r\n    DETAIL_PARAMS_SETTER,\r\n    GET_ELEMENT_REFFER,\r\n    INIT_DEFAULT_ELEMENTS,\r\n    SELECT_NOTE_ELEMENT,\r\n    GET_REFFER,\r\n    GET_REFFER_CONTEXT,\r\n    GET_REFFER_CHORD_PALETTE,\r\n    GET_REFFER_SECTION_PALETTE,\r\n    GET_REFFER_BACKING_PALETTE,\r\n    FLOATWND_STATE,\r\n    CHORD_PALETTE_SETTER,\r\n    SET_NOTE_DATA,\r\n    SET_DATA_LIST,\r\n    SET_NOTE_STATE,\r\n    INIT_BACKING_PALETTE,\r\n    SET_USE_CHANNELS,\r\n    BACKING_TOGGLE_MATRIX\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_LOGIN:\r\n            return { ...state, login: payload.login };\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            if(detail.molecule == null) {\r\n                detail.molecule = {rootIndex: payload.degreeIndex, isFlat: false};\r\n            } else {\r\n                detail.molecule.rootIndex = payload.degreeIndex;\r\n            }\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 80,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                labelName: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const backingPaletteState = state.noteState.backingPaletteState;\r\n            const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            const script: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseScript[i].lens.length;\r\n                const baseTable = baseScript[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                script[i] = {\r\n                    ...baseScript[i],\r\n                    table,\r\n                };\r\n            }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState,\r\n                        useChannels,\r\n                        layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = state.noteState.backingPaletteState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailModulation, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress, Key12Info } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Key: </span>\r\n                        {/* <span>{detail.key}</span> */}\r\n                        <span>{\r\n                            detail.scale == SCALE_LIST[0] ?\r\n                                KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                        }</span>\r\n                    </div>\r\n                );\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Scale: </span>\r\n                        <span>{detail.scale}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            // /**　ディグリーネームを返す */\r\n            // const getDegreeRoot = (): string => {\r\n            //     let name = 'blank';\r\n            //     if (detail.molecule != null) {\r\n            //         const molList = detail.molecule.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n            //         name = molList[detail.molecule.rootIndex];\r\n            //         // 分母が存在する場合オンコードを設定\r\n            //         if (detail.denominator != null) {\r\n            //             const donList = detail.denominator.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n            //             name += '/' + donList[detail.denominator.rootIndex];\r\n            //         }\r\n            //     }\r\n            //     return name;\r\n            // }\r\n            // /**　コードネームを返す */\r\n            // const getChordName = (): string => {\r\n            //     let name = '-';\r\n            //     if (detail.molecule != null) {\r\n            //         const keyIndex = cache.init.keyIndex;\r\n            //         const molList = detail.molecule.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n            //         name = molList[(detail.molecule.rootIndex + keyIndex) % 12];\r\n            //         // 分母が存在する場合オンコードを設定\r\n            //         if (detail.denominator != null) {\r\n            //             const donList = detail.denominator.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n            //             name += '/' + donList[(detail.denominator.rootIndex + keyIndex) % 12];\r\n            //         }\r\n            //     }\r\n            //     return name;\r\n            // }\r\n            // /**　シンボルを返す */\r\n            // const getSymbol = (): string => {\r\n            //     let name = '';\r\n            //     if (detail.molecule != null) {\r\n            //         SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n            //             if (symbol.key == detail.symbolKey) {\r\n            //                 name = symbol.name;\r\n            //             }\r\n            //         });\r\n            //     }\r\n            //     return name;\r\n            // }\r\n\r\n            const degreeMolRoot = getDegreeRoot(detail.molecule);\r\n            const degreeDenRoot = getDegreeRoot(detail.denominator);\r\n            const chordMolRoot = getChordRoot(detail.molecule, cache.init.keyIndex);\r\n            const chordDenRoot = getChordRoot(detail.denominator, cache.init.keyIndex);\r\n            let symbolName = '';\r\n            let isDiatonic = false;\r\n            let degreeName = 'blank';\r\n            let chordName = '-';\r\n            if(degreeMolRoot != null) {\r\n                symbolName = getSymbolName(detail.symbolKey);\r\n                isDiatonic = DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeMolRoot + symbolName);\r\n                degreeName = `${degreeMolRoot}${symbolName}${degreeDenRoot == null ? '' : '/' + degreeDenRoot}`;\r\n                chordName = `${chordMolRoot}${symbolName}${chordDenRoot == null ? '' : '/' + chordDenRoot}`;\r\n            }\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.molecule == null ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        // ダイレクトモード時は非表示\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}>\r\n                        <span>{degreeName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.labelName}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Modulation: {\r\n            const detail = props.noteElement.detail as DetailModulation;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.timeSignatures}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n/**　ディグリーネームを返す */\r\nconst getDegreeRoot = (rootInfo: Key12Info | null): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n        name = list[rootInfo.rootIndex];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　コードネームを返す */\r\nconst getChordRoot = (rootInfo: Key12Info | null, keyIndex: number): string | null => {\r\n    let name = null;\r\n    if (rootInfo != null) {\r\n        const list = rootInfo.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n        name = list[(rootInfo.rootIndex + keyIndex) % 12];\r\n    }\r\n    return name;\r\n}\r\n\r\n/**　シンボルを返す */\r\nconst getSymbolName = (symbolKey: SymbolKey): string => {\r\n    let name = '';\r\n    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n        if (symbol.key == symbolKey) {\r\n            name = symbol.name;\r\n        }\r\n    });\r\n    return name;\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailModulation, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Modulation: return 'detail-mod';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.BACKING) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.molecule != null;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord,\r\n                            TypeNoteElement.Modulation,\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else {\r\n                            selectorElementClickAction();\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init:\r\n                                    {\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                    }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { ChordPaletteState, DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        denominator: detail.denominator,\r\n                        molecule: detail.molecule,\r\n                        // rootIndex: detail.degreeIndex,\r\n                        // isFlat: detail.isFlat,\r\n                        symbolKey: detail.symbolKey,\r\n                        sustain: detail.sustain,\r\n                    } as ChordPaletteState\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.molecule != null,\r\n                    executer: () => {\r\n                        dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        // state.reffers.chordPalette.style.left = 50 + 'px';\r\n                        // state.reffers.chordPalette.style.top = 50 + 'px';\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...state.noteState.chordPaletteState,\r\n                                denominator: detail.denominator,\r\n                                molecule: detail.molecule,\r\n                                // rootIndex: detail.degreeIndex,\r\n                                // isFlat: detail.isFlat,\r\n                                symbolKey: detail.symbolKey,\r\n                                sustain: detail.sustain,\r\n                            } as ChordPaletteState\r\n                        });\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'COPY BACKING', keyName: 'X', disable: detail.molecule == null,\r\n                    executer: () => {\r\n                        dispatcher.score.setCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callSectionEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.deleteCurElement();\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: 'call' | 'order';\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n\r\nexport const getAdjustSusValue = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = '+' + value;\r\n        else ret = value.toString();\r\n    }\r\n    return ret;\r\n}","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE, ChordPaletteState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordSelector.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n        const canvas: any = canvasRef.current;\r\n        canvas.width = 590;\r\n        canvas.height = 66;\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n            updatePianoView(\r\n                editorState.molecule.rootIndex,\r\n                editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                editorState.symbolKey\r\n            );\r\n        }\r\n    }, [editorState, state.noteState.floatwndState]);\r\n\r\n    const updatePianoView = (molRootIndex: number, denRootIndex: number, symbolKey: SymbolKey) => {\r\n        const ctx = (canvasRef.current as HTMLCanvasElement).getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        const keyIndex = (cache.init.keyIndex + molRootIndex) % 12;\r\n        const intervalList = (getSymbolParams(symbolKey) as SymbolParams).intervals;\r\n        const list = intervalList.map((value) => keyIndex + value);\r\n        let denIndex = -1;\r\n        if (denRootIndex != -1) {\r\n            denIndex = cache.init.keyIndex + denRootIndex;\r\n        }\r\n        ctx.fillStyle = '#008';\r\n        ctx.fillRect(0, 0, 594, 70);\r\n        const WIDTH = 34;\r\n        const HEIGHT = 60;\r\n        const BLACK_RATE_W = 0.5;\r\n        const BLACK_RATE_H = 0.6;\r\n        const MARGIN_W = 1;\r\n        const START_ADJUST = 1;\r\n        let posX = 0;\r\n        const keyboadList: {\r\n            posX: number;\r\n            fillStyle: string;\r\n            width: number;\r\n            height: number;\r\n            isBlack: boolean;\r\n        }[] = [];\r\n        for (let i = 0; i < 27; i++) {\r\n            let color = '#eee';\r\n            let width = WIDTH;\r\n            let height = HEIGHT;\r\n            const isBlack = [1, 3, 6, 8, 10].includes(i % 12);\r\n            if (isBlack) {\r\n                color = '#111';\r\n                width = WIDTH * BLACK_RATE_W;\r\n                height = HEIGHT * BLACK_RATE_H;\r\n            }\r\n            if (list.includes(i)) {\r\n                color = '#fa0';\r\n            }\r\n            if (denIndex == i) {\r\n                color = '#ff0000';\r\n            }\r\n            keyboadList.push({ posX: 15 + posX, fillStyle: color, width, height, isBlack });\r\n\r\n            switch (i % 12) {\r\n                case 0: case 2: case 5: case 7: case 9:\r\n                    //次が黒鍵\r\n                    posX += WIDTH - WIDTH * BLACK_RATE_W / 2;\r\n                    break;\r\n                case 1: case 3: case 6: case 8: case 10:\r\n                    //黒鍵\r\n                    posX += WIDTH * BLACK_RATE_W / 2 + MARGIN_W;\r\n                    break;\r\n                default:\r\n                    //次が白鍵\r\n                    posX += WIDTH + MARGIN_W;\r\n            }\r\n        }\r\n        keyboadList.forEach((keyboad) => {\r\n            if (!keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        keyboadList.forEach((keyboad) => {\r\n            if (keyboad.isBlack) {\r\n                ctx.fillStyle = keyboad.fillStyle;\r\n                ctx.fillRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n                ctx.fillStyle = '#f00';\r\n                ctx.strokeRect(keyboad.posX, 3, keyboad.width, keyboad.height);\r\n            }\r\n        });\r\n        ctx.save();\r\n    }\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operationJsx: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = cache.init.keyIndex;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.molecule.rootIndex == i;\r\n            const isDenominator = (editorState.denominator == null ? -1 : editorState.denominator.rootIndex) == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={[\r\n                                isSelected ? 'active' : '',\r\n                                isDenominator ? 'denominator' : ''\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                const denominator = !isDenominator ? editorState.denominator : null;\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     i,\r\n                                //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                            onContextMenu={() => {\r\n                                if (isSelected) return;\r\n                                const denominator = (!isDenominator ? { rootIndex: i, isFlat: false } : null);\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, denominator\r\n                                    } as ChordPaletteState\r\n                                });\r\n                                // updatePianoView(\r\n                                //     editorState.molecule.rootIndex,\r\n                                //     i,\r\n                                //     editorState.symbolKey\r\n                                // );\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && !editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && !editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: false }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && !editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && !editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: false } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={[\r\n                                    \"half\",\r\n                                    (isSelected && editorState.molecule.isFlat ? ' active' : ''),\r\n                                    (isDenominator && editorState.denominator != null && editorState.denominator.isFlat ? ' denominator' : '')\r\n                                ].join(' ')}\r\n                                onClick={() => {\r\n                                    // 分母が同じ場所に設定されていたら分子で上書きする\r\n                                    const denominator = !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                        ? editorState.denominator : null;\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, molecule: { rootIndex: i, isFlat: true }, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     i,\r\n                                    //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                                onContextMenu={() => {\r\n                                    if (isSelected && editorState.molecule.isFlat) return;\r\n                                    const denominator = (\r\n                                        !(isDenominator && editorState.denominator != null && editorState.denominator.isFlat)\r\n                                            ? { rootIndex: i, isFlat: true } : null);\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, denominator\r\n                                        } as ChordPaletteState\r\n                                    });\r\n                                    // updatePianoView(\r\n                                    //     editorState.molecule.rootIndex,\r\n                                    //     i,\r\n                                    //     editorState.symbolKey\r\n                                    // );\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                        // updatePianoView(\r\n                        //     editorState.molecule.rootIndex,\r\n                        //     editorState.denominator == null ? -1 : editorState.denominator.rootIndex,\r\n                        //     symbol.key\r\n                        // );\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operationJsx = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    const getAdjustOprJsx = (type: 'h' | 't', offset: number): JSX.Element => {\r\n        let [label, cls, isActive, callback] = type == 'h' ?\r\n            ['h', 'head', editorState.headAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, headAdjust: offset\r\n                    }\r\n                })] :\r\n            ['t', 'tail', editorState.tailAdjust == offset,\r\n                () => dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...editorState, tailAdjust: offset\r\n                    }\r\n                })];\r\n        if (offset >= 0) {\r\n            label += (offset > 0 ? '+' : '±');\r\n        }\r\n        return (\r\n            <div\r\n                className={[\r\n                    cls,\r\n                    isActive ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={callback}\r\n            >\r\n                <span>{label + offset}</span>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Direct', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'piano-view'}>\r\n                <canvas ref={canvasRef} />\r\n            </div>\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className={'adjuster' + (editorState.selectedLine == ChordPaletteLine.Adjuster ? ' active' : '')}>\r\n                {getAdjustOprJsx('h', -0.5)}\r\n                {getAdjustOprJsx('h', -0.25)}\r\n                {getAdjustOprJsx('h', 0)}\r\n                {getAdjustOprJsx('h', 0.25)}\r\n                {getAdjustOprJsx('h', 0.5)}\r\n                {getAdjustOprJsx('t', -0.5)}\r\n                {getAdjustOprJsx('t', -0.25)}\r\n                {getAdjustOprJsx('t', 0)}\r\n                {getAdjustOprJsx('t', 0.25)}\r\n                {getAdjustOprJsx('t', 0.5)}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operationJsx}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChordSelector;","\r\nimport { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SCALE_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getAdjustSusValue, getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentElementInfo.css';\r\n\r\ntype DataRecord = {\r\n    title: string;\r\n    value: string;\r\n    disable: boolean;\r\n}\r\n\r\nconst CurrentElementInfo = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const data = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let inner: JSX.Element = <></>;\r\n    switch (data.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = data.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.molecule != null) {\r\n                const rootIndex = detail.molecule.rootIndex;\r\n                const degreeRoot = DEGREE12_SHARP_LIST[rootIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[rootIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.molecule != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const baseBlockJsx = buildInfoBlock('Base', [\r\n                { title: 'Tempo', value: '' + cache.init.tempo, disable: false },\r\n                { title: 'Beat', value: cache.init.rythm, disable: false },\r\n                { title: 'Key', value: KEY12_SHARP_LIST[cache.init.keyIndex], disable: false },\r\n                { title: 'Scale', value: cache.init.scale, disable: false },\r\n            ]);\r\n\r\n            const chordBlockJsx = buildInfoBlock('Chord', [\r\n                { title: 'Root', value: root, disable: root == '-' },\r\n                { title: 'Symbol', value: symbolName, disable: symbolName == '-' },\r\n                { title: 'On chord', value: '-', disable: true },\r\n                { title: 'Sustain', value: String(detail.sustain), disable: false },\r\n                { title: 'Adjsut-H', value: getAdjustSusValue(detail.headAdjust), disable: detail.headAdjust == 0 },\r\n                { title: 'Adjsut-T', value: getAdjustSusValue(detail.tailAdjust), disable: detail.tailAdjust == 0 },\r\n            ]);\r\n\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {baseBlockJsx}\r\n                        {chordBlockJsx}\r\n                        {(() => {\r\n\r\n                            if (detail.molecule != null) {\r\n                                const structList: JSX.Element[] = [];\r\n                                const symbol = getSymbolParams(detail.symbolKey);\r\n                                const list = symbol?.intervals;\r\n                                const len = list?.length as number;\r\n                                for (let i = 0; i < 7; i++) {\r\n                                    if (i < len) {\r\n                                        const interval = symbol?.intervals[i] as number;\r\n                                        const struct = symbol?.struct[i];\r\n                                        const sound = KEY12_SHARP_LIST[(detail.molecule.rootIndex + interval) % 12];\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record\">\r\n                                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                                <div className=\"sound\"><span>{sound}</span></div>\r\n                                            </div>\r\n                                        );\r\n                                    } else {\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record disable\">\r\n                                                <div className=\"interval\"></div>\r\n                                                <div className=\"struct\"></div>\r\n                                                <div className=\"sound\"></div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return (<>\r\n                                    <div className=\"title\">\r\n                                        <span>Struct</span>\r\n                                    </div>\r\n                                    <div className=\"symbol-struct\">\r\n                                        {structList}\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<></>);\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        case TypeNoteElement.Section: {\r\n            const detail = data.detail as DetailSection;\r\n\r\n            const sectionBlockJsx = buildInfoBlock('Section', [\r\n                { title: 'label', value: detail.labelName, disable: false },\r\n                { title: 'box count', value: '-', disable: true },\r\n                { title: 'total bar', value: '-', disable: true },\r\n                { title: 'total time', value: '-', disable: true }\r\n            ]);\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {sectionBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {inner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentElementInfo;\r\n\r\n\r\nconst buildInfoBlock = (titleLabel: string, dataRecordList: DataRecord[]): JSX.Element => {\r\n    const jsxList: JSX.Element[] = [];\r\n    dataRecordList.forEach((state, i) => {\r\n        jsxList.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (state.disable ? ' disable' : '')\r\n                }>\r\n                <div className=\"title\"><span>{state.title}:</span></div>\r\n                <div className=\"value\"><span>{state.value}</span></div>\r\n            </div>\r\n        );\r\n    });\r\n    return (<>\r\n        <div className=\"title\">\r\n            <span>{titleLabel}</span>\r\n        </div>\r\n        <div className=\"current-state\">\r\n            {jsxList}\r\n        </div>\r\n    </>);\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps ={\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        {\r\n            label: 'all clear',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                const backingState: BackingEditorState = {\r\n                    useChannels: [],\r\n                    isUsePedal: false,\r\n                    sideIndex: 0,\r\n                    selectedLenIndex: 0,\r\n                    selectedChannelIndex: -1,\r\n                    layers: [\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.LEFT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        },\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.RIGHT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        }\r\n                    ],\r\n                    isCorrect: true\r\n                };\r\n                dispatcher.initBackingPalette(backingState);\r\n            }\r\n        }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>{buttonList}</>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = channelList.length - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingLayer, BACKING_LEN_TYPE, DetailChord } from \"contents/redux/store\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    chordDetail: DetailChord;\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curLayer = props.layer;\r\n    const detail = props.chordDetail;\r\n    const sustainLength = (detail.sustain + detail.headAdjust + detail.tailAdjust) * 4;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 0;\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    // コードブロックの拍の方が長い場合は上書き\r\n    const isLimit = measureLength > sustainLength;\r\n    measureLength = (!isLimit ? sustainLength : measureLength);\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const pos = i + (detail.headAdjust * 4);\r\n        const getLen = () => {\r\n            if (pos % 2 == 0) {\r\n                if (pos % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLimit = false;//i == sustainLength;\r\n        measureInner.push(<div key={i} className={getLen() + (isLimit ? ' limit' : '')} />);\r\n    }\r\n\r\n    const limitLeft = sustainLength * 31;\r\n    const limitJsx = !isLimit ?\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: '5px'\r\n        }} className=\"safe\"></div>)\r\n        :\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: `${(measureLength - sustainLength) * 31}px`\r\n        }} className=\"over\"></div>);\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n            {limitJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam, DetailChord } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    chordDetail: DetailChord;\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curLayer = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    channelList.forEach((channel, i) => {\r\n        channelJsxList.push(\r\n            <div\r\n                key={i}\r\n                className=\"channel\"\r\n                onClick={() => testPlaySound(channel.soundFullName)}\r\n            >\r\n                <span>{channel.soundFullName}</span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curLayer.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"backing-table\">\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>Right</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>Left</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    chordDetail={props.chordDetail}\r\n                    layer={curLayer}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import { SymbolParams } from \"contents/common/define\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\nexport const StructMatrix = (props: {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}) => {\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.symbol.intervals.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const interval = props.symbol.intervals[i];\r\n            const relation = props.symbol.struct[i];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: {soundName}</span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + props.symbol.intervals[i] + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = props.structs[i] + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                props.paletteState.useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                const isLimit = props.paletteState.useChannels.length >= 12 && !isSelected;\r\n\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={\r\n                            'col' +\r\n                            (isNone || isLimit ? ' disable' : '') +\r\n                            (isSelected ? ' active' : '')\r\n                        }\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam, Key12Info } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\ntype BackingContextType = {\r\n    isCorrect: boolean;\r\n    setCorrect: (isCorrect: boolean) => void;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isCorrect, setCorrect] = useState(true);\r\n\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatcher.backing.setCorrect(isCorrect);\r\n    }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const foocusIndex = state.noteState.focusIndex;\r\n    const detail = state.noteData.dataList[foocusIndex].detail as DetailChord;\r\n    const cache = state.noteState.cacheList[foocusIndex];\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    const rootIndex = (detail.molecule as Key12Info).rootIndex;\r\n    const symbol = getSymbolParams(detail.symbolKey) as SymbolParams;\r\n\r\n    const root = KEY12_SHARP_LIST[rootIndex];\r\n    const chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    symbol.intervals.forEach((value) => {\r\n        structs.push(KEY12_SHARP_LIST[(cache.init.keyIndex + rootIndex + value) % 12]);\r\n    });\r\n\r\n    // const infoList: JSX.Element[] = [];\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, rootIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.play(false);\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.setCurBackingScript();\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            isCorrect: isCorrect,\r\n            setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                id=\"backing-palette\"\r\n                className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{detail.sustain}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={rootIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    chordDetail={detail}\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","\r\nimport { getAdjustSusValue } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState, VFC } from 'react';\r\nimport './FooterTiming.css';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styled from 'styled-components';\r\n\r\nconst MEM_WIDTH = 16;\r\nconst FIXED_BLANK = 100;\r\n\r\nconst StyleTest = styled.div`\r\n    font-size: 0;\r\n    display: inline-inline-block;\r\n`;\r\n\r\n\r\n\r\nconst FooterTiming: VFC = () => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const dataList = state.noteData.dataList;\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const dataCount = state.noteData.dataList.length;\r\n\r\n    /** スクロールエリアのRef */\r\n    const scrollRef = useRef({} as HTMLDivElement);\r\n\r\n    const [blockJsxList, setBlockJsxList] = useState([] as JSX.Element[]);\r\n    const [measureJsxList, setMeasureJsxList] = useState([] as JSX.Element[]);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const chordDetail = dataList[focusIndex].type == TypeNoteElement.Chord ?\r\n        (dataList[focusIndex].detail as DetailChord) : null;\r\n    const sustain = chordDetail == null ? 0 : chordDetail.sustain;\r\n    const headAdjust = chordDetail == null ? 0 : chordDetail.headAdjust;\r\n    const tailAdjust = chordDetail == null ? 0 : chordDetail.tailAdjust;\r\n    useEffect(() => {\r\n        let total = 0;\r\n        const blockJsxList: JSX.Element[] = [];\r\n        const measureJsxList: JSX.Element[] = [];\r\n        const dataList = state.noteData.dataList;\r\n\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                        ].join(' ')}\r\n                        style={{ width: `${FIXED_BLANK}px` }}\r\n                    />\r\n                )\r\n            }\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                const detail = data.detail as DetailChord;\r\n                const len = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                const width = len * MEM_WIDTH * 4;\r\n                const isCur = focusIndex == i;\r\n                const isNear = focusIndex == i - 1 || focusIndex == i + 1;\r\n                blockJsxList.push(\r\n                    <div\r\n                        key={blockJsxList.length}\r\n                        className={[\r\n                            isCur ? 'active' : '',\r\n                            isNear ? 'near' : '',\r\n                        ].join(' ')}\r\n                        style={{ width: `${width - 1}px` }}\r\n                    >\r\n                        <div className=\"sus\">\r\n                            <span>{detail.sustain}</span>\r\n                        </div>\r\n                        <div className=\"adjust\">\r\n                            <span className={getAdjustCls(detail.headAdjust)}>\r\n                                {getAdjustSusValue(detail.headAdjust)}\r\n                            </span>\r\n                            <span className={getAdjustCls(detail.tailAdjust)}>\r\n                                {getAdjustSusValue(detail.tailAdjust)}\r\n                            </span>\r\n                        </div>\r\n                    </div >\r\n                );\r\n                if (isCur) {\r\n                    scrollRef.current.scrollTo({ left: total * MEM_WIDTH - FIXED_BLANK, behavior: 'smooth' });\r\n                }\r\n                total += len * 4;\r\n            }\r\n        });\r\n\r\n        // measureJsxList.push(\r\n        //     <div key={measureJsxList.length} className=\"blank\" style={{ left: `${0}px` }} />\r\n        // )\r\n        for (let i = 0; i < total; i++) {\r\n            let name = '';\r\n            const isBar = i % 16 == 0;\r\n            /** 小節数 */\r\n            const barCount = 1 + (i / 16);\r\n            if (isBar) {\r\n                name = 'mem-bar';\r\n            } else {\r\n                switch (i % 4) {\r\n                    case 0: name = 'mem4'; break;\r\n                    case 2: name = 'mem8'; break;\r\n                    default: name = 'mem16'; break;\r\n                }\r\n            }\r\n            measureJsxList.push(\r\n                <div key={measureJsxList.length} className={name} style={{ left: `${FIXED_BLANK + i * MEM_WIDTH}px` }}>{\r\n                    i % 16 == 0 ?\r\n                        <div className=\"bar\" style={{ left: `${-14}px`, top: '24px' }}>{barCount}</div>\r\n                        :\r\n                        <></>\r\n                }</div>\r\n            );\r\n        }\r\n        // alert(measureJsxList.length);\r\n        setBlockJsxList(blockJsxList);\r\n        setMeasureJsxList(measureJsxList);\r\n        setTotal(total);\r\n    }, [dataCount, focusIndex, sustain, headAdjust, tailAdjust]);\r\n\r\n    if (chordDetail == null) {\r\n        return (<></>);\r\n    }\r\n\r\n    const totalWidth = FIXED_BLANK * 2 + total * MEM_WIDTH;\r\n    return (\r\n        <div id=\"footer-timing\" className=\"footer-child\">\r\n            <div className=\"scroll\" ref={scrollRef}>\r\n                <div className=\"blocks\" style={{ width: `${totalWidth}px` }}>\r\n                    {blockJsxList}\r\n                </div>\r\n                <div className=\"measure\" style={{ width: `${totalWidth}px` }}>\r\n                    {measureJsxList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst getAdjustCls = (value: number): string => {\r\n    let ret = '';\r\n    if (value != 0) {\r\n        if (value > 0) ret = 'aug';\r\n        else ret = 'dim';\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport default FooterTiming;","\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport FooterTiming from './timing/FooterTiming';\r\nimport './NoteFooter.css';\r\n\r\nconst NoteFooter = () => {\r\n\r\n    return (\r\n        <div id=\"score-footer\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Progress', disable: false, cont: <FooterTiming/> },\r\n                    { name: 'Target', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={0}\r\n            // selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteFooter;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <span>{tempo}</span>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;\r\n\r\nconst StyledButton = styled.span`\r\n  user-select: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  margin: 1em;\r\n  padding: 0.3em 0.5em;\r\n  border-radius: 0.2em;\r\n  border: solid 1px #3498db;\r\n  color: #fff;\r\n  background-color: #3498db;\r\n`","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './SectionEditor.css';\r\n\r\nconst SectionEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.section.setSectionParam(labelName);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const getTextForm = (label: string, value: string, callback: (value: string) => void): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"section-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.SECTION_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getTextForm('Name', labelName, (value: string) => { setLabelName(value) })}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionEditor;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './SettingEditor.css';\r\n\r\nconst SettingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    if (state.noteState.floatwndState != FloatWndState.SETTING_EDITOR) {\r\n        return (<></>);\r\n    }\r\n    const defsus = state.noteState.defaultSustain;\r\n    const sustainJsxList: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n        sustainJsxList.push(\r\n            <div\r\n                key={sustainJsxList.length}\r\n                className={[\r\n                    i + 1 <= defsus ? 'active' : ''\r\n                ].join(' ')}\r\n                onClick={()=>{\r\n                    dispatcher.score.setNoteState({...state.noteState, defaultSustain: i + 1});\r\n                }}\r\n            />\r\n        );\r\n    }\r\n    return (\r\n        <div id=\"setting-editor\"\r\n            className=\"floatwnd active\">\r\n            <div className=\"sustain\">{sustainJsxList}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingEditor;\r\n","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentElementInfo from './sideDetail/CurrentElementInfo';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport NoteFooter from './footer/NoteFooter';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\nimport SectionEditor from './floatwnd/section/SectionEditor';\r\nimport SettingEditor from './floatwnd/setting/SettingEditor';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                const sustain = detail.sustain + detail.headAdjust + detail.tailAdjust;\r\n                totalBeat += sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * sustain;\r\n                no++;\r\n            }\r\n\r\n            cacheList[i] = { ...cacheList[i], init: { ...cache.init }, progress };\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).labelName} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        <button className=\"disable\"><span>BACK</span></button>\r\n                        <button className=\"disable\"><span>SAVE</span></button>\r\n                        <button className=\"disable\"><span>RELOAD</span></button>\r\n                        <button className=\"\" onClick={()=> dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SETTING_EDITOR })}><span>SETTING</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <SectionEditor />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                    <SettingEditor />\r\n                </div>\r\n                <NoteFooter />\r\n\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentElementInfo />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.BACKING ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"right-cont\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreContBackingTab.css';\r\n\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport  { useContext } from 'react';\r\n\r\n\r\nconst ScoreContBackingTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    \r\n    return (<></>);\r\n\r\n\r\n}\r\n\r\nexport default ScoreContBackingTab;\r\n","import './ScoreContSourceTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContSourceTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    const ref = useRef({} as HTMLTextAreaElement);\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex == 2 && state.noteData.dataList.length != 0) {\r\n            ref.current.value = JSON.stringify(state.noteData);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    return (\r\n        <div id=\"scorecont-sourcetab-root\">\r\n            <textarea ref={ref}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData(JSON.parse(ref.current.value));\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n            >Load score data...</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContSourceTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContBackingTab from './contTabs/backing/ScoreContBackingTab';\r\nimport ScoreContSourceTab from './contTabs/source/ScoreContSourceTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: state.noteData.dataList.length == 0,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Source', disable: false, cont: <ScoreContSourceTab /> },\r\n                    { name: 'Backing', disable: true, cont: <ScoreContBackingTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache, DetailModulation, DetailFixed, LoginParams, ChordPaletteState } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    public setLoginParams = (login: LoginParams) => {\r\n        this.dispatch(ActionType.SET_LOGIN, { login });\r\n    }\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n                // reffer.style.width = 'inherit';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.BACKING\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n\r\n        addNoteElement: (type: TypeNoteElement, detail: DetailSection | DetailChord | DetailModulation) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, { type, detail });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addModulationElement: () => {\r\n            const detail = { tempo: -1 } as DetailModulation;\r\n            this.score.addNoteElement(TypeNoteElement.Modulation, detail);\r\n        },\r\n        addChordElement: () => {\r\n            const noteState = this.state.noteState;\r\n            const curIndex = noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    // degreeIndex: -1,\r\n                    // isFlat: false,\r\n                    molecule: null,\r\n                    denominator: null,\r\n                    symbolKey: SymbolKey.MAJOR,\r\n                    sustain: noteState.defaultSustain,\r\n                    headAdjust: 0,\r\n                    tailAdjust: 0,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            }\r\n                        ],\r\n                        isUsePedal: false\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex++;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            // let degreeIndex = detail.degreeIndex;\r\n            // if (degreeIndex == -1) {\r\n            //     degreeIndex = 0;\r\n            // }\r\n            let molecule = detail.molecule;\r\n            if (molecule == null) {\r\n                molecule = { rootIndex: 0, isFlat: false };\r\n            }\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    // rootIndex: degreeIndex,\r\n                    // isFlat: detail.isFlat,\r\n                    molecule,\r\n                    denominator: detail.denominator,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                    headAdjust: detail.headAdjust,\r\n                    tailAdjust: detail.tailAdjust,\r\n                } as ChordPaletteState\r\n            });\r\n        },\r\n\r\n        callSectionEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailSection;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SECTION_PALETTE });\r\n            // this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n            //     params: {\r\n            //         ...this.state.noteState.chordPaletteState,\r\n            //         rootIndex: detail.degreeIndex,\r\n            //         isFlat: detail.isFlat,\r\n            //         symbolKey: detail.symbolKey,\r\n            //         sustain: detail.sustain,\r\n            //     }\r\n            // });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const backing = detail.backing;\r\n            const backingState: BackingEditorState = {\r\n                useChannels: JSON.parse(JSON.stringify(backing.useChannels)),\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: JSON.parse(JSON.stringify(backing.layers)),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * セクションエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public section = {\r\n        setSectionParam: (labelName: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    labelName\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    // degreeIndex: editorState.rootIndex,\r\n                    // isFlat: editorState.isFlat,\r\n                    molecule: editorState.molecule,\r\n                    denominator: editorState.denominator,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                    headAdjust: editorState.headAdjust,\r\n                    tailAdjust: editorState.tailAdjust,\r\n                } as DetailChord\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !this.state.noteState.backingPaletteState.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const baseLayers = backingPaletteState.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        play: (isProceed: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n            const rec = (isProceed: boolean) => {\r\n\r\n                const focusIndex = this.state.noteState.focusIndex;\r\n                const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n                const cache = this.state.noteState.cacheList[focusIndex];\r\n                const symbol = getSymbolParams(detail.symbolKey);\r\n                const intervals = symbol?.intervals as number[];\r\n                const editor = this.state.noteState.backingPaletteState;\r\n                const backing: BackingScript = !isProceed ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                    : detail.backing;\r\n                const sampler = this.state.sampler;\r\n                const tempo = cache.init.tempo;\r\n                // 1小節の長さミリ秒\r\n                const barMs = 60000 / tempo * 4;\r\n                const boxMs = 60000 / tempo * (detail.sustain + detail.headAdjust + detail.tailAdjust);\r\n                const adjustOverlap = barMs / 32;\r\n\r\n                // 末端に達した時の処理\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        let isEnd = true;\r\n                        if (isProceed) {\r\n                            const hasNext = this.score.focusNextElement();\r\n                            if (hasNext) {\r\n                                isEnd = false;\r\n                                rec(true);\r\n                            }\r\n                        }\r\n                        if (isEnd) {\r\n                            this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                        }\r\n                    }, boxMs)\r\n                );\r\n                for (let i = 0; i < 2; i++) {\r\n                    let headMs = 0;\r\n                    const layer = backing.layers[i];\r\n                    // 音価のループ\r\n                    layer.lens.forEach((lenBean, j) => {\r\n\r\n                        const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                        let curLenMs = barMs / lenValue;\r\n                        if (lenBean.isHalf) {\r\n                            curLenMs *= 1.5;\r\n                        }\r\n                        backing.useChannels.forEach((channel, k) => {\r\n                            layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                if (notes && detail.molecule != null) {\r\n                                    const degreeIndex = detail.molecule.rootIndex;\r\n                                    const rootKeyIndex = (cache.init.keyIndex + degreeIndex) % 12;\r\n                                    const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                    const octave = Math.floor(soundIndex / 12);\r\n                                    const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                    const soundFullName = root + octave;\r\n                                    const velocity = 0.7 * layer.vels[j] / 10;\r\n                                    const head = headMs + curLenMs / 3 * l;\r\n                                    const tail = !backing.isUsePedal ?\r\n                                        //ペダル未使用時\r\n                                        head + curLenMs :\r\n                                        //ペダル使用時\r\n                                        boxMs + adjustOverlap\r\n                                        ;\r\n                                    threads.push(\r\n                                        setTimeout(() => {\r\n                                            sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                            soundUseList[soundIndex]++;\r\n                                        }, head)\r\n                                    );\r\n                                    threads.push(\r\n                                        setTimeout(() => {\r\n                                            soundUseList[soundIndex]--;\r\n                                            if (soundUseList[soundIndex] == 0) {\r\n                                                sampler.triggerRelease(soundFullName);\r\n                                            }\r\n                                        }, tail)\r\n                                    );\r\n                                }\r\n                            });\r\n                        });\r\n                        headMs += curLenMs;\r\n                    });\r\n                }\r\n                this.score.setNoteState({\r\n                    ...this.state.noteState,\r\n                    editMode: EditMode.PREVIEW, backingThreads: threads\r\n                });\r\n            }\r\n            rec(isProceed);\r\n        }\r\n    }\r\n}","import { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './LoginFrame.css';\r\n\r\nconst LoginFrame = () => {\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n\r\n    const [loginType, setLoginType] = useState('guest' as 'guest' | 'login' | 'create');\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const enterDisable = (): boolean => {\r\n        switch (loginType) {\r\n            case 'guest': return false;\r\n            case 'login': {\r\n                return userName == '' || userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password == '' || password.length < 5 || password.length > 15 || !isHanEisu(password);\r\n            }\r\n            case 'create': {\r\n                return userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password.length < 5 || password.length > 15 || !isHanEisu(password) ||\r\n                    passConfirm.length < 5 || passConfirm.length > 15 || !isHanEisu(passConfirm);\r\n            }\r\n        }\r\n    }\r\n    return (<>\r\n        <div id=\"logo\"><span>Virtual Harmonizer</span></div>\r\n        <div id=\"login-frame\" ref={ref}>\r\n            <div className=\"guide\">\r\n                <span>Start to Virtual Harmonizer</span>\r\n            </div>\r\n            <div className=\"type\">\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"guest\"\r\n                    name=\"guest\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setError('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"login\"\r\n                    name=\"login\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setError('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"create\"\r\n                    name=\"create account\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setError('')}\r\n                />\r\n            </div>\r\n            <div className=\"body\">\r\n                <TextForm\r\n                    label=\"user name\"\r\n                    stateValue={userName}\r\n                    stateSetter={setUserName}\r\n                    isMask={false}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password\"\r\n                    stateValue={password}\r\n                    stateSetter={setPassword}\r\n                    isMask={true}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password confirm\"\r\n                    stateValue={passConfirm}\r\n                    stateSetter={setPassConfirm}\r\n                    isMask={true}\r\n                    isDisable={!['create'].includes(loginType)}\r\n                />\r\n            </div>\r\n            <div className=\"error\">\r\n                <span>{error}</span>\r\n            </div>\r\n            <div\r\n                className={['opr', enterDisable() ? 'disable' : ''].join(' ')}\r\n            >\r\n                <button\r\n                    onClick={() => {\r\n\r\n                        switch (loginType) {\r\n                            case 'guest': {\r\n                                ref.current.style.opacity = '0';\r\n                                setTimeout(()=>{\r\n                                    dispatcher.setLoginParams({\r\n                                        ...state.login,\r\n                                        isLogin: true,\r\n                                        user: 'Guest'\r\n                                    });\r\n                                }, 300);\r\n                            }\r\n                                break;\r\n                            case 'login': {\r\n                                setError('The login attempt failed. Either the user ID or password is invalid.');\r\n                            }\r\n                                break;\r\n                            case 'create': {\r\n                                setError('That user id has already been recorded.');\r\n                            }\r\n                                break;\r\n                        }\r\n                    }}\r\n                >\r\n                    enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nconst LoginTypeSwitch = (\r\n    props: {\r\n        name: string,\r\n        curLoginType: string,\r\n        loginType: string,\r\n        setLoginType: Function,\r\n        resetError: Function\r\n    }\r\n) => {\r\n    const isSelected = props.loginType == props.curLoginType;\r\n    return (\r\n        <button\r\n            className={isSelected ? 'active' : ''}\r\n            onClick={() => {\r\n                if (!isSelected) {\r\n                    props.setLoginType(props.curLoginType);\r\n                    props.resetError();\r\n                }\r\n            }}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nconst TextForm = (\r\n    props: {\r\n        label: string,\r\n        stateValue: string,\r\n        stateSetter: Function,\r\n        isMask: boolean,\r\n        isDisable: boolean\r\n    }\r\n) => {\r\n    useEffect(() => {\r\n        if (props.isDisable) {\r\n            props.stateSetter('');\r\n        }\r\n    }, [props.isDisable]);\r\n    const strLen = props.stateValue.length;\r\n    return (\r\n        <div className={['form', props.isDisable ? 'disable' : ''].join(' ')}>\r\n            <span>{props.label}:</span>\r\n            <input\r\n                className={[\r\n                    !props.isDisable && strLen == 0 ? 'required' : '',\r\n                    !props.isDisable && (strLen < 5 || strLen > 15) ? 'range' : '',\r\n                    !props.isDisable && !isHanEisu(props.stateValue) ? 'ban' : ''\r\n                ].join(' ')}\r\n                type={props.isMask ? 'password' : 'text'}\r\n                value={props.stateValue}\r\n                onChange={(e) => props.stateSetter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isHanEisu = (str: string) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[A-Za-z0-9_!]*$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LoginFrame;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext } from 'react';\r\nimport './UserPlate.css';\r\n\r\nconst UserPlate = (\r\n    props: {\r\n    }\r\n) => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    return (\r\n        <div id=\"user-plate\" className={[''].join(' ')}>\r\n            <div className=\"user-name\">\r\n                <span>{state.login.user}</span>\r\n            </div>\r\n            <div \r\n            className=\"logout\"\r\n            \r\n            onClick={() => {\r\n\r\n                dispatcher.setLoginParams({\r\n                    ...state.login,\r\n                    isLogin: false,\r\n                    user: ''\r\n                });\r\n            }}>\r\n                <span>LOGOUT</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPlate;","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\nimport LoginFrame from './login/LoginFrame';\r\nimport UserPlate from './user/UserPlate';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                {\r\n                    !state.login.isLogin ?\r\n                        <LoginFrame />\r\n                        :\r\n                        <>\r\n                            <UserPlate />\r\n                            <TabbedPane groupName=\"system-tabs\"\r\n                                tabElements={[\r\n                                    { name: 'Account', disable: true, cont: <div></div> },\r\n                                    { name: 'Palette', disable: true, cont: <div></div> },\r\n                                    { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                                    { name: 'Symbol', disable: true, cont: <div></div> },\r\n                                    { name: 'Sampler', disable: true, cont: <div></div> },\r\n                                    { name: 'Setting', disable: true, cont: <div></div> }\r\n                                ]}\r\n                                activeNo={2}\r\n                            />\r\n                        </>\r\n                }\r\n                {/* <>\r\n                    <LoginFrame />\r\n                    <UserPlate />\r\n                    <TabbedPane groupName=\"system-tabs\"\r\n                        tabElements={[\r\n                            { name: 'Account', disable: true, cont: <div></div> },\r\n                            { name: 'Palette', disable: true, cont: <div></div> },\r\n                            { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                            { name: 'Backing', disable: true, cont: <div></div> },\r\n                            { name: 'Symbol', disable: true, cont: <div></div> },\r\n                            { name: 'Sampler', disable: true, cont: <div></div> },\r\n                            { name: 'Setting', disable: true, cont: <div></div> }\r\n                        ]}\r\n                        activeNo={2}\r\n                    />\r\n                </> */}\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BackingScript, BACKING_LEN_TYPE, BACKING_SIDE, ChordPaletteState, CHORD_MODE, DetailChord, DetailSection, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    if (state.scoreTabIndex != 1) {\r\n        return;\r\n    }\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Section: {\r\n            const detail = selectedData.detail as DetailSection;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callSectionEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.SECTION_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.molecule != null) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                                dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case 'z': {\r\n                                fetch(\"http://localhost:5000/post\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        sql: 'SELECT rowid AS id, info FROM lorem'\r\n                                    })\r\n                                })\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(data => {\r\n                                        alert(JSON.stringify(data));\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'q': {\r\n                                fetch(\"http://localhost:5000/update\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        database: 'system.db',\r\n                                        sql: `insert into user_tbl(name, password) values('kohno', 'p@ssw0rd00!')`\r\n                                    })\r\n                                })\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.BACKING) {\r\n\r\n                        switch (e.key) {\r\n                            case 'Escape':\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        // case 'ArrowRight':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.molecule?.rootIndex + 1 });\r\n                        //     break;\r\n                        // case 'ArrowLeft':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        // case '1':\r\n                        //     dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                        //     break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const backing = state.noteState.backingPaletteState;\r\n                    const isCorrect = backing.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.play(false);\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                        // JSON取得（開発用）\r\n                        case 'z': {\r\n                            const script: BackingScript = {\r\n                                isUsePedal: backing.isUsePedal,\r\n                                layers: backing.layers,\r\n                                useChannels: backing.useChannels\r\n                            };\r\n                            alert(JSON.stringify(script));\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'f':\r\n                    dispatcher.score.addModulationElement();\r\n                    break;\r\n                case 'w': {\r\n                    const detail = selectedData.detail as DetailChord;\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            molecule: detail.molecule,\r\n                            denominator: detail.denominator,\r\n                            // rootIndex: detail.molecule?.rootIndex,\r\n                            // isFlat: detail.isFlat,\r\n                            symbolKey: detail.symbolKey,\r\n                            sustain: detail.sustain,\r\n                        } as ChordPaletteState\r\n                    });\r\n                }\r\n                    break;\r\n                case 'z': {\r\n                    alert(JSON.stringify(state.noteState.cacheList.length));\r\n                    // alert(JSON.stringify(detail));\r\n                    // dispatch(ActionType.SELECT_SCORETAB, { index: 2 });\r\n\r\n                    // const data = state.noteData.dataList[state.noteState.focusIndex];\r\n                    // data.detail = {\"degreeIndex\":2,\"isFlat\":false,\"symbolKey\":1,\"sustain\":4,\"backing\":{\"useChannels\":[{\"octave\":3,\"structIndex\":0},{\"octave\":3,\"structIndex\":1},{\"octave\":3,\"structIndex\":2},{\"octave\":4,\"structIndex\":0},{\"octave\":4,\"structIndex\":1},{\"octave\":4,\"structIndex\":2},{\"octave\":5,\"structIndex\":1},{\"octave\":5,\"structIndex\":2}],\"layers\":[{\"lens\":[{\"len\":\"LEN8\",\"isDiv3\":false,\"isHalf\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false}],\"side\":\"LEFT\",\"table\":[[[true],[false],[false],[false],[false]],[[false],[false],[false],[false],[false]],[[false],[false],[true],[true],[false]],[[false],[false],[false],[false],[false]],[[true],[false],[false],[false],[false]],[[false],[true],[false],[false],[false]],[[false],[false],[false],[false],[false]],[[false],[false],[false],[false],[true]]],\"vels\":[5,5,5,5,5]},{\"lens\":[{\"len\":\"LEN1\",\"isDiv3\":false,\"isHalf\":false}],\"side\":\"RIGHT\",\"table\":[[[false]],[[false]],[[false]],[[false]],[[false]],[[false]],[[false]],[[false]]],\"vels\":[5]}]}};\r\n                    // dispatcher.setNoteData(state.noteData);\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\n\n// import Tone from 'lib/Tone.min.js';\n// import Tone from \"react-tone\";\nimport * as Tone from \"tone\";\n\nimport './desty.css';\nimport './App.css';\nimport MainFrame from 'contents/MainFrame';\n\nfunction App() {\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <MainFrame />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}