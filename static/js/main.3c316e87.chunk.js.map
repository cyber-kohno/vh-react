{"version":3,"sources":["contents/redux/store.tsx","contents/common/TabbedPane.tsx","contents/common/define.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/ChordPalette.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/list/ScoreContListTab.tsx","contents/systab/score/ScoreTab.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FloatWndState","TotalPaletteLine","EDIT_MODE","TypeNoteElement","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","tabList","contList","tabElements","forEach","tab","index","disable","undefined","selectTabIndex","id","groupName","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","SYMBOL_PARAMS_LIST","key","sortNo","ActionType","initialState","scoreTabIndex","noteData","scoreName","editMode","DIRECT","dataList","noteState","focusIndex","floatwndState","NONE","totalPaletteState","selectedLine","Root","rootIndex","isFlat","sustain","reffers","reducer","state","action","type","payload","SELECT_SCORETAB","ADD_CHORD","slice","splice","Chord","detail","ADD_SECTION","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","scale","Fixed","label","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","TOTAL_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","ScoreElement","useContext","GlobalContext","dispatch","Modulation","getStyleFromType","posList","length","secNo","curSecNo","el","i","isCurrentSection","elementClickAction","listIndex","onContextMenu","e","style","left","clientX","top","clientY","CONTEXT_MENU","degreeName","getDegreeName","chordName","getChordName","symbolName","symbol","getSymbol","sustainJsx","getDetailElement","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","ref","useRef","current","menuPropsList","curElement","CHORD_PALETTE","menuList","data","ChordPalette","chordList","symbolList","beatList","operation","paletteState","chordDetail","degS","keyIndex","degF","chdS","chdF","isHalf","includes","isSelected","Symbol","Sustain","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","isModalBlind","ScoreContLiblaryTab","ScoreTab","createContext","MainFrame","useReducer","dispatchBase","actionType","contextValue","tabIndex","onKeyDown","selectedData","diatonicChord","Number","KeyboardShortCutAction","Provider","value","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c316e87.chunk.js","sourcesContent":["import { SYMBOL_PARAMS_LIST } from 'contents/common/define'\r\nimport { MutableRefObject } from 'react'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE = 'NONE',\r\n    CONTEXT_MENU = 'CONTEXT_MENU',\r\n    CHORD_PALETTE = 'CHORD_PALETTE',\r\n    SECTION_PALETTE = 'SECTION_PALETTE',\r\n    INIT_PALETTE = 'INIT_PALETTE',\r\n    BACKING_PALETTE = 'BACKING_PALETTE',\r\n}\r\nexport type TotalPaletteState = {\r\n    selectedLine: TotalPaletteLine,\r\n    rootIndex: number;\r\n    isFlat: false;\r\n    symbolKey: string;\r\n    sustain: number;\r\n}\r\nexport enum TotalPaletteLine {\r\n    Root, Symbol, Sustain\r\n}\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    editMode: EDIT_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum EDIT_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    floatwndState: FloatWndState;\r\n    totalPaletteState: TotalPaletteState;\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    key: string;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    degreeIndex: number;\r\n    isFlat: boolean;\r\n    symbolKey: string;\r\n    sustain: number;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailModulation = {\r\n\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailModulation | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Modulation = 'modulation',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    scoreTabIndex: 1,\r\n    noteData: { scoreName: '', editMode: EDIT_MODE.DIRECT, dataList: [] },\r\n    noteState: {\r\n        focusIndex: 0,\r\n        floatwndState: FloatWndState.NONE,\r\n        totalPaletteState: {\r\n            selectedLine: TotalPaletteLine.Root,\r\n            rootIndex: 0,\r\n            isFlat: false,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4\r\n        }\r\n    },\r\n    reffers: {} as Reffers,\r\n};","import React, { useState, useEffect, FC, forwardRef, RefCallback } from 'react';\r\nimport { JsxChild } from 'typescript';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabList: JSX.Element[] = [];\r\n    const contList: JSX.Element[] = [];\r\n    props.tabElements.forEach((tab, index) => {\r\n        tabList.push(\r\n            <TabLabel\r\n                key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                selectTab={() => selectTabIndex(index)}\r\n            />)\r\n            ;\r\n        contList.push(\r\n            <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n        );\r\n    });\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {tabList}\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {contList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabLabelProps = {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}\r\n\r\nconst TabLabel = (props: TabLabelProps) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabContentsProps = {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabContents = (props: TabContentsProps) => {\r\n    const classValues = [];\r\n    classValues.push('tab-cont');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    return (\r\n        <div className={classValues.join(' ')}>\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","export const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: string;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: 'major' },\r\n    { degreeIndex: 2, symbolKey: 'minor' },\r\n    { degreeIndex: 4, symbolKey: 'minor' },\r\n    { degreeIndex: 5, symbolKey: 'major' },\r\n    { degreeIndex: 7, symbolKey: 'major' },\r\n    { degreeIndex: 9, symbolKey: 'minor' },\r\n    { degreeIndex: 11, symbolKey:'minorMinus5' },\r\n];\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\n\r\n\r\ntype SymbolParams = {\r\n    key: string\r\n    sortNo: number;\r\n    parentNo: number;\r\n    depth: number;\r\n    name: string;\r\n    struct: string[];\r\n    fixed: string[];\r\n    intervals: number[];\r\n}\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    {key:'major', sortNo:1,\"parentNo\":0,\"depth\":1,\"name\":\"\",\"struct\":['p1','M3','p5'],\"fixed\":['p1'],\"intervals\":[0,4,7]},\r\n    {key:'minor', \"sortNo\":2,\"parentNo\":0,\"depth\":1,\"name\":\"m\",\"struct\":[\"p1,m3,p5\"],\"fixed\":[\"p1\"],\"intervals\":[0,3,7]},\r\n    {key:'sus4', \"sortNo\":3,\"parentNo\":0,\"depth\":1,\"name\":\"sus4\",\"struct\":[\"p1,p4,p5\"],\"fixed\":[\"p1\"],\"intervals\":[0,5,7]},\r\n    {key:'dim', \"sortNo\":4,\"parentNo\":0,\"depth\":1,\"name\":\"dim\",\"struct\":[\"p1,m3,d5\"],\"fixed\":[\"p1\"],\"intervals\":[0,3,6]},\r\n    {key:'aug', \"sortNo\":5,\"parentNo\":0,\"depth\":1,\"name\":\"aug\",\"struct\":[\"p1,M3,a5\"],\"fixed\":[\"p1\"],\"intervals\":[0,4,8]},\r\n    {key:'maj7', \"sortNo\":6,\"parentNo\":0,\"depth\":1,\"name\":\"maj7\",\"struct\":[\"p1,M3,p5,M7\"],\"fixed\":[\"p1\"],\"intervals\":[0,4,7,11]},\r\n    {key:'seventh', \"sortNo\":7,\"parentNo\":0,\"depth\":1,\"name\":\"7\",\"struct\":[\"p1,M3,p5,m7\"],\"fixed\":[\"p1\"],\"intervals\":[0,4,7,10]},\r\n    {key:'m7', \"sortNo\":8,\"parentNo\":0,\"depth\":1,\"name\":\"m7\",\"struct\":[\"p1,m3,p5,m7\"],\"fixed\":[\"p1\"],\"intervals\":[0,3,7,10]},\r\n    {key:'mmaj7', \"sortNo\":9,\"parentNo\":0,\"depth\":1,\"name\":\"mmaj7\",\"struct\":[\"p1,m3,p5,M7\"],\"fixed\":[\"p1\"],\"intervals\":[0,3,7,11]},\r\n    {key:'add9', \"sortNo\":10,\"parentNo\":0,\"depth\":1,\"name\":\"add9\",\"struct\":[\"p1,M2,M3,p5\"],\"fixed\":[\"p1\"],\"intervals\":[0,2,4,7]},\r\n    {key:'minorAdd9', \"sortNo\":11,\"parentNo\":0,\"depth\":1,\"name\":\"madd9\",\"struct\":[\"p1,M2,m3,p5\"],\"fixed\":[\"p1\"],\"intervals\":[0,2,3,7]},\r\n    {key:'sixthNinth', \"sortNo\":12,\"parentNo\":0,\"depth\":1,\"name\":\"6(9)\",\"struct\":[\"p1,M2,M3,p5,M6\"],\"fixed\":[\"p1\"],\"intervals\":[0,2,4,7,9]},\r\n    {key:'minorMinus5', \"sortNo\":13,\"parentNo\":0,\"depth\":1,\"name\":\"m(-5)\",\"struct\":[\"p1,m3,d5\"],\"fixed\":[\"p1\"],\"intervals\":[0,3,6]},\r\n];","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SELECT_SCORETAB = 'SELECT_SCORETAB',\r\n    ADD_CHORD = 'ADD_CHORD',\r\n    ADD_SECTION = 'ADD_SECTION',\r\n    SET_DEGREE_INDEX = 'SET_DEGREE_INDEX',\r\n    SET_SYMBOL_KEY = 'SET_SYMBOL_KEY',\r\n    DETAIL_PARAMS_SETTER = 'CHORD_PARAMS_SETTER',\r\n    INIT_DEFAULT_ELEMENTS = 'INIT_DEFAULT_ELEMENTS',\r\n    SELECT_NOTE_ELEMENT = 'SELECT_NOTE_ELEMENT',\r\n    GET_REFFER = 'GET_REFFER',\r\n    GET_REFFER_CONTEXT = 'GET_REFFER_CONTEXT',\r\n    GET_REFFER_CHORD_PALETTE = 'GET_REFFER_CHORD_PALETTE',\r\n    GET_REFFER_SECTION_PALETTE = 'GET_REFFER_SECTION_PALETTE',\r\n    GET_REFFER_BACKING_PALETTE = 'GET_REFFER_BACKING_PALETTE',\r\n    FLOATWND_STATE = 'FLOATWND_STATE',\r\n    TOTAL_PALETTE_SETTER = 'TOTAL_PALETTE_SETTER',\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_CHORD: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    degreeIndex: -1,\r\n                    isFlat: false,\r\n                    symbolKey: null,\r\n                    sustain: 4\r\n                }\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.label = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.degreeIndex = payload.degreeIndex;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 100,\r\n                                rythm: '4/4',\r\n                                key: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                label: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.TOTAL_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, totalPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const data = state.noteData.dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, KEY12_FLAT_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailModulation, NoteElement, FloatWndState, Store } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    type: TypeNoteElement;\r\n}\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (props.type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Modulation: return 'detail-modulation';\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo;\r\n        return isCurrentSec;\r\n    }\r\n    const classValues = [];\r\n    classValues.push('note-element');\r\n    classValues.push(getStyleFromType());\r\n    if (props.index == state.noteState.focusIndex) {\r\n        classValues.push('active');\r\n    }\r\n    if (isCurrentSection()) {\r\n        classValues.push('current');\r\n    }\r\n\r\n    const getDetailElement = (): JSX.Element => {\r\n        switch (props.type) {\r\n            case TypeNoteElement.Fixed: {\r\n                const detail = state.noteData.dataList[props.index].detail as DetailFixed;\r\n                return (\r\n                    <div>{detail.label}</div>\r\n                );\r\n            }\r\n            case TypeNoteElement.Init: {\r\n                const detail = state.noteData.dataList[props.index].detail as DetailInit;\r\n                return (\r\n                    <div>\r\n                        <div><span>tempo: </span><span>{detail.tempo}</span></div>\r\n                        <div><span>rythm: </span><span>{detail.rythm}</span></div>\r\n                        <div><span>key: </span><span>{detail.key}</span></div>\r\n                        <div><span>scale: </span><span>{detail.scale}</span></div>\r\n                    </div>\r\n                );\r\n            }\r\n            case TypeNoteElement.Chord: {\r\n                const detail = state.noteData.dataList[props.index].detail as DetailChord;\r\n\r\n                /**　ディグリーネームを返す */\r\n                const getDegreeName = (index: number): string => {\r\n                    let name = 'blank';\r\n                    if (index != -1) {\r\n                        name = DEGREE12_FLAT_LIST[index];\r\n                    }\r\n                    return name;\r\n                }\r\n                /**　コードネームを返す */\r\n                const getChordName = (index: number): string => {\r\n                    let name = '-';\r\n                    if (index != -1) {\r\n                        name = KEY12_FLAT_LIST[index];\r\n                    }\r\n                    return name;\r\n                }\r\n                /**　シンボルを返す */\r\n                const getSymbol = (index:number, symbolKey: string): string => {\r\n                    let name = '';\r\n                    if (index != -1) {\r\n                        SYMBOL_PARAMS_LIST.forEach((symbol, i)=>{\r\n                            if(symbol.key == symbolKey) {\r\n                                name = symbol.name;\r\n                            }\r\n                        });\r\n                    }\r\n                    return name;\r\n                }\r\n\r\n                const degreeName = getDegreeName(detail.degreeIndex);\r\n                const chordName = getChordName(detail.degreeIndex);\r\n                const symbolName = getSymbol(detail.degreeIndex, detail.symbolKey);\r\n                const sustainJsx = [];\r\n                for (let i = 0; i < detail.sustain; i++) {\r\n                    sustainJsx.push(<span key={i}></span>);\r\n                }\r\n                return (\r\n                    <>\r\n                        <div className={'degree' + (detail.degreeIndex == -1 ? ' blank' : '')}>\r\n                            <span>{degreeName}{symbolName}</span>\r\n                        </div>\r\n                        <div className=\"chord\">\r\n                            <span>{chordName}{symbolName}</span>\r\n                        </div>\r\n                        <div className=\"sustain\">\r\n                            {sustainJsx}\r\n                        </div>\r\n                        <div className=\"pos-bar\"></div>\r\n                        <div className=\"pos-sec\"></div>\r\n                    </>\r\n                );\r\n            }\r\n            case TypeNoteElement.Section: {\r\n                const detail = state.noteData.dataList[props.index].detail as DetailSection;\r\n                return (\r\n                    <>\r\n                        <div><span>{detail.label}</span></div>\r\n                        <div></div>\r\n                    </>\r\n                );\r\n            }\r\n            case TypeNoteElement.Modulation: {\r\n                const detail = state.noteData.dataList[props.index].detail as DetailModulation;\r\n                return (\r\n                    <></>\r\n                );\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 要素をクリックした際のイベント\r\n     */\r\n    const elementClickAction = (state: Store, dispatch: Function, listIndex: number) => {\r\n        const element: NoteElement = state.noteData.dataList[listIndex];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: listIndex });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classValues.join(' ')}\r\n            onClick={() => {\r\n                elementClickAction(state, dispatch, props.index);\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n            onContextMenu={(e: MouseEvent) => {\r\n                elementClickAction(state, dispatch, props.index);\r\n                const element: NoteElement = state.noteData.dataList[props.index];\r\n                if (element.type != TypeNoteElement.Fixed) {\r\n                    // alert(state.reffers.chordPalette);\r\n                    state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                    state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                }\r\n            }}\r\n        >\r\n            { getDetailElement()}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './style.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatch(ActionType.ADD_CHORD, { index: state.noteState.focusIndex });\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatch(ActionType.ADD_CHORD, { index: state.noteState.focusIndex });\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatch(ActionType.ADD_SECTION, { index: state.noteState.focusIndex });\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        state.reffers.chordPalette.style.left = 50 + 'px';\r\n                        state.reffers.chordPalette.style.top = 50 + 'px';\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: false,\r\n                    executer: () => { }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => { }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: true,\r\n            executer: () => { }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: string;\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, TotalPaletteLine, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './style.css';\r\n\r\nconst ChordPalette = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operation: JSX.Element = <></>;\r\n\r\n    const paletteState = state.noteState.totalPaletteState;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n        const focusIndex = state.noteState.focusIndex;\r\n        const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = 3;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = paletteState.rootIndex == i;\r\n            chordList.push(\r\n                <div key={i}>\r\n                    {\r\n                        !isHalf ?\r\n                            <div\r\n                                className={isSelected ? 'active' : ''}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.TOTAL_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...paletteState,\r\n                                            selectedLine: TotalPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                <span className=\"degree\">{degS}</span>\r\n                                <span>&nbsp;(</span>\r\n                                <span className=\"chord\">{chdS}</span>\r\n                                <span>)</span>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                                <div\r\n                                    className={\"half\" + (isSelected && !paletteState.isFlat ? ' active' : '')}\r\n                                    onClick={() => {\r\n                                        dispatch(ActionType.TOTAL_PALETTE_SETTER, {\r\n                                            params: {\r\n                                                ...paletteState,\r\n                                                selectedLine: TotalPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                            }\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"degree\">{degS}</span>\r\n                                    <span>&nbsp;(</span>\r\n                                    <span className=\"chord\">{chdS}</span>\r\n                                    <span>)</span>\r\n                                </div>\r\n                                <div\r\n                                    className={\"half\" + (isSelected && paletteState.isFlat ? ' active' : '')}\r\n                                    onClick={() => {\r\n                                        dispatch(ActionType.TOTAL_PALETTE_SETTER, {\r\n                                            params: {\r\n                                                ...paletteState,\r\n                                                selectedLine: TotalPaletteLine.Root, rootIndex: i, isFlat: true\r\n                                            }\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"degree\">{degF}</span>\r\n                                    <span>&nbsp;(</span>\r\n                                    <span className=\"chord\">{chdF}</span>\r\n                                    <span>)</span>\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == paletteState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.TOTAL_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...paletteState,\r\n                                selectedLine: TotalPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={paletteState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.TOTAL_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...paletteState, selectedLine: TotalPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operation = (\r\n            <>\r\n                <div\r\n                    onClick={() => {\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }}>\r\n                    <span>CANCEL</span>\r\n                </div>\r\n                <div\r\n                    onClick={() => {\r\n                        dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                            pos: focusIndex,\r\n                            params: {\r\n                                ...chordDetail,\r\n                                degreeIndex: paletteState.rootIndex,\r\n                                isFlat: paletteState.isFlat,\r\n                                symbolKey: paletteState.symbolKey,\r\n                                sustain: paletteState.sustain,\r\n                            }\r\n                        });\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }}>\r\n                    <span>UPDATE</span>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (paletteState.selectedLine == TotalPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (paletteState.selectedLine == TotalPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Separate', disable: false, cont: (\r\n                            <>\r\n                            </>\r\n                    )\r\n                    }\r\n                ]}\r\n                activeNo={0}\r\n            />\r\n            <div className={'beat-selector' + (paletteState.selectedLine == TotalPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ChordPalette;","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, FloatWndState, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/NoteContextMenu';\r\nimport ChordPalette from './floatwnd/ChordPalette';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const dataList = state.noteData.dataList;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        dataList.forEach((data, i) => {\r\n            elementList.push(\r\n                <ScoreElement key={i} index={i} type={data.type} />\r\n            );\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).label} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n    }, [state.noteData.dataList]);\r\n\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div id=\"score-outline-root\" onClick={() => dispatch(ActionType.SELECT_SCORETAB, { index: 4 })}>\r\n                        <div id=\"current-state\">\r\n                            <span>♪{110}</span>\r\n                            <span>{' ' + 'C# major'}</span>\r\n                        </div>\r\n                        <div id=\"operation-list\">\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"section-list\">\r\n                        {sectionList}\r\n                    </div>\r\n                    <div id=\"score-list-root\">\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <NoteContextMenu />\r\n                    <ChordPalette />\r\n                </div>\r\n                <div id=\"score-footer\">\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <div id=\"score-detail\">\r\n                    <div>\r\n                    </div>\r\n                </div>\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n","import './ScoreContListTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\n\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\"></div>\r\n            <div className=\"right-cont\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/list/ScoreContListTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'LIBLARY', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    { name: 'Note', disable: false, cont: <ScoreContNoteTab /> },\r\n                    { name: 'Sheet Music', disable: false, cont: <div></div> },\r\n                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                    { name: 'Source', disable: false, cont: <div></div> },\r\n                    { name: 'Preview', disable: false, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;\r\n","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatchBase: React.Dispatch<Action>;\r\n    dispatch: Function;\r\n}\r\n\r\n// export const GlobalContext = createContext(({}) as GlobalContextType);\r\nexport const GlobalContext = createContext(({}) as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const contextValue: GlobalContextType = { state, dispatchBase, dispatch };\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch)}\r\n        >\r\n            <GlobalContext.Provider value={contextValue}>\r\n                <TabbedPane groupName=\"system-tabs\"\r\n                    tabElements={[\r\n                        { name: 'Account', disable: false, cont: <div></div> },\r\n                        { name: 'Test', disable: false, cont: <div></div> },\r\n                        { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                        { name: 'Backing', disable: false, cont: <div></div> },\r\n                        { name: 'Symbol', disable: false, cont: <div></div> },\r\n                        { name: 'Sampler', disable: true, cont: <div></div> },\r\n                        { name: 'Setting', disable: false, cont: <div></div> }\r\n                    ]}\r\n                    activeNo={2}\r\n                />\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { Dispatch, KeyboardEvent, useContext } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function) => {\r\n    // alert(e.key);\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n                    switch (e.key) {\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                            break;\r\n                        case '1':\r\n                        case '2':\r\n                        case '3':\r\n                        case '4':\r\n                        case '5':\r\n                        case '6':\r\n                        case '7':\r\n                            const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                            dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowRight':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex + 1 });\r\n                            break;\r\n                        case 'ArrowLeft':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n    switch (e.key) {\r\n        case 'a':\r\n            dispatch(ActionType.ADD_CHORD, { index: focusIndex });\r\n            break;\r\n        case 's':\r\n            dispatch(ActionType.ADD_SECTION, { index: focusIndex });\r\n            break;\r\n    }\r\n};","import React, { useEffect } from 'react';\n\n// import Tone from 'lib/Tone.min.js';\n// import Tone from \"react-tone\";\n\nimport './desty.css';\nimport './App.css';\nimport MainFrame from 'contents/MainFrame';\n\nfunction App() {\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n    // const script = document.createElement(\"script\");\n    // script.src = \"/lib/Tone.min.js\";\n    // script.async = true;\n    // document.body.appendChild(script);\n    //   const synth = new Tone.Sampler({\n    //     \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\n    //     \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\n    //     \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\n    //     \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\n    //     \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\n    //     \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\n    // }).toMaster();\n\n  }, []);\n  return (\n    <MainFrame />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}