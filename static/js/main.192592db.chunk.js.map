{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/common/utils.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentElementInfo.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/floatwnd/section/SectionEditor.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/backing/ScoreContBackingTab.tsx","contents/systab/score/contTabs/source/ScoreContSourceTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/login/LoginFrame.tsx","contents/user/UserPlate.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TimeSignatures","KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","tabList","contList","tabElements","forEach","tab","index","disable","undefined","selectTabIndex","id","groupName","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","SymbolType","SYMBOL_PARAMS_LIST","key","MAJOR","sortNo","MINOR","SUS4","DIM","AUG","MAJ7","SEVENTH","MIN7","MINOR_MAJ7","ADD9","MINOR_ADD9","SIXTH_9TH","MINOR_MINUS5","TRIAD","TETRAD7TH","TETRAD9TH","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","ModulateRelationType","TypeNoteElement","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","ActionType","initialState","login","isLogin","user","scoreTabIndex","noteData","scoreName","chordMode","SCALE","dataList","noteState","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","rootIndex","isFlat","sustain","backingPaletteState","useChannels","isUsePedal","sideIndex","selectedLenIndex","selectedChannelIndex","layers","isCorrect","backingThreads","reffers","sampler","Sampler","toDestination","soundUseList","Array","reducer","state","action","type","payload","SET_LOGIN","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","keyIndex","scale","Fixed","label","labelName","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","data","SET_DATA_LIST","SET_NOTE_STATE","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","baseScript","script","i","channelCount","length","lensSplitCount","lens","baseTable","table","y","x","BACKING_TOGGLE_MATRIX","lenIndex","channelIndex","divIndex","isUse","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeRoot","getDegreeRoot","chordName","init","getChordName","symbolName","symbol","getSymbol","isDiatonic","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Modulation","timeSignatures","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","BACKING","some","setSelectedList","selectorElementClickAction","onContextMenu","e","INIT_PALETTE","style","left","clientX","top","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","callBackingEditor","setCriteria","callSectionEditor","deleteCurElement","menuList","ChordSelector","chordList","symbolList","beatList","operation","isDirect","editorState","degS","degF","chdS","chdF","isHalf","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getSymbolParams","CurrentElementInfo","inner","root","chordRoot","baseBlockJsx","buildInfoBlock","title","value","chordBlockJsx","String","structList","list","intervals","len","interval","struct","sound","sectionBlockJsx","titleLabel","dataRecordList","jsxList","BackingOperation","paletteState","curSideScript","curLenBean","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","callback","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","backingState","side","LEFT","RIGHT","buttonList","button","getActiveState","curLayerIndex","lineIndex","cur","back","curCellRange","getCellRange","backLenBean","j","k","backRange","isOverlapJudge","range1","range2","head","width","getLenSize","size","NotesMatrix","setCorrect","BackingContext","channelList","matrixLayersJsx","hasError","l","linesJsx","layer","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","curLayer","sustainLength","chordDetail","measureInner","measureLength","cnt","isLimit","limitLeft","limitJsx","BackingTable","testPlaySound","channelJsxList","channel","soundFullName","volumeList","volume","height","setLayerIndex","setUsePedal","StructMatrix","structTable","cols","soundName","structs","relation","soundIndex","octave","floor","isNone","structIndex","sort","a","b","setUseChannels","createContext","getChannelList","BackingEditor","BACKING_PALETTE","triggerAttack","setTimeout","triggerRelease","play","setCurBackingScript","Provider","InitEditor","setTempo","setRythm","setKey","setScale","setInitParam","getItemSelector","optionsJsx","display","onChange","target","Number","min","max","map","item","toString","SectionEditor","styled","span","setLabelName","section","setSectionParam","SECTION_PALETTE","EditModeBorder","PREVIEW","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","totalBeat","totalMsec","lastBar","bar","setNoteState","isModalBlind","ScoreContLiblaryTab","setNoteData","ScoreContBackingTab","ScoreContSourceTab","JSON","stringify","parse","ScoreTab","Dispatcher","dispatchBase","setLoginParams","apllyFlasah","backgroundColor","apllyFlashCur","apllyFlashList","releaseCriteria","getInitElement","setEditMode","addNoteElement","curIndex","addModulationElement","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","callChordSelector","line","updateLenIndex","getCurLenIndex","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","use","changeLayerIndex","baseLayers","count","cell","isProceed","threads","rec","editor","barMs","boxMs","adjustOverlap","isEnd","headMs","lenValue","replace","curLenMs","notes","tail","this","LoginTypeSwitch","loginType","curLoginType","setLoginType","resetError","TextForm","stateSetter","strLen","stateValue","isHanEisu","isMask","str","match","LoginFrame","userName","setUserName","password","setPassword","passConfirm","setPassConfirm","error","setError","enterDisable","UserPlate","MainFrame","useReducer","actionType","tabIndex","onKeyDown","selectedData","diatonicChord","fetch","mode","method","headers","Accept","body","sql","then","response","json","alert","catch","console","log","database","baseBacking","thr","clearInterval","releaseAll","KeyboardShortCutAction","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.192592db.chunk.js","sourcesContent":["export const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'C#/Db', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport enum TimeSignatures  {\r\n    BEAT_4ON4 = '4/4',\r\n    BEAT_2ON4 = '2/4',\r\n    BEAT_3ON4 = '3/4',\r\n    BEAT_6ON8 = '6/8',\r\n    BEAT_12ON8 = '12/8',\r\n}\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\n\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES: string[] = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey\r\n    sortNo: number;\r\n    parentNo: number;\r\n    depth: number;\r\n    name: string;\r\n    struct: string[];\r\n    fixed: string[];\r\n    intervals: number[];\r\n}\r\n\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n}\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, \"sortNo\": 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, \"sortNo\": 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, \"sortNo\": 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, \"sortNo\": 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, \"sortNo\": 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, \"sortNo\": 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, \"sortNo\": 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, \"sortNo\": 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, \"sortNo\": 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, \"sortNo\": 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, \"sortNo\": 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, \"sortNo\": 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n];\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD9TH,\r\n}\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\n\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n];","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabList: JSX.Element[] = [];\r\n    const contList: JSX.Element[] = [];\r\n    props.tabElements.forEach((tab, index) => {\r\n        tabList.push(\r\n            <TabLabel\r\n                key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                selectTab={() => selectTabIndex(index)}\r\n            />)\r\n            ;\r\n        contList.push(\r\n            <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n        );\r\n    });\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {tabList}\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {contList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabLabelProps = {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}\r\n\r\nconst TabLabel = (props: TabLabelProps) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabContentsProps = {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabContents = (props: TabContentsProps) => {\r\n    if(!props.isActive) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"tab-cont\">\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","import { SymbolKey, SYMBOL_PARAMS_LIST, TimeSignatures } from 'contents/common/define'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    login: LoginParams;\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    soundUseList: number[];\r\n}\r\n\r\nexport type LoginParams = {\r\n    isLogin: boolean,\r\n    user: string\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\n export type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE,\r\n    CONTEXT_MENU,\r\n    CHORD_PALETTE,\r\n    SECTION_PALETTE,\r\n    INIT_PALETTE,\r\n    BACKING_PALETTE,\r\n}\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    rootIndex: number;\r\n    isFlat: false;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    BACKING,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    labelName: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    degreeIndex: number;\r\n    isFlat: boolean;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailModulation = {\r\n    modulate?: ModulateRelation;\r\n    tempo: number;\r\n    timeSignatures?: TimeSignatures;\r\n}\r\n\r\nexport type ModulateRelation = {\r\n    type: ModulateRelationType;\r\n    value: number;\r\n}\r\n\r\nexport enum ModulateRelationType {\r\n    DOMINANT = 'DOMINANT',\r\n    ABSOLUTE = 'ABSOLUTE',\r\n    PARALLEL = 'PARALLEL',\r\n    RELATIVE = 'RELATIVE'\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailModulation | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Modulation = 'modulation',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    login: {\r\n        isLogin: false,\r\n        user: ''\r\n    },\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', chordMode: CHORD_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            rootIndex: 0,\r\n            isFlat: false,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4\r\n        },\r\n        backingPaletteState: {\r\n            useChannels: [],\r\n            isUsePedal: false,\r\n            sideIndex: 0,\r\n            selectedLenIndex: 0,\r\n            selectedChannelIndex: -1,\r\n            layers: [],\r\n            isCorrect: true\r\n        },\r\n        backingThreads: []\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initSampler(),\r\n    soundUseList: new Array(88)\r\n};\r\n\r\nfunction initSampler() {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SET_LOGIN,\r\n    SELECT_SCORETAB,\r\n    ADD_SECTION,\r\n    SET_DEGREE_INDEX,\r\n    SET_SYMBOL_KEY,\r\n    DETAIL_PARAMS_SETTER,\r\n    GET_ELEMENT_REFFER,\r\n    INIT_DEFAULT_ELEMENTS,\r\n    SELECT_NOTE_ELEMENT,\r\n    GET_REFFER,\r\n    GET_REFFER_CONTEXT,\r\n    GET_REFFER_CHORD_PALETTE,\r\n    GET_REFFER_SECTION_PALETTE,\r\n    GET_REFFER_BACKING_PALETTE,\r\n    FLOATWND_STATE,\r\n    CHORD_PALETTE_SETTER,\r\n    SET_NOTE_DATA,\r\n    SET_DATA_LIST,\r\n    SET_NOTE_STATE,\r\n    INIT_BACKING_PALETTE,\r\n    SET_USE_CHANNELS,\r\n    BACKING_TOGGLE_MATRIX\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SET_LOGIN:\r\n            return { ...state, login: payload.login };\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.degreeIndex = payload.degreeIndex;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 80,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                labelName: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const backingPaletteState = state.noteState.backingPaletteState;\r\n            const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            const script: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseScript[i].lens.length;\r\n                const baseTable = baseScript[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                script[i] = {\r\n                    ...baseScript[i],\r\n                    table,\r\n                };\r\n            }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState,\r\n                        useChannels,\r\n                        layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = state.noteState.backingPaletteState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailModulation, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Key: </span>\r\n                        {/* <span>{detail.key}</span> */}\r\n                        <span>{\r\n                            detail.scale == SCALE_LIST[0] ?\r\n                                KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                        }</span>\r\n                    </div>\r\n                );\r\n                paramLabels.push(\r\n                    <div key={paramLabels.length}>\r\n                        <span>Scale: </span>\r\n                        <span>{detail.scale}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            /**　ディグリーネームを返す */\r\n            const getDegreeRoot = (index: number): string => {\r\n                let name = 'blank';\r\n                if (index != -1) {\r\n                    const list = detail.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n                    name = list[index];\r\n                }\r\n                return name;\r\n            }\r\n            /**　コードネームを返す */\r\n            const getChordName = (): string => {\r\n                const degreeIndex = detail.degreeIndex;\r\n                let name = '-';\r\n                if (degreeIndex != -1) {\r\n                    const keyIndex = cache.init.keyIndex;\r\n                    const list = detail.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n                    name = list[(degreeIndex + keyIndex) % 12];\r\n                }\r\n                return name;\r\n            }\r\n            /**　シンボルを返す */\r\n            const getSymbol = (index: number, symbolKey: SymbolKey): string => {\r\n                let name = '';\r\n                if (index != -1) {\r\n                    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n                        if (symbol.key == symbolKey) {\r\n                            name = symbol.name;\r\n                        }\r\n                    });\r\n                }\r\n                return name;\r\n            }\r\n\r\n            const degreeRoot = getDegreeRoot(detail.degreeIndex);\r\n            const chordName = getChordName();\r\n            const symbolName = getSymbol(detail.degreeIndex, detail.symbolKey);\r\n            const isDiatonic = DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName);\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.degreeIndex == -1 ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}>\r\n                        <span>{degreeRoot}{symbolName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}{symbolName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.labelName}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Modulation: {\r\n            const detail = props.noteElement.detail as DetailModulation;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.timeSignatures}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailModulation, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Modulation: return 'detail-mod';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.BACKING) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.degreeIndex != -1;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord,\r\n                            TypeNoteElement.Modulation,\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else {\r\n                            selectorElementClickAction();\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init:\r\n                                    {\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                    }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        rootIndex: detail.degreeIndex,\r\n                        isFlat: detail.isFlat,\r\n                        symbolKey: detail.symbolKey,\r\n                        sustain: detail.sustain,\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        // state.reffers.chordPalette.style.left = 50 + 'px';\r\n                        // state.reffers.chordPalette.style.top = 50 + 'px';\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...state.noteState.chordPaletteState,\r\n                                rootIndex: detail.degreeIndex,\r\n                                isFlat: detail.isFlat,\r\n                                symbolKey: detail.symbolKey,\r\n                                sustain: detail.sustain,\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'COPY BACKING', keyName: 'X', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatcher.score.setCriteria();\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        dispatcher.score.callSectionEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.deleteCurElement();\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: 'call' | 'order';\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordSelector.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operation: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n        const focusIndex = state.noteState.focusIndex;\r\n        const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = 0;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.rootIndex == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={[\r\n                                isSelected ? 'active' : '',\r\n                                isSelected ? 'base' : ''\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                    }\r\n                                });\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={\"half\" + (isSelected && !editorState.isFlat ? ' active' : '')}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={\"half\" + (isSelected && editorState.isFlat ? ' active' : '')}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: true\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operation = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Direct', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ChordSelector;","import { SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n","\r\nimport { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SCALE_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentElementInfo.css';\r\n\r\ntype DataRecord = {\r\n    title: string;\r\n    value: string;\r\n    disable: boolean;\r\n}\r\n\r\nconst CurrentElementInfo = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const data = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let inner: JSX.Element = <></>;\r\n    switch (data.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = data.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.degreeIndex != -1) {\r\n                const degreeRoot = DEGREE12_SHARP_LIST[detail.degreeIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[detail.degreeIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.degreeIndex != -1) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const baseBlockJsx = buildInfoBlock('Base', [\r\n                { title: 'Tempo', value: '' + cache.init.tempo, disable: false },\r\n                { title: 'Beat', value: cache.init.rythm, disable: false },\r\n                { title: 'Key', value: KEY12_SHARP_LIST[cache.init.keyIndex], disable: false },\r\n                { title: 'Scale', value: cache.init.scale, disable: false },\r\n            ]);\r\n\r\n            const chordBlockJsx = buildInfoBlock('Chord', [\r\n                { title: 'Root', value: root, disable: root == '-' },\r\n                { title: 'Symbol', value: symbolName, disable: symbolName == '-' },\r\n                { title: 'On chord', value: '-', disable: true },\r\n                { title: 'Sustain', value: String(detail.sustain), disable: false },\r\n            ]);\r\n\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {baseBlockJsx}\r\n                        {chordBlockJsx}\r\n                        {(() => {\r\n\r\n                            if (detail.degreeIndex != -1) {\r\n                                const structList: JSX.Element[] = [];\r\n                                const symbol = getSymbolParams(detail.symbolKey);\r\n                                const list = symbol?.intervals;\r\n                                const len = list?.length as number;\r\n                                for (let i = 0; i < 7; i++) {\r\n                                    if (i < len) {\r\n                                        const interval = symbol?.intervals[i] as number;\r\n                                        const struct = symbol?.struct[i];\r\n                                        const sound = KEY12_SHARP_LIST[(detail.degreeIndex + interval) % 12];\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record\">\r\n                                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                                <div className=\"sound\"><span>{sound}</span></div>\r\n                                            </div>\r\n                                        );\r\n                                    } else {\r\n                                        structList.push(\r\n                                            <div key={i} className=\"record disable\">\r\n                                                <div className=\"interval\"></div>\r\n                                                <div className=\"struct\"></div>\r\n                                                <div className=\"sound\"></div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return (<>\r\n                                    <div className=\"title\">\r\n                                        <span>Struct</span>\r\n                                    </div>\r\n                                    <div className=\"symbol-struct\">\r\n                                        {structList}\r\n                                    </div>\r\n                                </>)\r\n                            }\r\n                            return (<></>);\r\n                        })()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        case TypeNoteElement.Section: {\r\n            const detail = data.detail as DetailSection;\r\n\r\n            const sectionBlockJsx = buildInfoBlock('Section', [\r\n                { title: 'label', value: detail.labelName, disable: false },\r\n                { title: 'box count', value: '-', disable: true },\r\n                { title: 'total bar', value: '-', disable: true },\r\n                { title: 'total time', value: '-', disable: true }\r\n            ]);\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        {sectionBlockJsx}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {inner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentElementInfo;\r\n\r\n\r\nconst buildInfoBlock = (titleLabel: string, dataRecordList: DataRecord[]): JSX.Element => {\r\n    const jsxList: JSX.Element[] = [];\r\n    dataRecordList.forEach((state, i) => {\r\n        jsxList.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (state.disable ? ' disable' : '')\r\n                }>\r\n                <div className=\"title\"><span>{state.title}:</span></div>\r\n                <div className=\"value\"><span>{state.value}</span></div>\r\n            </div>\r\n        );\r\n    });\r\n    return (<>\r\n        <div className=\"title\">\r\n            <span>{titleLabel}</span>\r\n        </div>\r\n        <div className=\"current-state\">\r\n            {jsxList}\r\n        </div>\r\n    </>);\r\n}","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps ={\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        {\r\n            label: 'all clear',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                const backingState: BackingEditorState = {\r\n                    useChannels: [],\r\n                    isUsePedal: false,\r\n                    sideIndex: 0,\r\n                    selectedLenIndex: 0,\r\n                    selectedChannelIndex: -1,\r\n                    layers: [\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.LEFT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        },\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.RIGHT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        }\r\n                    ],\r\n                    isCorrect: true\r\n                };\r\n                dispatcher.initBackingPalette(backingState);\r\n            }\r\n        }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>{buttonList}</>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = channelList.length - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingLayer, BACKING_LEN_TYPE, DetailChord } from \"contents/redux/store\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    chordDetail: DetailChord;\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curLayer = props.layer;\r\n\r\n    const sustainLength = props.chordDetail.sustain * 4;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 0;\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    // コードブロックの拍の方が長い場合は上書き\r\n    const isLimit = measureLength > sustainLength;\r\n    measureLength = (!isLimit ? sustainLength : measureLength);\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const getLen = () => {\r\n            if (i % 2 == 0) {\r\n                if (i % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLimit = false;//i == sustainLength;\r\n        measureInner.push(<div key={i} className={getLen() + (isLimit ? ' limit' : '')} />);\r\n    }\r\n\r\n    const limitLeft = sustainLength * 31;\r\n    const limitJsx = !isLimit ?\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: '5px'\r\n        }} className=\"safe\"></div>)\r\n        :\r\n        (<div style={{\r\n            left: `${limitLeft}px`,\r\n            width: `${(measureLength - sustainLength) * 31}px`\r\n        }} className=\"over\"></div>);\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n            {limitJsx}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam, DetailChord } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    chordDetail: DetailChord;\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curLayer = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    channelList.forEach((channel, i) => {\r\n        channelJsxList.push(\r\n            <div\r\n                key={i}\r\n                className=\"channel\"\r\n                onClick={() => testPlaySound(channel.soundFullName)}\r\n            >\r\n                <span>{channel.soundFullName}</span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curLayer.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curLayer.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"backing-table\">\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>Right</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>Left</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    chordDetail={props.chordDetail}\r\n                    layer={curLayer}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import { SymbolParams } from \"contents/common/define\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\n\r\ntype StructMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}\r\n\r\nexport const StructMatrix = (props: StructMatrixProps) => {\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.symbol.intervals.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const interval = props.symbol.intervals[i];\r\n            const relation = props.symbol.struct[i];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: {soundName}</span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + props.symbol.intervals[i] + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = props.structs[i] + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                props.paletteState.useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                const isLimit = props.paletteState.useChannels.length >= 12 && !isSelected;\r\n\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={\r\n                            'col' +\r\n                            (isNone || isLimit ? ' disable' : '') +\r\n                            (isSelected ? ' active' : '')\r\n                        }\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\ntype BackingContextType = {\r\n    isCorrect: boolean;\r\n    setCorrect: (isCorrect: boolean) => void;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isCorrect, setCorrect] = useState(true);\r\n\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatcher.backing.setCorrect(isCorrect);\r\n    }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const detail = state.noteData.dataList[state.noteState.focusIndex].detail as DetailChord;\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    const symbol = getSymbolParams(detail.symbolKey) as SymbolParams;\r\n    const root = KEY12_SHARP_LIST[detail.degreeIndex];\r\n    const chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    symbol.intervals.forEach((value) => {\r\n        structs.push(KEY12_SHARP_LIST[(detail.degreeIndex + value) % 12]);\r\n    });\r\n\r\n    // const infoList: JSX.Element[] = [];\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, detail.degreeIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.play(false);\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.setCurBackingScript();\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            isCorrect: isCorrect,\r\n            setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                id=\"backing-palette\"\r\n                className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{detail.sustain}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={detail.degreeIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    chordDetail={detail}\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <span>{tempo}</span>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;\r\n\r\nconst StyledButton = styled.span`\r\n  user-select: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  margin: 1em;\r\n  padding: 0.3em 0.5em;\r\n  border-radius: 0.2em;\r\n  border: solid 1px #3498db;\r\n  color: #fff;\r\n  background-color: #3498db;\r\n`","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { FloatWndState } from 'contents/redux/store';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './SectionEditor.css';\r\n\r\nconst SectionEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_SECTION_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const [labelName, setLabelName] = useState('Section');\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.section.setSectionParam(labelName);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n    const getTextForm = (label: string, value: string, callback: (value: string) => void): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <div\r\n            id=\"section-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.SECTION_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getTextForm('Name', labelName, (value: string) => { setLabelName(value) })}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SectionEditor;","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentElementInfo from './sideDetail/CurrentElementInfo';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\nimport SectionEditor from './floatwnd/section/SectionEditor';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                totalBeat += detail.sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * detail.sustain;\r\n                no++;\r\n            }\r\n\r\n            // cacheList.push({\r\n            //     init: { ...cache.init },\r\n            //     progress\r\n            // });\r\n            // cacheList[i].init = { ...cache.init };\r\n            // cacheList[i].progress = progress;\r\n            \r\n            cacheList[i] = {...cacheList[i], init: { ...cache.init }, progress};\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).labelName} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        <button className=\"disable\"><span>BACK</span></button>\r\n                        <button className=\"disable\"><span>SAVE</span></button>\r\n                        <button className=\"disable\"><span>RELOAD</span></button>\r\n                        <button className=\"disable\"><span>OPTION</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <SectionEditor />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                </div>\r\n                <div id=\"score-footer\">\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentElementInfo />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.BACKING ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"right-cont\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreContBackingTab.css';\r\n\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport  { useContext } from 'react';\r\n\r\n\r\nconst ScoreContBackingTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    \r\n    return (<></>);\r\n\r\n\r\n}\r\n\r\nexport default ScoreContBackingTab;\r\n","import './ScoreContSourceTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContSourceTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    const ref = useRef({} as HTMLTextAreaElement);\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex == 2 && state.noteData.dataList.length != 0) {\r\n            ref.current.value = JSON.stringify(state.noteData);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    return (\r\n        <div id=\"scorecont-sourcetab-root\">\r\n            <textarea ref={ref}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData(JSON.parse(ref.current.value));\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n            >Load score data...</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContSourceTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContBackingTab from './contTabs/backing/ScoreContBackingTab';\r\nimport ScoreContSourceTab from './contTabs/source/ScoreContSourceTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: state.noteData.dataList.length == 0,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Source', disable: false, cont: <ScoreContSourceTab /> },\r\n                    { name: 'Backing', disable: true, cont: <ScoreContBackingTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache, DetailModulation, DetailFixed, LoginParams } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    public setLoginParams = (login: LoginParams) =>{\r\n        this.dispatch(ActionType.SET_LOGIN, {login});\r\n    } \r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.BACKING\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n        \r\n        addNoteElement: (type: TypeNoteElement, detail: DetailSection | DetailChord | DetailModulation) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, { type, detail });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.labelName = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addModulationElement: () => {\r\n            const detail = {tempo: -1} as DetailModulation;\r\n            this.score.addNoteElement(TypeNoteElement.Modulation, detail);\r\n        },\r\n        addChordElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    degreeIndex: -1,\r\n                    isFlat: false,\r\n                    symbolKey: SymbolKey.MAJOR,\r\n                    sustain: 4,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            }\r\n                        ],\r\n                        isUsePedal: false\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache);\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex++;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            let degreeIndex = detail.degreeIndex;\r\n            if(degreeIndex == -1) {\r\n                degreeIndex = 0;\r\n            }\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    rootIndex: degreeIndex,\r\n                    isFlat: detail.isFlat,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                }\r\n            });\r\n        },\r\n\r\n        callSectionEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailSection;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.SECTION_PALETTE });\r\n            // this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n            //     params: {\r\n            //         ...this.state.noteState.chordPaletteState,\r\n            //         rootIndex: detail.degreeIndex,\r\n            //         isFlat: detail.isFlat,\r\n            //         symbolKey: detail.symbolKey,\r\n            //         sustain: detail.sustain,\r\n            //     }\r\n            // });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const backing = detail.backing;\r\n            const backingState: BackingEditorState = {\r\n                useChannels: JSON.parse(JSON.stringify(backing.useChannels)),\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: JSON.parse(JSON.stringify(backing.layers)),\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * セクションエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public section = {\r\n        setSectionParam: (labelName: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    labelName\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    degreeIndex: editorState.rootIndex,\r\n                    isFlat: editorState.isFlat,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !this.state.noteState.backingPaletteState.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const baseLayers = backingPaletteState.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        play: (isProceed: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n            const rec = (isProceed: boolean) => {\r\n\r\n                const focusIndex = this.state.noteState.focusIndex;\r\n                const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n                const cache = this.state.noteState.cacheList[focusIndex];\r\n                const symbol = getSymbolParams(detail.symbolKey);\r\n                const intervals = symbol?.intervals as number[];\r\n                const editor = this.state.noteState.backingPaletteState;\r\n                const backing: BackingScript = !isProceed ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                    : detail.backing;\r\n                const sampler = this.state.sampler;\r\n                const tempo = cache.init.tempo;\r\n                // 1小節の長さミリ秒\r\n                const barMs = 60000 / tempo * 4;\r\n                const boxMs = 60000 / tempo * detail.sustain;\r\n                const adjustOverlap = barMs / 32;\r\n\r\n                // 末端に達した時の処理\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        let isEnd = true;\r\n                        if (isProceed) {\r\n                            const hasNext = this.score.focusNextElement();\r\n                            if (hasNext) {\r\n                                isEnd = false;\r\n                                rec(true);\r\n                            }\r\n                        }\r\n                        if (isEnd) {\r\n                            this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                        }\r\n                    }, boxMs)\r\n                );\r\n                for (let i = 0; i < 2; i++) {\r\n                    let headMs = 0;\r\n                    const layer = backing.layers[i];\r\n                    // 音価のループ\r\n                    layer.lens.forEach((lenBean, j) => {\r\n\r\n                        const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                        let curLenMs = barMs / lenValue;\r\n                        if (lenBean.isHalf) {\r\n                            curLenMs *= 1.5;\r\n                        }\r\n                        backing.useChannels.forEach((channel, k) => {\r\n                            layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                if (notes) {\r\n                                    const rootKeyIndex = (cache.init.keyIndex + detail.degreeIndex) % 12;\r\n                                    const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                    const octave = Math.floor(soundIndex / 12);\r\n                                    const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                    const soundFullName = root + octave;\r\n                                    const velocity = 0.7 * layer.vels[j] / 10;\r\n                                    const head = headMs + curLenMs / 3 * l;\r\n                                    const tail = !backing.isUsePedal ?\r\n                                        //ペダル未使用時\r\n                                        head + curLenMs :\r\n                                        //ペダル使用時\r\n                                        boxMs + adjustOverlap\r\n                                        ;\r\n                                    threads.push(\r\n                                        setTimeout(() => {\r\n                                            sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                            soundUseList[soundIndex]++;\r\n                                        }, head)\r\n                                    );\r\n                                    threads.push(\r\n                                        setTimeout(() => {\r\n                                            soundUseList[soundIndex]--;\r\n                                            if (soundUseList[soundIndex] == 0) {\r\n                                                sampler.triggerRelease(soundFullName);\r\n                                            }\r\n                                        }, tail)\r\n                                    );\r\n                                }\r\n                            });\r\n                        });\r\n                        headMs += curLenMs;\r\n                    });\r\n                }\r\n                this.score.setNoteState({\r\n                    ...this.state.noteState,\r\n                    editMode: EditMode.PREVIEW, backingThreads: threads\r\n                });\r\n            }\r\n            rec(isProceed);\r\n        }\r\n    }\r\n}","import { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext, useEffect, useRef, useState } from 'react';\r\nimport './LoginFrame.css';\r\n\r\nconst LoginFrame = () => {\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n\r\n    const [loginType, setLoginType] = useState('guest' as 'guest' | 'login' | 'create');\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passConfirm, setPassConfirm] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const enterDisable = (): boolean => {\r\n        switch (loginType) {\r\n            case 'guest': return false;\r\n            case 'login': {\r\n                return userName == '' || userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password == '' || password.length < 5 || password.length > 15 || !isHanEisu(password);\r\n            }\r\n            case 'create': {\r\n                return userName.length < 5 || userName.length > 15 || !isHanEisu(userName) ||\r\n                    password.length < 5 || password.length > 15 || !isHanEisu(password) ||\r\n                    passConfirm.length < 5 || passConfirm.length > 15 || !isHanEisu(passConfirm);\r\n            }\r\n        }\r\n    }\r\n    return (<>\r\n        <div id=\"logo\"><span>Virtual Harmonizor</span></div>\r\n        <div id=\"login-frame\" ref={ref}>\r\n            <div className=\"guide\">\r\n                <span>Start to Virtual Harmonizor</span>\r\n            </div>\r\n            <div className=\"type\">\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"guest\"\r\n                    name=\"guest\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setError('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"login\"\r\n                    name=\"login\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setError('')}\r\n                />\r\n                <LoginTypeSwitch\r\n                    curLoginType=\"create\"\r\n                    name=\"create account\" loginType={loginType}\r\n                    setLoginType={setLoginType}\r\n                    resetError={() => setError('')}\r\n                />\r\n            </div>\r\n            <div className=\"body\">\r\n                <TextForm\r\n                    label=\"user name\"\r\n                    stateValue={userName}\r\n                    stateSetter={setUserName}\r\n                    isMask={false}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password\"\r\n                    stateValue={password}\r\n                    stateSetter={setPassword}\r\n                    isMask={true}\r\n                    isDisable={!['login', 'create'].includes(loginType)}\r\n                />\r\n                <TextForm\r\n                    label=\"password confirm\"\r\n                    stateValue={passConfirm}\r\n                    stateSetter={setPassConfirm}\r\n                    isMask={true}\r\n                    isDisable={!['create'].includes(loginType)}\r\n                />\r\n            </div>\r\n            <div className=\"error\">\r\n                <span>{error}</span>\r\n            </div>\r\n            <div\r\n                className={['opr', enterDisable() ? 'disable' : ''].join(' ')}\r\n            >\r\n                <button\r\n                    onClick={() => {\r\n\r\n                        switch (loginType) {\r\n                            case 'guest': {\r\n                                // ref.current.style.opacity = '0';\r\n                                // setInterval(()=>{\r\n                                // }, 500);\r\n                                dispatcher.setLoginParams({\r\n                                    ...state.login,\r\n                                    isLogin: true,\r\n                                    user: 'Guest'\r\n                                });\r\n                            }\r\n                                break;\r\n                            case 'login': {\r\n                                setError('The login attempt failed. Either the user ID or password is invalid.');\r\n                            }\r\n                                break;\r\n                            case 'create': {\r\n                                setError('That user id has already been recorded.');\r\n                            }\r\n                                break;\r\n                        }\r\n                    }}\r\n                >\r\n                    enter\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>);\r\n}\r\n\r\nconst LoginTypeSwitch = (\r\n    props: {\r\n        name: string,\r\n        curLoginType: string,\r\n        loginType: string,\r\n        setLoginType: Function,\r\n        resetError: Function\r\n    }\r\n) => {\r\n    const isSelected = props.loginType == props.curLoginType;\r\n    return (\r\n        <button\r\n            className={isSelected ? 'active' : ''}\r\n            onClick={() => {\r\n                if (!isSelected) {\r\n                    props.setLoginType(props.curLoginType);\r\n                    props.resetError();\r\n                }\r\n            }}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\nconst TextForm = (\r\n    props: {\r\n        label: string,\r\n        stateValue: string,\r\n        stateSetter: Function,\r\n        isMask: boolean,\r\n        isDisable: boolean\r\n    }\r\n) => {\r\n    useEffect(() => {\r\n        if (props.isDisable) {\r\n            props.stateSetter('');\r\n        }\r\n    }, [props.isDisable]);\r\n    const strLen = props.stateValue.length;\r\n    return (\r\n        <div className={['form', props.isDisable ? 'disable' : ''].join(' ')}>\r\n            <span>{props.label}:</span>\r\n            <input\r\n                className={[\r\n                    !props.isDisable && strLen == 0 ? 'required' : '',\r\n                    !props.isDisable && (strLen < 5 || strLen > 15) ? 'range' : '',\r\n                    !props.isDisable && !isHanEisu(props.stateValue) ? 'ban' : ''\r\n                ].join(' ')}\r\n                type={props.isMask ? 'password' : 'text'}\r\n                value={props.stateValue}\r\n                onChange={(e) => props.stateSetter(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isHanEisu = (str: string) => {\r\n    str = (str == null) ? \"\" : str;\r\n    if (str.match(/^[A-Za-z0-9_!]*$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default LoginFrame;","import { GlobalContext } from 'contents/MainFrame';\r\nimport { useContext } from 'react';\r\nimport './UserPlate.css';\r\n\r\nconst UserPlate = (\r\n    props: {\r\n    }\r\n) => {\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n    return (\r\n        <div id=\"user-plate\" className={[''].join(' ')}>\r\n            <div className=\"user-name\">\r\n                <span>{state.login.user}</span>\r\n            </div>\r\n            <div \r\n            className=\"logout\"\r\n            \r\n            onClick={() => {\r\n\r\n                dispatcher.setLoginParams({\r\n                    ...state.login,\r\n                    isLogin: false,\r\n                    user: ''\r\n                });\r\n            }}>\r\n                <span>LOGOUT</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPlate;","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\nimport LoginFrame from './login/LoginFrame';\r\nimport UserPlate from './user/UserPlate';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                {\r\n                    !state.login.isLogin ?\r\n                        <LoginFrame />\r\n                        :\r\n                        <>\r\n                            <UserPlate />\r\n                            <TabbedPane groupName=\"system-tabs\"\r\n                                tabElements={[\r\n                                    { name: 'Account', disable: true, cont: <div></div> },\r\n                                    { name: 'Palette', disable: true, cont: <div></div> },\r\n                                    { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                                    { name: 'Backing', disable: true, cont: <div></div> },\r\n                                    { name: 'Symbol', disable: true, cont: <div></div> },\r\n                                    { name: 'Sampler', disable: true, cont: <div></div> },\r\n                                    { name: 'Setting', disable: true, cont: <div></div> }\r\n                                ]}\r\n                                activeNo={2}\r\n                            />\r\n                        </>\r\n                }\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BackingScript, BACKING_LEN_TYPE, BACKING_SIDE, CHORD_MODE, DetailChord, DetailSection, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    if (state.scoreTabIndex != 1) {\r\n        return;\r\n    }\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Section: {\r\n            const detail = selectedData.detail as DetailSection;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callSectionEditor();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.SECTION_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.degreeIndex != -1) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                                dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case 'z': {\r\n                                fetch(\"http://localhost:5000/post\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        sql: 'SELECT rowid AS id, info FROM lorem'\r\n                                    })\r\n                                })\r\n                                    .then(response => {\r\n                                        return response.json();\r\n                                    })\r\n                                    .then(data => {\r\n                                        alert(JSON.stringify(data));\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error + \"失敗しました\");\r\n                                    });\r\n                            }\r\n                                break;\r\n                            case 'q': {\r\n                                fetch(\"http://localhost:5000/update\", {\r\n                                    mode: 'cors',\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                        Accept: 'application/json',\r\n                                        'Content-Type': 'application/json',\r\n                                    },\r\n                                    body: JSON.stringify({\r\n                                        database: 'system.db',\r\n                                        sql: `insert into user_tbl(name, password) values('kohno', 'p@ssw0rd00!')`\r\n                                    })\r\n                                })\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.BACKING) {\r\n\r\n                        switch (e.key) {\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowRight':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex + 1 });\r\n                            break;\r\n                        case 'ArrowLeft':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                        case '1':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const backing = state.noteState.backingPaletteState;\r\n                    const isCorrect = backing.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.play(false);\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                        // JSON取得（開発用）\r\n                        case 'z': {\r\n                            const script: BackingScript = {\r\n                                isUsePedal: backing.isUsePedal,\r\n                                layers: backing.layers,\r\n                                useChannels: backing.useChannels\r\n                            };\r\n                            alert(JSON.stringify(script));\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'f':\r\n                    dispatcher.score.addModulationElement();\r\n                    break;\r\n                case 'w': {\r\n                    const detail = selectedData.detail as DetailChord;\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            rootIndex: detail.degreeIndex,\r\n                            isFlat: detail.isFlat,\r\n                            symbolKey: detail.symbolKey,\r\n                            sustain: detail.sustain,\r\n                        }\r\n                    });\r\n                }\r\n                    break;\r\n                case 'z': {\r\n                    alert(JSON.stringify(state.noteState.cacheList.length));\r\n                    // alert(JSON.stringify(detail));\r\n                    // dispatch(ActionType.SELECT_SCORETAB, { index: 2 });\r\n\r\n                    // const data = state.noteData.dataList[state.noteState.focusIndex];\r\n                    // data.detail = {\"degreeIndex\":2,\"isFlat\":false,\"symbolKey\":1,\"sustain\":4,\"backing\":{\"useChannels\":[{\"octave\":3,\"structIndex\":0},{\"octave\":3,\"structIndex\":1},{\"octave\":3,\"structIndex\":2},{\"octave\":4,\"structIndex\":0},{\"octave\":4,\"structIndex\":1},{\"octave\":4,\"structIndex\":2},{\"octave\":5,\"structIndex\":1},{\"octave\":5,\"structIndex\":2}],\"layers\":[{\"lens\":[{\"len\":\"LEN8\",\"isDiv3\":false,\"isHalf\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false}],\"side\":\"LEFT\",\"table\":[[[true],[false],[false],[false],[false]],[[false],[false],[false],[false],[false]],[[false],[false],[true],[true],[false]],[[false],[false],[false],[false],[false]],[[true],[false],[false],[false],[false]],[[false],[true],[false],[false],[false]],[[false],[false],[false],[false],[false]],[[false],[false],[false],[false],[true]]],\"vels\":[5,5,5,5,5]},{\"lens\":[{\"len\":\"LEN1\",\"isDiv3\":false,\"isHalf\":false}],\"side\":\"RIGHT\",\"table\":[[[false]],[[false]],[[false]],[[false]],[[false]],[[false]],[[false]],[[false]]],\"vels\":[5]}]}};\r\n                    // dispatcher.setNoteData(state.noteData);\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\n\n// import Tone from 'lib/Tone.min.js';\n// import Tone from \"react-tone\";\nimport * as Tone from \"tone\";\n\nimport './desty.css';\nimport './App.css';\nimport MainFrame from 'contents/MainFrame';\n\nfunction App() {\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <MainFrame />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}