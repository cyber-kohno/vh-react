{"version":3,"sources":["contents/common/define.tsx","contents/common/TabbedPane.tsx","contents/redux/store.tsx","contents/redux/reducer.tsx","contents/systab/score/contTabs/note/element/detail/ScoreElementDetail.tsx","contents/systab/score/contTabs/note/element/ScoreElement.tsx","contents/systab/score/contTabs/note/OutlineSection.tsx","contents/systab/score/contTabs/note/floatwnd/context/NoteContextMenu.tsx","contents/systab/score/contTabs/note/floatwnd/chord/ChordSelector.tsx","contents/common/utils.tsx","contents/systab/score/contTabs/note/sideDetail/CurrentElementInfo.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingOperation.tsx","contents/systab/score/contTabs/note/floatwnd/backing/NotesMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/SplitMeasure.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingTable.tsx","contents/systab/score/contTabs/note/floatwnd/backing/StructMatrix.tsx","contents/systab/score/contTabs/note/floatwnd/backing/BackingEditor.tsx","contents/systab/score/contTabs/note/floatwnd/init/InitEditor.tsx","contents/systab/score/contTabs/note/ScoreContNoteTab.tsx","contents/systab/score/contTabs/library/ScoreContLibraryTab.tsx","contents/systab/score/contTabs/backing/ScoreContBackingTab.tsx","contents/systab/score/contTabs/source/ScoreContSourceTab.tsx","contents/systab/score/ScoreTab.tsx","contents/redux/dispatcher.tsx","contents/MainFrame.tsx","contents/operation/InputNoteTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["KeyScale","TabLabel","props","classValues","push","isActive","isDisable","className","join","onClick","selectTab","name","TabContents","cont","TabbedPane","useState","activeNo","setActiveNo","useEffect","tabList","contList","tabElements","forEach","tab","index","disable","undefined","selectTabIndex","id","groupName","DEGREE12_FLAT_LIST","DEGREE12_SHARP_LIST","KEY12_FLAT_LIST","KEY12_SHARP_LIST","KEY12_MAJOR_SCALE_LIST","KEY12_MINOR_SCALE_LIST","SCALE_LIST","RYTHM_LIST","SymbolKey","DIATONIC_MAJOR_SCALE_DEGREE_NAMES","SymbolType","SYMBOL_PARAMS_LIST","key","MAJOR","sortNo","MINOR","SUS4","DIM","AUG","MAJ7","SEVENTH","MIN7","MINOR_MAJ7","ADD9","MINOR_ADD9","SIXTH_9TH","MINOR_MINUS5","TRIAD","TETRAD7TH","TETRAD9TH","FloatWndState","ChordPaletteLine","BACKING_SIDE","BACKING_LEN_TYPE","CHORD_MODE","EditMode","TypeNoteElement","DIATONIC_MAJOR_SCALE_LIST","degreeIndex","symbolKey","ActionType","initialState","scoreTabIndex","noteData","scoreName","chordMode","SCALE","dataList","noteState","focusIndex","cacheList","criteriaIndex","editMode","NORMAL","selectedList","floatwndState","NONE","chordPaletteState","isAddition","selectedLine","Root","rootIndex","isFlat","sustain","backingPaletteState","useChannels","isUsePedal","sideIndex","selectedLenIndex","selectedChannelIndex","layers","isCorrect","backingThreads","reffers","sampler","Sampler","toDestination","soundUseList","Array","reducer","state","action","type","payload","SELECT_SCORETAB","ADD_SECTION","slice","detail","splice","Section","SET_DEGREE_INDEX","pos","SET_SYMBOL_KEY","INIT_DEFAULT_ELEMENTS","Init","tempo","rythm","keyIndex","scale","Fixed","label","SELECT_NOTE_ELEMENT","GET_REFFER_CONTEXT","contextMneu","reffer","GET_REFFER_CHORD_PALETTE","chordPalette","GET_REFFER_SECTION_PALETTE","sectionPalette","GET_REFFER_BACKING_PALETTE","backingPalette","FLOATWND_STATE","CHORD_PALETTE_SETTER","params","DETAIL_PARAMS_SETTER","GET_REFFER","SET_NOTE_DATA","data","SET_DATA_LIST","SET_NOTE_STATE","GET_ELEMENT_REFFER","INIT_BACKING_PALETTE","SET_USE_CHANNELS","baseScript","script","i","channelCount","length","lensSplitCount","lens","baseTable","table","y","x","BACKING_TOGGLE_MATRIX","lenIndex","channelIndex","divIndex","isUse","ScoreElementDetail","useContext","GlobalContext","dispatcher","cache","noteElement","paramLabels","Chord","degreeRoot","getDegreeRoot","chordName","init","getChordName","symbolName","symbol","getSymbol","isDiatonic","includes","sustainJsx","barCount","progress","remaindBeat","headMSec","Math","round","notesCount","backing","getNotesCount","DIRECT","Modulation","ScoreElement","dispatch","isAccept","ref","useRef","current","isSelected","isCriteria","normalElementClickAction","additionBtn","score","addChordElement","CHORD_PALETTE","retJsxList","no","deleteElement","getHeaderElement","getStyleFromType","posList","secNo","curSecNo","el","isCurrentSection","BACKING","some","setSelectedList","selectorElementClickAction","onContextMenu","e","INIT_PALETTE","style","left","clientX","top","clientY","CONTEXT_MENU","OutlineSection","isCurrent","MenuRecord","executer","menuType","keyName","NoteContextMenu","close","menuPropsList","curElement","addSectionElement","callBackingEditor","menuList","ChordSelector","chordList","symbolList","beatList","operation","isDirect","editorState","degS","degF","chdS","chdF","isHalf","buildLabelSrc","Symbol","Sustain","chord","setCurChordParam","getSymbolParams","CurrentElementInfo","inner","root","chordRoot","stateRecordList","title","value","stateList","structList","list","intervals","len","interval","struct","sound","BackingOperation","paletteState","curSideScript","curLenBean","curVolume","vels","setCurrentLenBean","lenBean","initBackingPalette","setCurrentLen","lenType","isDiv3","updateCurrentVolume","sub","nowVol","curLen","buttons","LEN16","callback","LEN8","LEN4","LEN2","LEN1","isAcceptHalf","isAcceptDiv3","addLen","delLen","backingState","side","LEFT","RIGHT","buttonList","button","getActiveState","curLayerIndex","lineIndex","cur","back","curCellRange","getCellRange","backLenBean","j","k","backRange","isOverlapJudge","range1","range2","head","width","getLenSize","size","NotesMatrix","setCorrect","BackingContext","channelList","matrixLayersJsx","hasError","l","linesJsx","layer","isCurLayer","cellList","classes","divList","divCnt","activeState","toggleMatrix","SplitMeasure","measureInner","measureLength","cnt","isLast","BackingTable","testPlaySound","channelJsxList","channel","soundFullName","volumeList","volume","height","setLayerIndex","setUsePedal","StructMatrix","structTable","cols","soundName","structs","relation","soundIndex","octave","floor","isNone","structIndex","isLimit","sort","a","b","setUseChannels","createContext","getChannelList","BackingEditor","BACKING_PALETTE","triggerAttack","setTimeout","triggerRelease","play","setCurBackingScript","Provider","InitEditor","setTempo","setRythm","setKey","setScale","setInitParam","getItemSelector","optionsJsx","display","onChange","target","Number","min","max","map","item","String","toString","EditModeBorder","styled","span","PREVIEW","ScoreContNoteTab","elementList","setElementList","sectionList","setSectionList","totalBeat","totalMsec","lastBar","bar","setNoteState","isModalBlind","ScoreContLiblaryTab","setNoteData","ScoreContBackingTab","ScoreContSourceTab","JSON","stringify","parse","ScoreTab","Dispatcher","dispatchBase","apllyFlasah","backgroundColor","apllyFlashCur","apllyFlashList","setCriteria","releaseCriteria","getInitElement","setEditMode","curIndex","deleteCurElement","focusPreviousElement","focusNextElement","focusPreviousSection","focusNextSection","focusInitElement","callChordSelector","chordDetail","line","updateLenIndex","getCurLenIndex","isFirstCurLen","isLastCurLen","sideScript","getSideScript","getCurLenBean","setCurLen","updateCurVolume","velocity","getCurVelocity","use","changeLayerIndex","baseLayers","count","cell","isProceed","threads","rec","editor","barMs","boxMs","adjustOverlap","isEnd","headMs","lenValue","replace","curLenMs","notes","tail","this","MainFrame","useReducer","actionType","tabIndex","onKeyDown","selectedData","diatonicChord","baseBacking","alert","thr","clearInterval","releaseAll","KeyboardShortCutAction","App","document","oncontextmenu","window","addEventListener","indexOf","keyCode","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4cA8BYA,E,iFCmCNC,EAAW,SAACC,GACd,IAAMC,EAAc,GAIpB,OAHAA,EAAYC,KAAK,YACjBD,EAAYC,KAAKF,EAAMG,SAAW,SAAW,IAC7CF,EAAYC,KAAKF,EAAMI,UAAY,cAAgB,IAE/C,qBAAKC,UAAWJ,EAAYK,KAAK,KAAMC,QAAS,kBAAMP,EAAMQ,aAA5D,SACI,+BAAOR,EAAMS,UAUnBC,EAAc,SAACV,GACjB,OAAIA,EAAMG,SAIN,qBAAKE,UAAU,WAAf,SACKL,EAAMW,OAJH,8BASDC,EA5EI,SAACZ,GAA4B,IAAD,EACXa,mBAASb,EAAMc,UADJ,mBACpCA,EADoC,KAC1BC,EAD0B,KAG3CC,qBAAU,WACND,EAAYf,EAAMc,YACnB,CAACd,EAAMc,WAGV,IAQMG,EAAyB,GACzBC,EAA0B,GAYhC,OAXAlB,EAAMmB,YAAYC,SAAQ,SAACC,EAAKC,GAC5BL,EAAQf,KACJ,cAAC,EAAD,CACgBO,KAAMY,EAAIZ,KAAMN,SAAUmB,GAASR,EAAUV,UAAWiB,EAAIE,QACxEf,UAAW,kBAdA,SAACc,QACSE,IAAzBxB,EAAMyB,eACNzB,EAAMyB,eAAeH,GAErBP,EAAYO,GAUSG,CAAeH,KAD3BA,IAIbJ,EAAShB,KACL,cAAC,EAAD,CAAyBS,KAAMU,EAAIV,KAAMR,SAAUmB,GAASR,GAA1CQ,OAItB,sBAAKI,GAAI1B,EAAM2B,UAAf,UACI,qBAAKtB,UAAU,WAAf,SACKY,IAEL,qBAAKZ,UAAU,YAAf,SACKa,Q,eDpDJU,G,MAAqB,CAC9B,SAAK,UAAM,SAAK,UAAM,SAAK,SAAK,UAAM,SAAK,UAAM,SAAK,UAAM,WAEnDC,EAAsB,CAC/B,SAAK,UAAM,SAAK,UAAM,SAAK,SAAK,UAAM,SAAK,UAAM,SAAK,UAAM,UAGnDC,EAAkB,CAC3B,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEnDC,EAAmB,CAC5B,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEnDC,EAAyB,CAClC,IAAK,QAAS,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEtDC,EAAyB,CAClC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAEnDC,EAAa,CACtB,QAAS,SAEAC,EAAa,CACtB,MAAO,MAAO,MAAO,MAAO,S,SAOpBrC,K,UAAAA,E,aAAAA,M,KAOL,IA+BKsC,EA/BCC,EAA8C,CACvD,SAAK,aACL,UAAM,WACN,UAAM,WACN,SAAK,aACL,SAAK,UACL,UAAM,WACN,cAAU,iB,SAwBFD,O,iBAAAA,I,iBAAAA,I,eAAAA,I,aAAAA,I,aAAAA,I,eAAAA,I,qBAAAA,I,eAAAA,I,2BAAAA,I,eAAAA,I,4BAAAA,I,0BAAAA,I,iCAAAA,M,KAgBL,IAgBKE,EAhBCC,EAAqC,CAC9C,CAAEC,IAAKJ,EAAUK,MAAOC,OAAQ,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,GAAI,OAAU,CAAC,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,IAC7I,CAAEF,IAAKJ,EAAUO,MAAO,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,IAAK,OAAU,CAAC,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,IAChJ,CAAEH,IAAKJ,EAAUQ,KAAM,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,OAAQ,OAAU,CAAC,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,IAClJ,CAAEJ,IAAKJ,EAAUS,IAAK,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,MAAO,OAAU,CAAC,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,IAChJ,CAAEL,IAAKJ,EAAUU,IAAK,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,MAAO,OAAU,CAAC,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,IAChJ,CAAEN,IAAKJ,EAAUW,KAAM,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,OAAQ,OAAU,CAAC,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,KAC3J,CAAEP,IAAKJ,EAAUY,QAAS,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,IAAK,OAAU,CAAC,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,KAC3J,CAAER,IAAKJ,EAAUa,KAAM,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,KAAM,OAAU,CAAC,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,KACzJ,CAAET,IAAKJ,EAAUc,WAAY,OAAU,EAAG,SAAY,EAAG,MAAS,EAAG,KAAQ,QAAS,OAAU,CAAC,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,KAClK,CAAEV,IAAKJ,EAAUe,KAAM,OAAU,GAAI,SAAY,EAAG,MAAS,EAAG,KAAQ,OAAQ,OAAU,CAAC,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,IAC5J,CAAEX,IAAKJ,EAAUgB,WAAY,OAAU,GAAI,SAAY,EAAG,MAAS,EAAG,KAAQ,QAAS,OAAU,CAAC,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,IACnK,CAAEZ,IAAKJ,EAAUiB,UAAW,OAAU,GAAI,SAAY,EAAG,MAAS,EAAG,KAAQ,OAAQ,OAAU,CAAC,KAAM,KAAM,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,EAAG,EAAG,IAC1K,CAAEb,IAAKJ,EAAUkB,aAAc,OAAU,GAAI,SAAY,EAAG,MAAS,EAAG,KAAQ,QAAS,OAAU,CAAC,KAAM,KAAM,MAAO,MAAS,CAAC,MAAO,UAAa,CAAC,EAAG,EAAG,M,SAGpJhB,O,iBAAAA,I,yBAAAA,I,0BAAAA,M,KAYEA,EAAWiB,MACbnB,EAAUK,MACVL,EAAUO,MACVP,EAAUQ,KACVR,EAAUS,IACVT,EAAUU,IACVV,EAAUkB,aAIRhB,EAAWkB,UACbpB,EAAUW,KACVX,EAAUY,QACVZ,EAAUc,WAIRZ,EAAWmB,UACbrB,EAAUe,KACVf,EAAUgB,WArBf,IErEKM,EAgBAC,EAuBAC,EAWAC,EAkBAC,EAmBAC,EA+CAC,EFjCCC,EAAyC,CAClD,CAAEC,YAAa,EAAGC,UAAW/B,EAAUK,OACvC,CAAEyB,YAAa,EAAGC,UAAW/B,EAAUO,OACvC,CAAEuB,YAAa,EAAGC,UAAW/B,EAAUO,OACvC,CAAEuB,YAAa,EAAGC,UAAW/B,EAAUK,OACvC,CAAEyB,YAAa,EAAGC,UAAW/B,EAAUK,OACvC,CAAEyB,YAAa,EAAGC,UAAW/B,EAAUO,OACvC,CAAEuB,YAAa,GAAIC,UAAW/B,EAAUkB,e,kBE5GhCI,K,YAAAA,E,4BAAAA,E,8BAAAA,E,kCAAAA,E,4BAAAA,E,mCAAAA,M,cAgBAC,O,eAAAA,I,mBAAAA,I,sBAAAA,M,cAuBAC,K,YAAAA,E,eAAAA,M,cAWAC,K,cAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,aAAAA,M,cAkBAC,K,cAAAA,E,iBAAAA,M,cAmBAC,O,mBAAAA,I,qBAAAA,I,sBAAAA,M,cA+CAC,K,YAAAA,E,kBAAAA,E,cAAAA,E,wBAAAA,E,eAAAA,M,KAwBL,ICjMKI,EDiMCC,EAAsB,CAC/BC,cAAe,EACfC,SAAU,CAAEC,UAAW,GAAIC,UAAWX,EAAWY,MAAOC,SAAU,IAClEC,UAAW,CACPC,YAAa,EACbC,UAAW,GACXC,eAAgB,EAChBC,SAAUjB,EAASkB,OACnBC,aAAc,GACdC,cAAezB,EAAc0B,KAC7BC,kBAAmB,CACfC,YAAY,EACZC,aAAc5B,EAAiB6B,KAC/BC,UAAW,EACXC,QAAQ,EACRvB,UAAW5B,EAAmB,GAAGC,IACjCmD,QAAS,GAEbC,oBAAqB,CACjBC,YAAa,GACbC,YAAY,EACZC,UAAW,EACXC,iBAAkB,EAClBC,sBAAuB,EACvBC,OAAQ,GACRC,WAAW,GAEfC,eAAgB,IAEpBC,QAAS,GACTC,QAKO,IAAIC,IAAQ,CACf,GAAM,+DACN,GAAM,+DACN,MAAO,+DACP,GAAM,+DACN,GAAM,+DACN,GAAM,iEACPC,gBAXHC,aAAc,IAAIC,MAAM,M,SChOhBtC,K,kCAAAA,E,0BAAAA,E,oCAAAA,E,gCAAAA,E,4CAAAA,E,wCAAAA,E,8CAAAA,E,0CAAAA,E,wBAAAA,E,wCAAAA,E,oDAAAA,E,wDAAAA,E,wDAAAA,E,gCAAAA,E,4CAAAA,E,8BAAAA,E,8BAAAA,E,gCAAAA,E,4CAAAA,E,oCAAAA,E,+CAAAA,M,KAwBL,IAAMuC,EAAU,SAACC,EAAcC,GAClC,IAAMC,EAAmBD,EAAOC,KAC1BC,EAAeF,EAAOE,QAC5B,OAAQD,GACJ,KAAK1C,EAAW4C,gBACZ,OAAO,2BAAKJ,GAAZ,IAAmBtC,cAAeyC,EAAQzF,QAC9C,KAAK8C,EAAW6C,YACZ,IAAMtC,EAAWiC,EAAMrC,SAASI,SAASuC,QACnCC,EAAS,CACfA,MAAe,WAKf,OAJAxC,EAASyC,OAAOL,EAAQzF,MAAQ,EAAG,EAAG,CAClCwF,KAAM9C,EAAgBqD,QACtBF,OAAQA,IAEL,2BACAP,GADP,IACcrC,SAAS,2BACZqC,EAAMrC,UADK,IACKI,SAAUA,MAIzC,KAAKP,EAAWkD,iBAGZ,OAFeV,EAAMrC,SAASI,SAASoC,EAAQQ,KAAKJ,OAC7CjD,YAAc6C,EAAQ7C,YACtB,2BACA0C,GADP,IACcrC,SAAS,2BACZqC,EAAMrC,UADK,IACKI,SAAUiC,EAAMrC,SAASI,aAIxD,KAAKP,EAAWoD,eAGZ,OAFeZ,EAAMrC,SAASI,SAASoC,EAAQQ,KAAKJ,OAC7ChD,UAAY4C,EAAQ5C,UACpB,2BACAyC,GADP,IACcrC,SAAS,2BACZqC,EAAMrC,UADK,IACKI,SAAUiC,EAAMrC,SAASI,aAIxD,KAAKP,EAAWqD,sBAEZ,OAAO,2BACAb,GADP,IACcrC,SAAS,2BACZqC,EAAMrC,UADK,IACKI,SAAU,CACzB,CACImC,KAAM9C,EAAgB0D,KACtBP,OAAQ,CACJQ,MAAO,GACPC,MAAO,MACPC,SAAU,EACVC,MAAO,UAGf,CACIhB,KAAM9C,EAAgB+D,MACtBZ,OAAQ,CACJa,MAAO,UAGf,CACIlB,KAAM9C,EAAgBqD,QACtBF,OAAQ,CACJa,MAAO,YAGf,CACIlB,KAAM9C,EAAgB+D,MACtBZ,OAAQ,CACJa,MAAO,WAKvBpD,UAAU,2BACHgC,EAAMhC,WADJ,IACeE,UAAW,CAAC,GAAkB,GAAkB,GAAkB,QAIlG,KAAKV,EAAW6D,oBACZ,OAAO,2BACArB,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKC,WAAYkC,EAAQzF,UAIpD,KAAK8C,EAAW8D,mBACZ,OAAO,2BACAtB,GADP,IACcP,QAAQ,2BAAMO,EAAMP,SAAb,IAAsB8B,YAAapB,EAAQqB,WAGpE,KAAKhE,EAAWiE,yBACZ,OAAO,2BACAzB,GADP,IACcP,QAAQ,2BAAMO,EAAMP,SAAb,IAAsBiC,aAAcvB,EAAQqB,WAGrE,KAAKhE,EAAWmE,2BACZ,OAAO,2BACA3B,GADP,IACcP,QAAQ,2BAAMO,EAAMP,SAAb,IAAsBmC,eAAgBzB,EAAQqB,WAGvE,KAAKhE,EAAWqE,2BACZ,OAAO,2BACA7B,GADP,IACcP,QAAQ,2BAAMO,EAAMP,SAAb,IAAsBqC,eAAgB3B,EAAQqB,WAGvE,KAAKhE,EAAWuE,eACZ,OAAO,2BACA/B,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKO,cAAe4B,EAAQH,UAIvD,KAAKxC,EAAWwE,qBACZ,OAAO,2BACAhC,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKS,kBAAmB0B,EAAQ8B,WAI3D,KAAKzE,EAAW0E,qBACZ,IAAMnE,EAAWiC,EAAMrC,SAASI,SAASuC,QAGzC,OAFavC,EAASoC,EAAQQ,KACzBJ,OAASJ,EAAQ8B,OACf,2BACAjC,GADP,IACcrC,SAAS,2BACZqC,EAAMrC,UADK,IACKI,SAAUA,MAIzC,KAAKP,EAAW2E,WACZ,OAAO,2BACAnC,GADP,IACcP,QAASU,EAAQV,UAGnC,KAAKjC,EAAW4E,cACZ,OAAO,2BACApC,GADP,IACcrC,SAAUwC,EAAQkC,OAGpC,KAAK7E,EAAW8E,cACZ,OAAO,2BACAtC,GADP,IACcrC,SAAS,2BAAMqC,EAAMrC,UAAb,IAAuBI,SAAUoC,EAAQpC,aAGnE,KAAKP,EAAW+E,eACZ,OAAO,2BACAvC,GADP,IACchC,UAAWmC,EAAQnC,YAGrC,KAAKR,EAAWgF,mBAGZ,OAFcxC,EAAMhC,UAAUE,UAAUiC,EAAQQ,KAC1Ca,OAASrB,EAAQqB,OAChB,2BACAxB,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKE,UAAW8B,EAAMhC,UAAUE,cAI3D,KAAKV,EAAWiF,qBACZ,OAAO,2BACAzC,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKgB,oBAAqBmB,EAAQnB,wBAI7D,KAAKxB,EAAWkF,iBAKZ,IAJA,IAAM1D,EAAsBgB,EAAMhC,UAAUgB,oBACtC2D,EAAa3D,EAAoBM,OACjCL,EAAckB,EAAQlB,YACtB2D,EAAyB,IAAI9C,MAAM,GAChC+C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAMxB,IALA,IAAMC,EAAe9D,EAAoBC,YAAY8D,OAC/CC,EAAiBL,EAAWE,GAAGI,KAAKF,OACpCG,EAAYP,EAAWE,GAAGM,MAC1BA,EAAuB,IAAIrD,MAAMgD,GAE9BM,EAAI,EAAGA,EAAIN,EAAcM,IAC9B,GAAIA,EAAIF,EAAUH,OACdI,EAAMC,GAAKF,EAAUE,OAClB,CACHD,EAAMC,GAAK,IAAItD,MAAMkD,GACrB,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAgBK,IAChCF,EAAMC,GAAGC,GAAK,IAAIvD,MAAM,GACxBqD,EAAMC,GAAGC,GAAG,IAAK,EAI7BT,EAAOC,GAAP,2BACOF,EAAWE,IADlB,IAEIM,UAGR,OAAO,2BACAnD,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKgB,oBAAoB,2BACjCgB,EAAMhC,UAAUgB,qBADgB,IAEnCC,cACAK,OAAQsD,QAKxB,KAAKpF,EAAW8F,sBACZ,IAAMnE,EAAoBgB,EAAQhB,UAC5BoE,EAAmBpD,EAAQoD,SAC3BC,EAAuBrD,EAAQqD,aAC/BC,EAAmBtD,EAAQsD,SAC3Bb,EAAS5C,EAAMhC,UAAUgB,oBAAoBM,OAGnD,OAFAsD,EAAOzD,GAAWgE,MAAMK,GAAcD,GAAUE,GAAYtD,EAAQuD,MAE7D,2BACA1D,GADP,IACchC,UAAU,2BACbgC,EAAMhC,WADM,IACKgB,oBAAoB,2BACjCgB,EAAMhC,UAAUgB,qBADgB,IACKM,OAAQsD,UC5EzDe,EA5JY,SAACvK,GAAoC,IAAD,EAE7BwK,qBAAWC,IAAjC7D,EAFmD,EAEnDA,MAAO8D,EAF4C,EAE5CA,WAETjG,EAAYmC,EAAMrC,SAASE,UAC3BkG,EAAQ/D,EAAMhC,UAAUE,UAAU9E,EAAMsB,OAE9C,OAAQtB,EAAM4K,YAAY9D,MACtB,KAAK9C,EAAgB+D,MACjB,IAAMZ,EAASnH,EAAM4K,YAAYzD,OACjC,OACI,+BAAOA,EAAOa,QAGtB,KAAKhE,EAAgB0D,KACjB,IAAMP,EAASnH,EAAM4K,YAAYzD,OAC3B0D,EAA6B,GAkCnC,OAjCAA,EAAY3K,KACR,gCACI,2CACA,+BAAOiH,EAAOQ,UAFRkD,EAAYlB,SAK1BkB,EAAY3K,KACR,gCACI,0CACA,+BAAOiH,EAAOS,UAFRiD,EAAYlB,SAKtBlF,GAAaX,EAAWY,OACpBkC,EAAMrC,SAASE,WAAaX,EAAWY,QACvCmG,EAAY3K,KACR,gCACI,yCAEA,+BACIiH,EAAOW,OAAS5F,EAAW,GACvBF,EAAuBmF,EAAOU,UAC9B5F,EAAuBkF,EAAOU,cANhCgD,EAAYlB,SAU1BkB,EAAY3K,KACR,gCACI,2CACA,+BAAOiH,EAAOW,UAFR+C,EAAYlB,UAQ9B,8BACKkB,IAIb,KAAK7G,EAAgB8G,MAyCjB,IAxCA,IAAM3D,EAASnH,EAAM4K,YAAYzD,OAmC3B4D,EAhCgB,SAACzJ,GACnB,IAAIb,EAAO,SACG,GAAVa,IAEAb,GADa0G,EAAOzB,OAAS9D,EAAqBC,GACtCP,IAEhB,OAAOb,EA0BQuK,CAAc7D,EAAOjD,aAClC+G,EAxBe,WACjB,IAAM/G,EAAciD,EAAOjD,YACvBzD,EAAO,IACX,IAAoB,GAAhByD,EAAmB,CACnB,IAAM2D,EAAW8C,EAAMO,KAAKrD,SAE5BpH,GADa0G,EAAOzB,OAAS5D,EAAkBC,IAClCmC,EAAc2D,GAAY,IAE3C,OAAOpH,EAgBO0K,GACZC,EAdY,SAAC9J,EAAe6C,GAC9B,IAAI1D,EAAO,GAQX,OAPc,GAAVa,GACAiB,EAAmBnB,SAAQ,SAACiK,GACpBA,EAAO7I,KAAO2B,IACd1D,EAAO4K,EAAO5K,SAInBA,EAKQ6K,CAAUnE,EAAOjD,YAAaiD,EAAOhD,WAClDoH,EAAalJ,EAAkCmJ,SAAST,EAAaK,GACrEK,EAAa,GACVhC,EAAI,EAAGA,EAAItC,EAAOxB,QAAS8D,IAChCgC,EAAWvL,KAAK,wBAAWuJ,IAE/B,IAAMiC,EAAWf,EAAMgB,SAASD,SAC1BE,EAAcjB,EAAMgB,SAASC,YAC7BC,EAAWC,KAAKC,MAAMpB,EAAMgB,SAASE,SAAW,IAAO,IAAM,GAE7DG,EAAatB,EAAWuB,QAAQC,cAAc/E,EAAO8E,SAC3D,OACI,qCACI,qBAAK5L,UACD,WAC0B,GAAvB8G,EAAOjD,YAAoB,SAAW,KACtCqH,EAAa,YAAc,KAC3B3E,EAAMrC,SAASE,WAAaX,EAAWqI,OAAS,WAAa,IAJpE,SAKI,iCAAOpB,EAAYK,OAEvB,qBAAK/K,UAAWuG,EAAMrC,SAASE,WAAaX,EAAWqI,OAAS,SAAW,QAA3E,SACI,iCAAOlB,EAAWG,OAEtB,qBAAK/K,UAAU,UAAf,SACKoL,IAEL,sBAAKpL,UAAU,mBAAf,UACI,sBAAMA,UAAU,MAAhB,UAAoC,GAAbqL,EAAiBA,EAAW,KACnD,sBAAMrL,UAAU,OAAhB,UAAwC,GAAhBuL,EAAoBA,EAAc,QAE9D,qBAAKvL,UAAU,gBAAf,SACI,iCAAOwL,EAAP,SAEJ,qBACIxL,UACI,kBACe,GAAd2L,EAAkB,UAAY,IAHvC,SAMI,2CAAcA,UAK9B,KAAKhI,EAAgBqD,QACjB,IAAMF,EAASnH,EAAM4K,YAAYzD,OACjC,OACI,qCACI,qBAAK9G,UAAU,OAAf,SAAsB,+BAAO8G,EAAOa,UACpC,qBAAK3H,UAAU,cAI3B,KAAK2D,EAAgBoI,WACFpM,EAAM4K,YAAYzD,OACjC,OACI,+BCwFDkF,G,MAtOM,SAACrM,GAA8B,IAAD,EACPwK,qBAAWC,IAA3C7D,EADuC,EACvCA,MAAO0F,EADgC,EAChCA,SAAU5B,EADsB,EACtBA,WAEnB6B,EAAWvM,EAAMsB,MAAQsF,EAAMrC,SAASI,SAASgF,OAEjD6C,EAAMC,iBAAO,IAOnB,GANAzL,qBAAU,WACFuL,GACAD,EAASlI,EAAWgF,mBAAoB,CAAE7B,IAAKvH,EAAMsB,MAAO8G,OAAQoE,EAAIE,YAE7E,CAAC9F,EAAMrC,SAASI,YAEd4H,EACD,OAAQ,6BAGZ,IAAMzF,EAAO9G,EAAM4K,YAAY9D,KACzB9B,EAAW4B,EAAMhC,UAAUI,SAE3B2F,EAAQ/D,EAAMhC,UAAUE,UAAU9E,EAAMsB,OAYxCuD,EAAa+B,EAAMhC,UAAUC,WAC7B8H,EAAa9H,GAAc7E,EAAMsB,MACjCsL,EAAahG,EAAMhC,UAAUG,eAAiB/E,EAAMsB,MAkFpDuL,EAA2B,WACAjG,EAAMrC,SAASI,SAAS3E,EAAMsB,OAC/CwF,MAAQ9C,EAAgB+D,OAChCuE,EAASlI,EAAW6D,oBAAqB,CAAE3G,MAAOtB,EAAMsB,SAmB5DwL,EAA2B,6BA6B/B,OA5BI9M,EAAMsB,OAASsF,EAAMrC,SAASI,SAASgF,OAAS,IAChDmD,EACI,qBACIzM,UACI,YACC2E,GAAYjB,EAASkB,OAAS,GAAK,YAExC1E,QAAS,WACL+L,EAASlI,EAAW6D,oBAAqB,CAAE3G,MAAOtB,EAAMsB,QACxDoJ,EAAWqC,MAAMC,kBACjBV,EAASlI,EAAW6D,oBAAqB,CAAE3G,MAAOtB,EAAMsB,MAAQ,IAChEgL,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAcuJ,gBAC3DX,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACAjC,EAAMhC,UAAUS,mBADjB,IAEFC,YAAY,EACZG,UAAW,EACXC,QAAQ,EACRvB,UAAW5B,EAAmB,GAAGC,IACjCmD,QAAS,OAjBzB,SAqBI,wCAMR,sBAAKtF,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SA7Fa,WACrB,IAAI6M,EAA4B,GA8BhC,MA5BI,CAAClJ,EAAgB8G,MAAO9G,EAAgBqD,QAASrD,EAAgBoI,YAAYZ,SAAS1E,KAElF9C,EAAgB8G,OAAShE,GAEzBoG,EAAWhN,KACP,qBAA6BG,UAAU,WAAvC,SACI,+BAAOsK,EAAMgB,SAASwB,MADhBD,EAAWvD,SAK7BuD,EAAWhN,KAIP,qBAEIG,UACI,OACC2E,GAAYjB,EAASkB,OAAS,GAAK,WAExC1E,QAAS,WACLmK,EAAWqC,MAAMK,cAAcpN,EAAMsB,QAP7C,SAUI,yCATK4L,EAAWvD,UAapB,mCACHuD,IA8DQG,KAEL,qBACIhN,UAAW,CACP,eAzJK,WACrB,OAAQyG,GACJ,KAAK9C,EAAgB+D,MAAO,MAAO,eACnC,KAAK/D,EAAgB0D,KAAM,MAAO,cAClC,KAAK1D,EAAgB8G,MAAO,MAAO,eACnC,KAAK9G,EAAgBqD,QAAS,MAAO,iBACrC,KAAKrD,EAAgBoI,WAAY,MAAO,qBAoJ5BkB,GACAX,EAAa,SAAW,GACxBC,EAAa,WAAa,GAC1B,CACI5I,EAAgB0D,KAChB1D,EAAgBqD,QAChBrD,EAAgB8G,OAClBU,SAAS1E,GAAQ,aAAe,GAhJ7B,WACrB,IAAMnC,EAAWiC,EAAMrC,SAASI,SAC1B4I,EAAoB,CAAC5I,EAASgF,QAChC6D,GAAS,EACTC,GAAY,EAQhB,OAPA9I,EAASvD,SAAQ,SAACsM,EAAIjE,GACdiE,EAAG5G,MAAQ9C,EAAgBqD,SAASmG,IACxCD,EAAQ9D,GAAK+D,EACT3I,GAAc4E,IAAGgE,EAAWD,MAGfD,EAAQvN,EAAMsB,QAAUmM,GAAY3G,GAAQ9C,EAAgB+D,MAsIjE4F,GAAqB,UAAY,GA7H7C3I,GAAYjB,EAAS6J,QAAgB,GAErC9G,GAAQ9C,EAAgB8G,QAEwB,GADjC9K,EAAM4K,YAAYzD,OACDjD,YAExB0C,EAAMhC,UAAUM,aAAasG,SAASxL,EAAMsB,OACrC,gBAEJ,WAKJ,eAiHGhB,KAAK,KACPC,QAAS,WACDyE,GAAYjB,EAASkB,QACrB4H,IACAP,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,QAjEhD,WAC/B,IAAMF,EAAe0B,EAAMhC,UAAUM,aAChCA,EAAasG,SAASxL,EAAMsB,OAG7B4D,EAAa2I,MAAK,SAACvM,EAAOmI,GAClBnI,GAAStB,EAAMsB,OAAO4D,EAAakC,OAAOqC,EAAG,MAHrDvE,EAAahF,KAAKF,EAAMsB,OAM5BoJ,EAAWqC,MAAMe,gBAAgB5I,GA0Db6I,IAGRC,cAAe,SAACC,GACZ,GAAIjJ,GAAYjB,EAASkB,OAGrB,OAFA4H,IAC6BjG,EAAMrC,SAASI,SAAS3E,EAAMsB,OAC3CwF,MACZ,KAAK9C,EAAgB0D,KAEb4E,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAcwK,eAE/D,MACJ,KAAKlK,EAAgBqD,QACrB,KAAKrD,EAAgB8G,MAEblE,EAAMP,QAAQ8B,YAAYgG,MAAMC,KAAOH,EAAEI,QAAU,KACnDzH,EAAMP,QAAQ8B,YAAYgG,MAAMG,IAAML,EAAEM,QAAU,KAClDjC,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc8K,iBAM/EhC,IAAKA,EA3CT,SA6CI,cAAC,EAAD,CACIlL,MAAOtB,EAAMsB,MACbsJ,YAAa5K,EAAM4K,mBAK9BkC,OCpNE2B,EArBQ,SAACzO,GAAgC,IAAD,EACvBwK,qBAAWC,IAA/B7D,EAD2C,EAC3CA,MAD2C,EACpC0F,SAaf,OACI,qBAAKjM,UAZS,WACd,IAAMsE,EAAWiC,EAAMrC,SAASI,SAC1BE,EAAa+B,EAAMhC,UAAUC,WAC/B2I,GAAS,EACTC,GAAY,EAKhB,OAJA9I,EAASvD,SAAQ,SAACsM,EAAIjE,GACdiE,EAAG5G,MAAQ9C,EAAgBqD,SAASmG,IACpC3I,GAAc4E,IAAGgE,EAAWD,MAE7BC,GAAYzN,EAAMsB,MAGToN,GAAc,SAAW,GAAzC,SACI,+BAAO1O,EAAMgI,WCqHnB2G,G,MAAa,SAAC3O,GAEhB,OACI,sBAAKK,UAAWL,EAAMuB,QAAU,UAAY,GACxChB,QAAS,WACLP,EAAM4O,YAFd,UAKI,sBAAMvO,UAAWL,EAAM6O,SAAvB,SAAkC7O,EAAMgI,QACxC,sBAAM3H,UAAU,MAAhB,oBAA2BL,EAAM8O,QAAjC,gBAKGC,EArJS,WAAO,IAAD,EAEcvE,qBAAWC,IAA3C7D,EAFkB,EAElBA,MAAO0F,EAFW,EAEXA,SAAU5B,EAFC,EAEDA,WAGnBsE,EAAQ,kBAAM1C,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,QAGzEoH,EAAMC,iBAAO,IACnBzL,qBAAU,WAENsL,EAASlI,EAAW8D,mBAAoB,CAAEE,OAAQoE,EAAIE,YACvD,IAEH,IAAMuC,EAAmC,GACzC,GAAIrI,EAAMhC,UAAUO,eAAiBzB,EAAc8K,aAAc,CAC7D,IAAMU,EAAatI,EAAMrC,SAASI,SAASiC,EAAMhC,UAAUC,YAsC3D,OArCAoK,EAAc/O,KAAK,CACf2O,SAAU,QAAS7G,MAAO,eAAgB8G,QAAS,IAAKvN,SAAS,EACjEqN,SAAU,WACNlE,EAAWqC,MAAMC,kBACjBgC,OAGRC,EAAc/O,KAAK,CACf2O,SAAU,OAAQ7G,MAAO,eAAgB8G,QAAS,IAAKvN,SAAS,EAChEqN,SAAU,WACNlE,EAAWqC,MAAMC,kBACjBV,EAASlI,EAAW6D,oBAAqB,CAAE3G,MAAOsF,EAAMhC,UAAUC,WAAa,IAC/EyH,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAcuJ,gBAC3D,IAAM9F,EAAS+H,EAAW/H,OAC1BmF,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACAjC,EAAMhC,UAAUS,mBADjB,IAEFC,YAAY,EACZG,UAAW0B,EAAOjD,YAClBwB,OAAQyB,EAAOzB,OACfvB,UAAWgD,EAAOhD,UAClBwB,QAASwB,EAAOxB,eAKhCsJ,EAAc/O,KAAK,CACf2O,SAAU,QAAS7G,MAAO,iBAAkB8G,QAAS,IAAKvN,SAAS,EACnEqN,SAAU,WACNlE,EAAWqC,MAAMoC,oBACjBH,OAGRC,EAAc/O,KAAK,CACf2O,SAAU,QAAS7G,MAAO,oBAAqB8G,QAAS,IAAKvN,SAAS,EACtEqN,SAAU,eAENM,EAAWpI,MACf,KAAK9C,EAAgB8G,MACjB,IAAM3D,EAAS+H,EAAW/H,OAC1B8H,EAAc/O,KAAK,CACf2O,SAAU,QAAS7G,MAAO,cAAe8G,QAAS,IAAKvN,SAAgC,GAAvB4F,EAAOjD,YACvE0K,SAAU,WACNtC,EAASlI,EAAWkD,iBAAkB,CAAEC,IAAKX,EAAMhC,UAAUC,WAAYX,aAAc,IACvF8K,OAGRC,EAAc/O,KAAK,CACf2O,SAAU,OAAQ7G,MAAO,aAAc8G,QAAS,IAAKvN,SAAS,EAC9DqN,SAAU,WAGNtC,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAcuJ,gBAC3DX,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACAjC,EAAMhC,UAAUS,mBADjB,IAEFI,UAAW0B,EAAOjD,YAClBwB,OAAQyB,EAAOzB,OACfvB,UAAWgD,EAAOhD,UAClBwB,QAASwB,EAAOxB,eAKhCsJ,EAAc/O,KAAK,CACf2O,SAAU,OAAQ7G,MAAO,eAAgB8G,QAAS,IAAKvN,SAAgC,GAAvB4F,EAAOjD,YACvE0K,SAAU,WACNlE,EAAWqC,MAAMqC,uBAIzB,MACJ,KAAKpL,EAAgBqD,QACjB4H,EAAc/O,KAAK,CACf2O,SAAU,OAAQ7G,MAAO,eAAgB8G,QAAS,IAAKvN,SAAS,EAChEqN,SAAU,eAKtBK,EAAc/O,KAAK,CACf2O,SAAU,QAAS7G,MAAO,SAAU8G,QAAS,MAAOvN,SAAS,EAC7DqN,SAAU,eAGlB,IAAMS,EAA0B,GAYhC,OAXAJ,EAAc7N,SAAQ,SAAC6H,EAAMQ,GACzB4F,EAASnP,KAAK,cAAC,EAAD,CAEV2O,SAAU5F,EAAK4F,SACf7G,MAAOiB,EAAKjB,MACZ8G,QAAS7F,EAAK6F,QACdvN,QAAS0H,EAAK1H,QACdqN,SAAU3F,EAAK2F,UALVnF,OAUT,qBACI+C,IAAKA,EACL9K,GAAG,mBACHrB,UAAW,YAAcuG,EAAMhC,UAAUO,eAAiBzB,EAAc8K,aAAe,UAAY,IACnGjO,QAAS,aAJb,SAQK8O,KC+EEC,G,MAvMO,WAAO,IAAD,EAEgB9E,qBAAWC,IAA3C7D,EAFgB,EAEhBA,MAAO0F,EAFS,EAETA,SAAU5B,EAFD,EAECA,WAQnB8B,EAAMC,iBAAO,IACnBzL,qBAAU,WAENsL,EAASlI,EAAWiE,yBAA0B,CAAED,OAAQoE,EAAIE,YAC7D,IAEH,IAAM6C,EAA2B,GAC3BC,EAA4B,GAC5BC,EAA0B,GAC5BC,EAAyB,6BACvBC,EAAW/I,EAAMrC,SAASE,WAAaX,EAAWqI,OAElDyD,EAAchJ,EAAMhC,UAAUS,kBACpC,GAAIuB,EAAMhC,UAAUO,eAAiBzB,EAAcuJ,cAAe,CAC9D,IAAMpI,EAAa+B,EAAMhC,UAAUC,WACf+B,EAAMrC,SAASI,SAASE,GAAYsC,OAExDtF,EAAoBT,SAAQ,SAACyO,EAAMpG,GAC/B,IACM5B,GADU,EACY4B,GAAK,GAC3BqG,EAAOlO,EAAmB6H,GAC1BsG,EAAOhO,EAAiB8F,GACxBmI,EAAOlO,EAAgB+F,GACvBoI,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAAIzE,SAAS/B,GACnCkD,EAAaiD,EAAYnK,WAAagE,EACtCyG,EAAgB,SAACxK,GACnB,OACIkB,EAAMrC,SAASE,WAAaX,EAAWY,MACnC,qCACI,sBAAMrE,UAAU,SAAhB,SAA0BqF,EAASoK,EAAOD,IAC1C,yCACA,sBAAMxP,UAAU,QAAhB,SAAyBqF,EAASsK,EAAOD,IACzC,wCAGJ,mCACI,sBAAM1P,UAAU,SAAhB,SAA0BqF,EAASsK,EAAOD,OAI1DR,EAAUrP,KACN,8BACK+P,EAeG,qCACI,qBACI5P,UAAW,QAAUsM,IAAeiD,EAAYlK,OAAS,UAAY,IACrEnF,QAAS,WACL+L,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACA+G,GADD,IAEFrK,aAAc5B,EAAiB6B,KAAMC,UAAWgE,EAAG/D,QAAQ,OAN3E,SAWKwK,GAAc,KAEnB,qBACI7P,UAAW,QAAUsM,GAAciD,EAAYlK,OAAS,UAAY,IACpEnF,QAAS,WACL+L,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACA+G,GADD,IAEFrK,aAAc5B,EAAiB6B,KAAMC,UAAWgE,EAAG/D,QAAQ,OAN3E,SAWKwK,GAAc,QAvCvB,qBACI7P,UAAWsM,EAAa,SAAW,GACnCpM,QAAS,WACL+L,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACA+G,GADD,IAEFrK,aAAc5B,EAAiB6B,KAAMC,UAAWgE,EAAG/D,QAAQ,OAN3E,SAWKwK,GAAc,MAbjBzG,OAgDlBlH,EAAmBnB,SAAQ,SAACiK,EAAQ5B,GAEhC+F,EAAWtP,KACP,qBAEIG,UAAWgL,EAAO7I,KAAOoN,EAAYzL,UAAY,SAAW,GAC5D5D,QAAS,WACL+L,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACA+G,GADD,IAEFrK,aAAc5B,EAAiBwM,OAAQhM,UAAWkH,EAAO7I,SAPzE,SAYI,qCAAQ6I,EAAO5K,KAAf,QAXKgJ,OAiBjB,IAjG8D,eAiGrDA,GACLgG,EAASvP,KACL,qBAEIG,UAAWuP,EAAYjK,SAAW8D,EAAI,EAAI,SAAW,GACrDlJ,QAAS,WACL+L,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACA+G,GADD,IACcrK,aAAc5B,EAAiByM,QAASzK,QAAS8D,EAAI,QAL5EA,KAHRA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAgBTiG,EAAa,qCACT,qBACInP,QAAS,WACL+L,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,QAFnE,SAII,4CAEJ,qBACI7E,QAAS,WACLmK,EAAW2F,MAAMC,oBAFzB,SAII,8CAIZ,OACI,sBACI9D,IAAKA,EACL9K,GAAG,gBACHrB,UAAW,YAAcuG,EAAMhC,UAAUO,eAAiBzB,EAAcuJ,cAAgB,UAAY,IACpG1M,QAAS,aAJb,UAOI,cAAC,EAAD,CAAYoB,UAAU,gBAClBR,YAAa,CACT,CACIV,KAAM,QAASc,QAASoO,EAAUhP,KAC9B,8BAIR,CACIF,KAAM,WAAYc,SAAS,EAAOZ,KAC9B,qCACI,qBAAKN,UAAW,kBAAoBuP,EAAYrK,cAAgB5B,EAAiB6B,KAAO,UAAY,IAApG,SACK+J,IAEL,qBAAKlP,UAAW,mBAAqBuP,EAAYrK,cAAgB5B,EAAiBwM,OAAS,UAAY,IAAvG,SACKX,QAKjB,CACI/O,KAAM,WAAYc,SAAS,EAAOZ,KAC9B,+BAKZG,SAAU,IAEd,qBAAKT,UAAW,iBAAmBuP,EAAYrK,cAAgB5B,EAAiByM,QAAU,UAAY,IAAtG,SACKX,IAEL,qBAAKpP,UAAU,YAAf,SACKqP,SCxMV,SAASa,EAAgB/N,GAC5B,IAAI6I,EAAS,KAMb,OALA9I,EAAmBnB,SAAQ,SAAC6H,GACpBA,EAAKzG,KAAOA,IACZ6I,EAASpC,MAGVoC,E,YCwJImF,EAnJY,WAAO,IAAD,EAEDhG,qBAAWC,IAA/B7D,EAFqB,EAErBA,MACF/B,GAHuB,EAEdyH,SACI1F,EAAMhC,UAAUC,YACnC,IAAmB,GAAfA,EAAkB,OAAQ,6BAE9B,IAAMoE,EAAOrC,EAAMrC,SAASI,SAASE,GAC/B8F,EAAQ/D,EAAMhC,UAAUE,UAAUD,GAEpC4L,EAAqB,6BACzB,OAAQxH,EAAKnC,MACT,KAAK9C,EAAgB8G,MACjB,IAAM3D,EAAS8B,EAAK9B,OAChBuJ,EAAO,IACX,IAA2B,GAAvBvJ,EAAOjD,YAAmB,CAC1B,IAAM6G,EAAalJ,EAAoBsF,EAAOjD,aACxCyM,EAAY5O,EAAiBoF,EAAOjD,aAC1CwM,EAAI,UAAM3F,EAAN,aAAqB4F,EAArB,KAER,IAC8B,EAD1BvF,EAAa,IACjB,GAAwB,MAApBjE,EAAOhD,UACPiH,EAAU,qBAAOmF,EAAgBpJ,EAAOhD,kBAA9B,aAAO,EAAmC1D,KAA1C,KAGd,IAAMmQ,EAAiC,GACvCA,EAAgB1Q,KAAK,CAAE2Q,MAAO,QAASC,MAAO,GAAKnG,EAAMO,KAAKvD,MAAOpG,SAAS,IAC9EqP,EAAgB1Q,KAAK,CAAE2Q,MAAO,QAASC,MAAOnG,EAAMO,KAAKtD,MAAOrG,SAAS,IACzEqP,EAAgB1Q,KAAK,CAAE2Q,MAAO,MAAOC,MAAO,IAAKvP,SAAS,IAC1DqP,EAAgB1Q,KAAK,CAAE2Q,MAAO,QAASC,MAAO,QAASvP,SAAS,IAChEqP,EAAgB1Q,KAAK,CAAE2Q,MAAO,OAAQC,MAAOJ,EAAMnP,QAAiB,KAARmP,IAC5DE,EAAgB1Q,KAAK,CAAE2Q,MAAO,SAAUC,MAAO1F,EAAY7J,QAAuB,KAAd6J,IACpEwF,EAAgB1Q,KAAK,CAAE2Q,MAAO,UAAWC,MAAO3J,EAAOxB,QAAU,GAAIpE,SAAS,IAC9E,IAAMwP,EAA2B,GACjCH,EAAgBxP,SAAQ,SAACwF,EAAO6C,GAC5BsH,EAAU7Q,KACN,sBAEIG,UACI,UACCuG,EAAMrF,QAAU,WAAa,IAJtC,UAMI,qBAAKlB,UAAU,QAAf,SAAuB,iCAAOuG,EAAMiK,MAAb,SACvB,qBAAKxQ,UAAU,QAAf,SAAuB,+BAAOuG,EAAMkK,YAN/BrH,OAWjB,IAAMuH,EAA4B,GAClC,GAAwB,MAApB7J,EAAOhD,UAIP,IAHA,IAAMkH,EAASkF,EAAgBpJ,EAAOhD,WAChC8M,EAAI,OAAG5F,QAAH,IAAGA,OAAH,EAAGA,EAAQ6F,UACfC,EAAG,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMtH,OACTF,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAIA,EAAI0H,EAAK,CACT,IAAMC,EAAQ,OAAG/F,QAAH,IAAGA,OAAH,EAAGA,EAAQ6F,UAAUzH,GAC7B4H,EAAM,OAAGhG,QAAH,IAAGA,OAAH,EAAGA,EAAQgG,OAAO5H,GACxB6H,EAAQvP,GAAkBoF,EAAOjD,YAAckN,GAAY,IACjEJ,EAAW9Q,KACP,sBAAaG,UAAU,SAAvB,UACI,qBAAKA,UAAU,WAAf,SAA0B,+BAAO+Q,MACjC,qBAAK/Q,UAAU,SAAf,SAAwB,+BAAOgR,MAC/B,qBAAKhR,UAAU,QAAf,SAAuB,+BAAOiR,QAHxB7H,SAOduH,EAAW9Q,KACP,sBAAaG,UAAU,iBAAvB,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,YAHToJ,IAU1BgH,EACI,qBACIpQ,UACI,QAFR,SAKI,gCACI,qBAAKA,UAAU,QAAf,SACI,mDAEJ,qBAAKA,UAAU,gBAAf,SACK0Q,IAEL,qBAAK1Q,UAAU,QAAf,SACI,kDAEJ,qBAAKA,UAAU,gBAAf,SACK2Q,SAMjB,MACJ,KAAKhN,EAAgBqD,QAoBjBoJ,EACI,qBACIpQ,UACI,YAiBpB,OACI,qBAAKqB,GAAG,iBAAR,SACK+O,KCoCEc,G,MAhLU,SAACvR,GAEtB,IAAM0K,EAAa1K,EAAM0K,WACnB8G,EAAexR,EAAMwR,aACrBzL,EAAYyL,EAAazL,UACzB0L,EAAgBD,EAAatL,OAAOH,GACpCC,EAAmBwL,EAAaxL,iBAChC0L,EAAaD,EAAc5H,KAAK7D,GAChC2L,EAAYF,EAAcG,KAAK5L,GAE/B6L,EAAoB,SAACC,GACvB,IAAMtI,EAASgI,EAAatL,OAC5BsD,EAAOzD,GAAW8D,KAAK7D,GAAoB8L,EAC3CpH,EAAWqH,mBAAX,2BACOP,GADP,IAEItL,OAAQsD,MAGVwI,EAAgB,SAACC,GACnBP,EAAWP,IAAMc,EACjBP,EAAWzB,QAAS,EACpByB,EAAWQ,QAAS,EACpBL,EAAkBH,IAEhBS,EAAsB,SAACC,GACzB,IAAM5I,EAASgI,EAAatL,OACtBmM,EAAS7I,EAAOzD,GAAW6L,KAAK5L,GACtCwD,EAAOzD,GAAW6L,KAAK5L,GAAoBqM,EAASD,EACpD1H,EAAWqH,mBAAX,2BACOP,GADP,IAEItL,OAAQsD,MAIV8I,EAASZ,EAAWP,IACpBoB,EAAwB,CAC1B,CACIvK,MAAO,KACP7H,SAAUmS,GAAUzO,EAAiB2O,MACrCpS,WAAW,EACXqS,SAAU,WAAQT,EAAcnO,EAAiB2O,SAErD,CACIxK,MAAO,IACP7H,SAAUmS,GAAUzO,EAAiB6O,KACrCtS,WAAW,EACXqS,SAAU,WAAQT,EAAcnO,EAAiB6O,QAErD,CACI1K,MAAO,IACP7H,SAAUmS,GAAUzO,EAAiB8O,KACrCvS,WAAW,EACXqS,SAAU,WAAQT,EAAcnO,EAAiB8O,QAErD,CACI3K,MAAO,IACP7H,SAAUmS,GAAUzO,EAAiB+O,KACrCxS,WAAW,EACXqS,SAAU,WAAQT,EAAcnO,EAAiB+O,QAErD,CACI5K,MAAO,IACP7H,SAAUmS,GAAUzO,EAAiBgP,KACrCzS,WAAW,EACXqS,SAAU,WAAQT,EAAcnO,EAAiBgP,QAErD,CACI7K,MAAO,IACP7H,SAAUuR,EAAWzB,OACrB7P,WAAYsK,EAAWuB,QAAQ6G,eAC/BL,SAAU,WACNf,EAAWzB,QAAUyB,EAAWzB,OAChCyB,EAAWQ,QAAS,EACpBL,EAAkBH,KAG1B,CACI1J,MAAO,MACP7H,SAAUuR,EAAWQ,OACrB9R,WAAYsK,EAAWuB,QAAQ8G,eAC/BN,SAAU,WACNf,EAAWQ,QAAUR,EAAWQ,OAChCR,EAAWzB,QAAS,EACpB4B,EAAkBH,KAG1B,CACI1J,MAAO,MACP7H,UAAU,EACVC,WAAW,EACXqS,SAAU,WACN/H,EAAWuB,QAAQ+G,WAG3B,CACIhL,MAAO,MACP7H,UAAU,EACVC,UAAWqR,EAAc5H,KAAKF,QAAU,EACxC8I,SAAU,WACN/H,EAAWuB,QAAQgH,WAG3B,CACIjL,MAAO,OACP7H,UAAU,EACVC,UAAWuR,GAAa,EACxBc,SAAU,WACNN,GAAqB,KAG7B,CACInK,MAAO,OACP7H,UAAU,EACVC,UAAWuR,GAAa,GACxBc,SAAU,WACNN,EAAoB,KAG5B,CACInK,MAAO,YACP7H,UAAU,EACVC,WAAW,EACXqS,SAAU,WACN,IAAMS,EAAmC,CACrCrN,YAAa,GACbC,YAAY,EACZC,UAAW,EACXC,iBAAkB,EAClBC,sBAAuB,EACvBC,OAAQ,CACJ,CACI2D,KAAM,CAAC,CACHsH,IAAKtN,EAAiB8O,KACtBT,QAAQ,EACRjC,QAAQ,IAEZkD,KAAMvP,EAAawP,KACnBrJ,MAAO,GACP6H,KAAM,CAAC,IAEX,CACI/H,KAAM,CAAC,CACHsH,IAAKtN,EAAiB8O,KACtBT,QAAQ,EACRjC,QAAQ,IAEZkD,KAAMvP,EAAayP,MACnBtJ,MAAO,GACP6H,KAAM,CAAC,KAGfzL,WAAW,GAEfuE,EAAWqH,mBAAmBmB,MAIpCI,EAA4B,GAgBlC,OAfAf,EAAQnR,SAAQ,SAACmS,EAAQ9J,GACrB6J,EAAWpT,KACP,wBAEIG,WACKkT,EAAOpT,SAAW,SAAW,KAC7BoT,EAAOnT,UAAY,WAAa,IAErCG,QAAS,kBAAMgT,EAAOd,YAN1B,SAQI,+BAAOc,EAAOvL,SAPTyB,OAYT,mCAAG6J,MCjFTE,EAAiB,SAACtN,EAAwBuN,EAAuBC,EAAmBvJ,EAAkBE,GACxG,IAAMsJ,EAAMzN,EAAwB,GAAjBuN,EAAqB,EAAI,GACtCG,EAAO1N,EAAwB,GAAjBuN,EAAqB,EAAI,GACzCpT,EAAY,GAEhB,GAAIsT,EAAI5J,MAAM2J,GAAWvJ,GAAUE,GAAW,CAC1ChK,EAAY,SACZ,IAAMwT,EAAeC,EAAaH,EAAI9J,KAAMM,EAAUE,GACtDuJ,EAAK/J,KAAKzI,SAAQ,SAAC2S,EAAaC,GAC5B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAY7B,OAAS,EAAI,GAAI+B,IAAK,CACnD,IAAMC,EAAYJ,EAAaF,EAAK/J,KAAMmK,EAAGC,GACzCL,EAAK7J,MAAM2J,GAAWM,GAAGC,KAExBE,EAAeN,EAAcK,IAAcC,EAAeD,EAAWL,MAEtExT,EAAY,eAK5B,OAAOA,GASL8T,EAAiB,SAACC,EAAmBC,GACvC,OAAQD,EAAOE,KAAOF,EAAOG,MAAQF,EAAOC,MAAQF,EAAOE,KAAOF,EAAOG,OAASF,EAAOC,KAAOD,EAAOE,OAC/FH,EAAOE,KAAOD,EAAOC,KAAOD,EAAOE,OAASH,EAAOE,MAAQD,EAAOC,MAUxER,EAAe,SAACjK,EAAoBM,EAAkBE,GAExD,IADA,IAAIiK,EAAO,EACF7K,EAAI,EAAGA,EAAIU,EAAUV,IAAK,CAC/B,IAAMqI,EAAUjI,EAAKJ,GACrB6K,GAAQE,EAAW1C,GAEvB,IAAMQ,EAASzI,EAAKM,GAChBoK,EAAQC,EAAWlC,GAMvB,OAJIA,EAAOJ,SACPoC,GAAQC,EAAQ,EAAIlK,EACpBkK,GAAgB,GAEb,CAAED,OAAMC,UAgBbC,EAAa,SAAC1C,GAChB,IAAI2C,EAAO,EACX,OAAQ3C,EAAQX,KACZ,KAAKtN,EAAiBgP,KAAM4B,EAAO,GAAI,MACvC,KAAK5Q,EAAiB+O,KAAM6B,EAAO,EAAG,MACtC,KAAK5Q,EAAiB8O,KAAM8B,EAAO,EAAG,MACtC,KAAK5Q,EAAiB6O,KAAM+B,EAAO,EAAG,MACtC,KAAK5Q,EAAiB2O,MAAOiC,EAAO,EAKxC,OAHI3C,EAAQ7B,SACRwE,GAAQ,KAELA,GAGIC,EArLK,SAAC1U,GAWjB,IAX8C,IAEtC2U,EAAenK,qBAAWoK,IAA1BD,WAEFnD,EAAexR,EAAMwR,aACrBqD,EAAc7U,EAAM6U,YACpBnK,EAAa1K,EAAM0K,WAEnBoK,EAAiC,GAEnCC,GAAW,EAV8B,WAWpCC,GAKL,IAJA,IAAMC,EAA0B,GAC1BC,EAAQ1D,EAAatL,OAAO8O,GAC5BG,EAAa3D,EAAazL,WAAaiP,EAdJ,WAgBhCvL,GACL,IAAM2L,EAA0B,GAChCF,EAAMrL,KAAKzI,SAAQ,SAAC0Q,EAASkC,GACzB,IAAIqB,EAAU,GAEd,OAAQvD,EAAQX,KACZ,KAAKtN,EAAiB8O,KAAM0C,GAAW,OAAgB,IAAK,MAC5D,KAAKxR,EAAiB6O,KAAM2C,GAAW,OAAgB,IAAK,MAC5D,KAAKxR,EAAiB2O,MAAO6C,GAAW,QAAiB,KAAM,MAC/D,KAAKxR,EAAiB+O,KAAMyC,GAAW,OAAgB,IAAK,MAC5D,KAAKxR,EAAiBgP,KAAMwC,GAAW,OAAgB,IAEvDvD,EAAQ7B,SACRoF,GAAW,SAKf,IAFA,IAAMC,EAAyB,GACzBC,EAASzD,EAAQI,OAAS,EAAI,EAfL,WAgBtB+B,GACL,IAAMuB,EAAchC,EAAehC,EAAatL,OAAQ8O,EAAGvL,EAAGuK,EAAGC,GAC/C,WAAfuB,IACCT,GAAW,GAEfO,EAAQpV,KACJ,qBAEIG,UAAW,CACPmV,EACC1D,EAAQI,OAAS,OAAS,IAC7B5R,KAAK,KACPC,QAAS,WACLmK,EAAWuB,QAAQwJ,aAAahM,EAAGuK,EAAGC,KANrCA,KAPRA,EAAI,EAAGA,EAAIsB,EAAQtB,IAAM,EAAzBA,GAkBTmB,EAASlV,KACL,qBAEIG,UAAWgV,EAFf,SAIKC,GAHItB,OAOjBiB,EAAS/U,KACL,qBAAaG,UAAU,OAAvB,SACK+U,GADK3L,KA9CTA,EAAIoL,EAAYlL,OAAS,EAAGF,GAAK,EAAGA,IAAM,EAA1CA,GAmDTqL,EAAgB5U,KACZ,qBAEIG,UACI8U,EAAa,MAAQ,OAH7B,SAMKF,GALID,KA1DRA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAqET,OAFAL,GAAYI,GAGR,qBAAK1U,UAAU,SAAf,SACKyU,KC3CEY,EA5CM,SAAC1V,GAElB,IAAMyR,EAAgBzR,EAAMkV,MAGtBS,EAA8B,GAChCC,EAAgB,EACpBnE,EAAc5H,KAAKzI,SAAQ,SAAC0Q,EAASrI,GACjC,IAAIoM,EAAM,EACV,OAAQ/D,EAAQX,KACZ,KAAKtN,EAAiBgP,KAAMgD,EAAM,GAAI,MACtC,KAAKhS,EAAiB+O,KAAMiD,EAAM,EAAG,MACrC,KAAKhS,EAAiB8O,KAAMkD,EAAM,EAAG,MACrC,KAAKhS,EAAiB6O,KAAMmD,EAAM,EAAG,MACrC,KAAKhS,EAAiB2O,MAAOqD,EAAM,EAEnC/D,EAAQ7B,SACR4F,GAAO,KAEXD,GAAiBC,KAErB,IArB+C,eAqBtCpM,GACL,IAWMqM,EAASrM,GAAKmM,EAAgB,EACpCD,EAAazV,KAAK,qBAAaG,WAXvBoJ,EAAI,GAAK,EACLA,EAAI,GAAK,EACF,OAEA,OAGJ,UAIuCqM,EAAS,QAAU,KAA7CrM,KAbvBA,EAAI,EAAGA,EAAImM,EAAenM,IAAM,EAAhCA,GAgBT,OACI,qBAAKpJ,UAAU,UAAf,SACKsV,KC6GEI,GAvIM,SAAC/V,GAElB,IAAMwR,EAAexR,EAAMwR,aACrBzL,EAAYyL,EAAazL,UACzB0L,EAAgBD,EAAatL,OAAOH,GACpC2E,EAAa1K,EAAM0K,WACnBmK,EAAc7U,EAAM6U,YACpBmB,EAAgBhW,EAAMgW,cAGtBC,EAAgC,GACtCpB,EAAYzT,SAAQ,SAAC8U,EAASzM,GAC1BwM,EAAe/V,KACX,qBAEIG,UAAU,UACVE,QAAS,kBAAMyV,EAAcE,EAAQC,gBAHzC,SAKI,+BAAOD,EAAQC,iBAJV1M,OAUjB,IAAMI,EAAsB,GACtBuM,EAA4B,GA2ClC,OA1CA3E,EAAc5H,KAAKzI,SAAQ,SAAC0Q,EAASrI,GACjC,IACI4L,EADe7D,EAAaxL,kBAAoByD,EACzB,UAAY,GACnCzB,EAAQ,GACZ,OAAQ8J,EAAQX,KACZ,KAAKtN,EAAiB8O,KAAM0C,GAAW,OAAQrN,EAAQ,IAAK,MAC5D,KAAKnE,EAAiB6O,KAAM2C,GAAW,OAAQrN,EAAQ,IAAK,MAC5D,KAAKnE,EAAiB2O,MAAO6C,GAAW,QAASrN,EAAQ,KAAM,MAC/D,KAAKnE,EAAiB+O,KAAMyC,GAAW,OAAQrN,EAAQ,IAAK,MAC5D,KAAKnE,EAAiBgP,KAAMwC,GAAW,OAAQrN,EAAQ,IAEvD8J,EAAQ7B,SACRjI,GAAS,KACTqN,GAAW,SAEXvD,EAAQI,SACRlK,GAAS,MAEb6B,EAAK3J,KACD,qBAEIG,UAAWgV,EACX9U,QAAS,WACLmK,EAAWqH,mBAAX,2BACOP,GADP,IAEIxL,iBAAkByD,MAN9B,SASI,+BAAOzB,KARFyB,IAWb,IAAM4M,EAAS5E,EAAcG,KAAKnI,GAClC2M,EAAWlW,KACP,qBAEIG,UAAWgV,EAFf,SAII,qBAAKlH,MAAO,CAAEmI,OAAkB,GAATD,EAAe,QAHjC5M,OASb,sBAAKpJ,UAAU,gBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,CACIqK,WAAYA,EACZ8G,aAAcA,MAGtB,sBAAKnR,UAAU,QAAf,UACI,sBAAKA,UAAU,QAAf,UACI,wBACIA,UAC8B,GAA1BmR,EAAazL,UAAiB,SAAW,GAE7CxF,QAAS,WACLmK,EAAWuB,QAAQsK,cAAc,IALzC,SAQI,2CAEJ,wBACIlW,UAC8B,GAA1BmR,EAAazL,UAAiB,SAAW,GAE7CxF,QAAS,WACLmK,EAAWuB,QAAQsK,cAAc,IALzC,SAQI,6CAGR,qBAAKlW,UAAU,SAAf,SACK4V,IAEL,qBAAK5V,UAAU,QAAf,SACI,wBACIA,UACImR,EAAa1L,WAAa,SAAW,GAEzCvF,QAAS,WACLmK,EAAWuB,QAAQuK,aAAahF,EAAa1L,aALrD,SAQI,gDAIZ,sBAAKzF,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SACKwJ,IAEL,cAAC,EAAD,CACIqL,MAAOzD,IAEX,cAAC,EAAD,CACID,aAAcA,EACdqD,YAAaA,EACbnK,WAAYA,IAEhB,qBAAKrK,UAAU,SAAf,SACK+V,WCjCNK,GAtGa,SAACzW,GAKzB,IAHA,IAAM0W,EAA6B,GAFmB,WAK7CjN,GAEL,IAAMa,EAAQb,EAAIzJ,EAAMqL,OAAO6F,UAAUvH,OACnCgN,EAAsB,GAC5B,GAAIrM,EAAO,CACP,IAAMsM,EAAY5W,EAAM6W,QAAQpN,GAC1B2H,EAAWpR,EAAMqL,OAAO6F,UAAUzH,GAClCqN,EAAW9W,EAAMqL,OAAOgG,OAAO5H,GAErCkN,EAAKzW,KACD,qBAAaG,UAAU,QAAvB,SACI,iCAAOyW,EAAP,IAAkB1F,EAAlB,MAA+BwF,MADzB,IAKd,IAXO,eAWE5C,GAEL,IAAM+C,EAAa/W,EAAMkE,YAAclE,EAAMqL,OAAO6F,UAAUzH,GAAS,GAAJuK,EAC7DgD,EAASlL,KAAKmL,MAAMF,EAAa,IACjCZ,EAAgBnW,EAAM6W,QAAQpN,GAAKuN,EACnCE,EAASH,EAAa,GAAKA,GAAc,GAC3CpK,GAAa,EACjB3M,EAAMwR,aAAa3L,YAAYzE,SAAQ,SAAC8U,GAChCA,EAAQc,QAAUhD,GAAKkC,EAAQiB,aAAe1N,IAC9CkD,GAAa,MAIrB,IAAMyK,EAAUpX,EAAMwR,aAAa3L,YAAY8D,QAAU,KAAOgD,EAChEgK,EAAKzW,KACD,qBAEIG,UACI,OACC6W,GAAUE,EAAU,WAAa,KACjCzK,EAAa,UAAY,IAE9BpM,QAAS,WACL,IAAM0Q,EAAOjR,EAAMwR,aAAa3L,YAChC,GAAK8G,EAEE,CACH,IAAIpF,GAAO,EACX0J,EAAK7P,SAAQ,SAAC8U,EAAS5U,GACf4U,EAAQc,QAAUhD,GAAKkC,EAAQiB,aAAe1N,IAC9ClC,EAAMjG,MAGd2P,EAAK7J,OAAOG,EAAK,QARjB0J,EAAK/Q,KAAK,CAAE8W,OAAQhD,EAAGmD,YAAa1N,IAUxCwH,EAAKoG,MAAK,SAACC,EAAGC,GAGV,OAFwB,EAAXD,EAAEN,OAAaM,EAAEH,aACN,EAAXI,EAAEP,OAAaO,EAAEJ,gBAGlCnX,EAAMwR,aAAa3L,YAAcoL,EACjCjR,EAAMwX,eAAexX,EAAMwR,aAAa3L,cAE5CmI,cAAe,WACXhO,EAAMgW,cAAcG,IA7B5B,SAgCI,+BAAQe,EAAyB,IAAhBf,KA/BZnC,EAAI,KAhBZA,EAAI,EAAGA,EAhBN,EAgBqBA,IAAM,EAA5BA,OAmDN,CAEH2C,EAAKzW,KACD,qBAAaG,UAAU,SAAb,IAEd,IAAK,IAAI2T,EAAI,EAAGA,EAAI,EAAGA,IACnB2C,EAAKzW,KACD,qBAAiBG,UAAU,OAAjB2T,EAAI,IAI1B0C,EAAYxW,KACR,qBAEIG,UACI,UACEiK,EAAqB,GAAb,YAJlB,SAOKqM,GANIlN,KA/ERA,EAAI,EAAGA,EAFO,EAEaA,IAAM,EAAjCA,GA0FT,OACI,qBAAKpJ,UAAU,eAAf,SACKqW,KC3FA9B,GAAiB6C,wBAAc,IAgItCC,GAAiB,SAAC7R,EAA6B3B,EAAqBmH,EAAsBwL,GAK5F,IAHA,IAAMhC,EAA6B,GAF8F,WAKxHpL,GAEL,IAP6H,eAOpHuK,GAEL,IAAM+C,EAAa7S,EAAcmH,EAAO6F,UAAUzH,GAAS,GAAJuK,EACnDrH,GAAa,EACjB9G,EAAYzE,SAAQ,SAAC8U,GACbA,EAAQc,QAAUhD,GAAKkC,EAAQiB,aAAe1N,IAC9CkD,GAAa,MAGrB,IAAMqK,EAASlL,KAAKmL,MAAMF,EAAa,IACjCZ,EAAgBU,EAAQpN,GAAKuN,EAC/BrK,GACAkI,EAAY3U,KAAK,CAAE6W,aAAYZ,mBAZ9BnC,EAAI,EAAGA,EAHF,EAGiBA,IAAM,EAA5BA,IAFJvK,EAAI,EAAGA,EAAI4B,EAAO6F,UAAUvH,OAAQF,IAAM,EAA1CA,GAsBT,OAHAoL,EAAYwC,MAAK,SAACC,EAAGC,GACjB,OAAOA,EAAER,WAAaO,EAAEP,cAErBlC,GAGI8C,GA5JO,WAAO,IAAD,EAEgBnN,qBAAWC,IAA3C7D,EAFgB,EAEhBA,MAAO0F,EAFS,EAETA,SAAU5B,EAFD,EAECA,WAFD,EAIQ7J,oBAAS,GAJjB,mBAIjBsF,EAJiB,KAINwO,EAJM,KAQlBnI,EAAMC,iBAAO,IAanB,GAZAzL,qBAAU,WAENsL,EAASlI,EAAWqE,2BAA4B,CAAEL,OAAQoE,EAAIE,YAC/D,IAEH1L,qBAAU,WACN0J,EAAWuB,QAAQ0I,WAAWxO,KAC/B,CAACA,IAKAS,EAAMhC,UAAUO,eAAiBzB,EAAckU,gBAC/C,OAAQ,6BAGZ,IAAMpG,EAAe5K,EAAMhC,UAAUgB,oBAC/BG,EAAYyL,EAAazL,UAGzBoB,GAFgBqK,EAAatL,OAAOH,GACjByL,EAAaxL,iBACvBY,EAAMrC,SAASI,SAASiC,EAAMhC,UAAUC,YAAYsC,QAE7DkE,EAASkF,EAAgBpJ,EAAOhD,WAEhC8G,EADOlJ,EAAiBoF,EAAOjD,aACZmH,EAAO5K,KAC1BoW,EAAoB,GAC1BxL,EAAO6F,UAAU9P,SAAQ,SAAC0P,GACtB+F,EAAQ3W,KAAK6B,GAAkBoF,EAAOjD,YAAc4M,GAAS,QAKjE,IAAM+D,EAAc6C,GAAelG,EAAa3L,YAAasB,EAAOjD,YAAamH,EAAQwL,GAEnFb,EAAgB,SAACG,GACnBvP,EAAMN,QAAQuR,cAAc1B,EAAe,KAAM,KACjD2B,YAAW,WACPlR,EAAMN,QAAQyR,eAAe5B,KAC9B,MAGHzG,EAAyB,WA2B7B,OA1BAA,EAAa,qCACT,qBACInP,QAAS,WACL+L,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,QAFnE,SAII,4CAEJ,qBACI/E,UAAW,CACPmR,EAAarL,UAAY,GAAK,WAChC7F,KAAK,KACPC,QAAS,WACLmK,EAAWuB,QAAQ+L,MAAK,IALhC,SAOI,0CAEJ,qBACI3X,UAAW,CACPmR,EAAarL,UAAY,GAAK,WAChC7F,KAAK,KACPC,QAAS,WACLmK,EAAWuB,QAAQgM,uBAL3B,SAOI,+CAIJ,cAACrD,GAAesD,SAAhB,CAAyBpH,MAAO,CAC5B3K,UAAWA,EACXwO,WAAY,SAACxO,GAAD,OAAewO,EAAWxO,KAF1C,SAII,sBACIqG,IAAKA,EACL9K,GAAG,kBACHrB,UAAW,YAAcuG,EAAMhC,UAAUO,eAAiBzB,EAAckU,gBAAkB,UAAY,IACtGrX,QAAS,aAJb,UAOI,sBAAKF,UAAU,YAAf,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SAAuB,4CACvB,qBAAKA,UAAU,QAAf,SAAuB,+BAAO4K,SAElC,sBAAK5K,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SAAuB,6CACvB,qBAAKA,UAAU,QAAf,SAAuB,+BAAOwW,EAAQvW,KAAK,aAE/C,sBAAKD,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SAAuB,8CACvB,qBAAKA,UAAU,QAAf,SAAuB,+BAAO8G,EAAOxB,kBAG7C,cAAC,GAAD,CACI6L,aAAcA,EACdqF,QAASA,EACTxL,OAAQA,EACRnH,YAAaiD,EAAOjD,YACpB8R,cAAeA,EACfwB,eAAgB,SAAC3R,GAAD,OAAiC6E,EAAW8M,eAAe3R,MAE/E,cAAC,GAAD,CACIgP,YAAaA,EACbrD,aAAcA,EACd9G,WAAYA,EACZsL,cAAeA,IAGnB,qBAAK3V,UAAU,YAAf,SACKqP,U,kBCjBNyI,I,MAlHI,WAAO,IAAD,EAEmB3N,qBAAWC,IAA3C7D,EAFa,EAEbA,MAAO0F,EAFM,EAENA,SAAU5B,EAFJ,EAEIA,WAFJ,EAIK7J,mBAAS,IAJd,mBAId8G,EAJc,KAIPyQ,EAJO,OAKKvX,mBAAS,OALd,mBAKd+G,EALc,KAKPyQ,EALO,OAMMxX,mBAAS,GANf,mBAMdgH,EANc,KAMJyQ,EANI,OAOKzX,mBAAS,SAPd,mBAOdiH,EAPc,KAOPyQ,EAPO,KASf/L,EAAMC,iBAAO,IACnBzL,qBAAU,WAENsL,EAASlI,EAAWiE,yBAA0B,CAAED,OAAQoE,EAAIE,YAC7D,IAEH,IAAIgD,EAAyB,WAC7BA,EAAa,qCACT,qBACInP,QAAS,WACL+L,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,QAFnE,SAII,4CAEJ,qBACI7E,QAAS,WACLmK,EAAWQ,KAAKsN,aAAa7Q,EAAOC,EAAOC,EAAUC,IAF7D,SAII,8CAMR,IAAuBE,EAkBjByQ,EAAkB,SAACzQ,EAAe8I,EAAe2B,EACnDxB,GACA,IAAMyH,EAA4B,GAMlC,OALAzH,EAAK7P,SAAQ,SAAC6H,GACVyP,EAAWxY,KACP,wBAAgC4Q,MAAO7H,EAAK6H,MAA5C,SAAoD7H,EAAK0P,SAA5CD,EAAW/O,YAI5B,sBAAKtJ,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SACI,+BAAO2H,MAEX,qBAAK3H,UAAU,QAAf,SACI,wBACIyQ,MAAOA,EACP8H,SAAU,SAAC3K,GACPwE,EAASxE,EAAE4K,OAAO/H,QAH1B,SAMK4H,UAMf/I,EAAW/I,EAAMrC,SAASE,WAAaX,EAAWqI,OACxD,OACI,sBACIzK,GAAG,cACHrB,UAAW,YAAcuG,EAAMhC,UAAUO,eAAiBzB,EAAcwK,aAAe,UAAY,IACnG3N,QAAS,aAHb,UAMI,sBAAKF,UAAU,QAAf,WApDe2H,EAqDI,QAnDnB,sBAAK3H,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SACI,+BAAO2H,MAEX,sBAAK3H,UAAU,QAAf,UACI,+BAAOsH,IACP,uBACIiR,SAAU,SAAC3K,GACPmK,EAASU,OAAO7K,EAAE4K,OAAO/H,SAE7BhK,KAAK,QAAQrG,KAAK,QAAQsY,IAAI,KAAKC,IAAI,MAAMlI,MAAOnJ,WA0C3D8Q,EAAgB,OAAQ7Q,GAAO,SAACkJ,GAAoBuH,EAASvH,KAC1D3O,EAAW8W,KAAI,SAAAC,GAAU,MAAO,CAAEpI,MAAOoI,EAAMP,QAASO,OAE3DvJ,EAAW,6BACR8I,EAAgB,MAAOU,OAAOtR,IAAW,SAACiJ,GAAoBwH,EAAOQ,OAAOhI,MACvEhJ,GAAS5F,EAAW,GAEjBF,EAAuBiX,KAAI,SAACC,EAAMzP,GAAQ,MAAO,CAAEqH,MAAOrH,EAAE2P,WAAYT,QAASO,MAGjFjX,EAAuBgX,KAAI,SAACC,EAAMzP,GAAQ,MAAO,CAAEqH,MAAOrH,EAAE2P,WAAYT,QAASO,OAI5FvJ,EAAW,6BACR8I,EAAgB,QAAS3Q,GAAO,SAACgJ,GAAoByH,EAASzH,KAC1D5O,EAAW+W,KAAI,SAAAC,GAAU,MAAO,CAAEpI,MAAOoI,EAAMP,QAASO,UAIpE,qBAAK7Y,UAAU,YAAf,SACKqP,SCkCX2J,ID1BeC,KAAOC,KAAV,+OC0BK,WAAO,IAAD,EACG/O,qBAAWC,IAA/B7D,EADiB,EACjBA,MAEF5B,GAHmB,EACVsH,SAEE1F,EAAMhC,UAAUI,UAKjC,OACI,sBAAK3E,UAAU,OAAf,UACI,qBAAKA,UAAU,QAAf,SAAuB,2CACvB,sBAAKA,UAAU,SAAf,UACI,wBACIA,UAAW2E,GAAYjB,EAASkB,OAAS,SAAW,GADxD,SAII,4CAEJ,wBACI5E,UAAW2E,GAAYjB,EAAS6J,QAAU,SAAW,GADzD,SAII,2CAEJ,wBACIvN,UAAW2E,GAAYjB,EAASyV,QAAU,SAAW,GADzD,SAII,qDAOLC,GAxKU,WAAO,IAAD,EACajP,qBAAWC,IAA3C7D,EADmB,EACnBA,MAAO0F,EADY,EACZA,SAAU5B,EADE,EACFA,WADE,EAIW7J,mBAAS,IAJpB,mBAIpB6Y,EAJoB,KAIPC,EAJO,OAMW9Y,mBAAS,IANpB,mBAMpB+Y,EANoB,KAMPC,EANO,KAQ3B7Y,qBAAU,WAEN,IAAM2D,EAAWiC,EAAMrC,SAASI,SAE5BrD,EAAQ,EACNoY,EAA6B,GAC7BE,EAA6B,GAI7B9U,EAAY8B,EAAMhC,UAAUE,UAE5B6F,EAAQ,GAEVwC,EAAK,EACL2M,EAAY,EACZC,EAAY,EACZC,GAAW,EACfrV,EAASvD,SAAQ,SAAC6H,EAAMQ,GAEpB,GAAIR,EAAKnC,MAAQ9C,EAAgB0D,KAAM,CACnC,IAAMwD,EAAOjC,EAAK9B,OAClBwD,EAAMO,KAAN,eAAkBA,GAGtB,IAAM+O,EAAMnO,KAAKmL,MAAM6C,EAAY,GAAK,EAClCnO,EAAW,GAYjB,GAXAA,EAASwB,GAAKA,EACdxB,EAASD,SAAWsO,GAAWC,EAAMA,GAAO,EAC5CtO,EAASC,YAAckO,EAAY,EAAI,EAAIA,EAAY,GAAK,EAC5DnO,EAASE,SAAWkO,EACpBL,EAAYxZ,KACR,cAAC,EAAD,CAEIoB,MAAOmI,EACPmB,YAAa3B,GAFRQ,IAKTR,EAAKnC,MAAQ9C,EAAgB8G,MAAO,CACpCkP,EAAUC,EACV,IAAM9S,EAAS8B,EAAK9B,OAEdQ,EAAQgD,EAAMO,KAAKvD,MACzBmS,GAAa3S,EAAOxB,QAEpBoU,GADoB,IAAQpS,EAAQ,EACT,EAAIR,EAAOxB,QACtCwH,IAUJrI,EAAU2E,GAAV,2BAAmB3E,EAAU2E,IAA7B,IAAiCyB,KAAK,eAAMP,EAAMO,MAAQS,aAGtD1C,EAAKnC,MAAQ9C,EAAgBqD,UAC7BuS,EAAY1Z,KACR,cAAC,EAAD,CAAwBoB,MAAOA,EAAO0G,MAAQiB,EAAK9B,OAAyBa,OAAvDyB,IAEzBnI,QAGRqY,EAAeD,GACfG,EAAeD,GACflP,EAAWqC,MAAMmN,aAAjB,2BAAmCtT,EAAMhC,WAAzC,IAAoDE,iBAErD,CAAC8B,EAAMrC,SAASI,WAEnB,IAAMK,EAAW4B,EAAMhC,UAAUI,SAC3BmV,IAAiBvT,EAAMhC,UAAUO,eAAiBzB,EAAc0B,MAAQwB,EAAMhC,UAAUO,eAAiBzB,EAAc8K,cAC7H,OACI,sBAAK9M,GAAG,yBAAR,UACI,sBAAKrB,UAAU,YAAf,UACI,sBAAKqB,GAAG,aAAR,UACI,sBACIA,GAAG,mBACHrB,UAAW2E,GAAYjB,EAAS6J,QAAU,gBAAkB,GAFhE,UAII,wBAAQvN,UAAU,UAAlB,SAA4B,0CAC5B,wBAAQA,UAAU,UAAlB,SAA4B,0CAC5B,wBAAQA,UAAU,UAAlB,SAA4B,4CAC5B,wBAAQA,UAAU,UAAlB,SAA4B,4CAC5B,cAAC,GAAD,OAEJ,qBACIqB,GAAG,eACHrB,UAAW2E,GAAYjB,EAAS6J,QAAU,gBAAkB,GAFhE,SAIKgM,IAEL,qBACIlY,GAAG,kBACHrB,UAAW2E,GAAYjB,EAAS6J,QAAU,gBAAkB,GAFhE,SAIK8L,IAGL,qBAAKhY,GAAG,cACJrB,UAAW8Z,EAAe,SAAW,GACrC5Z,QAAS,WACL+L,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,UAInE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,OAEJ,qBAAK1D,GAAG,oBAGZ,qBAAKrB,UAAU,aAAf,SACI,cAAC,EAAD,UCjGD+Z,I,MArCa,WAAO,IAAD,EACU5P,qBAAWC,IAA3C7D,EADsB,EACtBA,MAAO0F,EADe,EACfA,SAAU5B,EADK,EACLA,WAGzB,OACI,sBAAKhJ,GAAG,yBAAR,UACI,sBAAKrB,UAAU,YAAf,UACI,wBAAQE,QAAS,WAIbmK,EAAW2P,YAAX,2BAA4BzT,EAAMrC,UAAlC,IAA4CE,UAAWX,EAAWY,SAClE4H,EAASlI,EAAWqD,sBAAuB,MAC3C6E,EAASlI,EAAW6D,oBAAqB,CAAC3G,MAAO,IACjDgL,EAASlI,EAAW4C,gBAAiB,CAAE1F,MAAO,KAPlD,SAUI,2CAEJ,wBAAQf,QAAS,WAIbmK,EAAW2P,YAAX,2BAA4BzT,EAAMrC,UAAlC,IAA4CE,UAAWX,EAAWqI,UAClEG,EAASlI,EAAWqD,sBAAuB,MAC3C6E,EAASlI,EAAW6D,oBAAqB,CAAC3G,MAAO,IACjDgL,EAASlI,EAAW4C,gBAAiB,CAAE1F,MAAO,KAPlD,SAUI,+CAGR,qBAAKjB,UAAU,oBCzBZia,I,MATa,WAAO,IAAD,EACU9P,qBAAWC,IADrB,EACtB7D,MADsB,EACf0F,SADe,EACL5B,WAGzB,OAAQ,+BCsBG6P,I,MAxBY,WAAO,IAAD,EACW/P,qBAAWC,IAA3C7D,EADqB,EACrBA,MAAO0F,EADc,EACdA,SAAU5B,EADI,EACJA,WACnB8B,EAAMC,iBAAO,IAQnB,OANAzL,qBAAU,WACqB,GAAvB4F,EAAMtC,eAAwD,GAAlCsC,EAAMrC,SAASI,SAASgF,SACpD6C,EAAIE,QAAQoE,MAAQ0J,KAAKC,UAAU7T,EAAMrC,aAE9C,CAACqC,EAAMtC,gBAGN,sBAAK5C,GAAG,2BAAR,UACI,0BAAU8K,IAAKA,IACf,wBACIjM,QAAS,WACLmK,EAAWqC,MAAMsN,YAAYG,KAAKE,MAAMlO,EAAIE,QAAQoE,QACpDxE,EAASlI,EAAW6D,oBAAqB,CAAC3G,MAAO,IACjDgL,EAASlI,EAAW4C,gBAAiB,CAAE1F,MAAO,KAJtD,qCCcGqZ,GAzBE,WAAO,IAAD,EAESnQ,qBAAWC,IAA/B7D,EAFW,EAEXA,MAAO0F,EAFI,EAEJA,SAEf,OACI,qBAAK5K,GAAG,gBAAR,SACI,cAAC,EAAD,CAAYC,UAAU,aAClBR,YAAa,CACT,CAAEV,KAAM,UAAWc,SAAS,EAAOZ,KAAM,cAAC,GAAD,KACzC,CACIF,KAAM,OAAQc,QAA2C,GAAlCqF,EAAMrC,SAASI,SAASgF,OAC/ChJ,KAA6B,GAAvBiG,EAAMtC,cAAqB,6BAAQ,cAAE,GAAF,KAE7C,CAAE7D,KAAM,SAAUc,SAAS,EAAOZ,KAAM,cAAC,GAAD,KACxC,CAAEF,KAAM,UAAWc,SAAS,EAAMZ,KAAM,cAAC,GAAD,KACxC,CAAEF,KAAM,cAAec,SAAS,EAAMZ,KAAM,yBAC5C,CAAEF,KAAM,UAAWc,SAAS,EAAMZ,KAAM,0BAE5CG,SAAU8F,EAAMtC,cAChB7C,eAAgB,SAACH,GAAD,OAAmBgL,EAASlI,EAAW4C,gBAAiB,CAAE1F,MAAOA,U,gBCnBpFsZ,GAYT,WAAYhU,EAAciU,GAAuC,IAAD,iCAVxDA,kBAUwD,OATxDvO,cASwD,OARxD1F,WAQwD,OAUzDyT,YAAc,SAACpR,GAClB,EAAK4R,aAAa,CAAE/T,KAAM1C,EAAW4E,cAAejC,QAAS,CAAEkC,WAXH,KAazD8I,mBAAqB,SAACnM,GACzB,EAAKiV,aAAa,CAAE/T,KAAM1C,EAAWiF,qBAAsBtC,QAAS,CAAEnB,0BAdV,KAiBzD4R,eAAiB,SAAC3R,GACrB,EAAKgV,aAAa,CAAE/T,KAAM1C,EAAWkF,iBAAkBvC,QAAS,CAAElB,kBAlBN,KAqBzDkH,MAAQ,CAEX+N,YAAa,SAACxZ,GACV,IAAM8G,EAAS,EAAKxB,MAAMhC,UAAUE,UAAUxD,GAAO8G,OACrDA,EAAO+F,MAAM4M,gBAAkB,OAC/BjD,YAAW,WACP1P,EAAO+F,MAAM4M,gBAAkB,KAChC,MAEPC,cAAe,WACX,IAAMnW,EAAa,EAAK+B,MAAMhC,UAAUC,WACxC,EAAKkI,MAAM+N,YAAYjW,IAE3BoW,eAAgB,WACZ,EAAKrU,MAAMhC,UAAUM,aAAa9D,SAAQ,SAACE,GACvC,EAAKyL,MAAM+N,YAAYxZ,OAI/B4Y,aAAc,SAACtV,GACX,EAAK0H,SAASlI,EAAW+E,eAAgB,CAAEvE,eAE/CsW,YAAa,WACT,IAAMrW,EAAa,EAAK+B,MAAMhC,UAAUC,WACxC,EAAKkI,MAAMmN,aAAX,2BACO,EAAKtT,MAAMhC,WADlB,IAEIG,cAAeF,EAAYG,SAAUjB,EAAS6J,YAGtDuN,gBAAiB,WACb,EAAKpO,MAAMmN,aAAX,2BACO,EAAKtT,MAAMhC,WADlB,IAEIG,eAAgB,EAAGC,SAAUjB,EAASkB,OAAQC,aAAc,OAGpEmV,YAAa,SAACpR,GACV,EAAKqD,SAASlI,EAAW4E,cAAe,CAAEC,UAK9CmS,eAAgB,WACZ,OAAO,EAAKxU,MAAMrC,SAASI,SAAS,GAAGwC,QAE3CkU,YAAa,SAACrW,GACV,EAAK+H,MAAMmN,aAAX,2BAA6B,EAAKtT,MAAMhC,WAAxC,IAAmDI,eAEvDmK,kBAAmB,WACf,IAAMmM,EAAW,EAAK1U,MAAMhC,UAAUC,WAChCF,EAAW,EAAKiC,MAAMrC,SAASI,SAASuC,QACxCC,EAAS,CACfA,MAAe,WACfxC,EAASyC,OAAOkU,EAAW,EAAG,EAAG,CAC7BxU,KAAM9C,EAAgBqD,QACtBF,OAAQA,IAEZ,EAAKmF,SAASlI,EAAW8E,cAAe,CAAEvE,aACxB,EAAKiC,MAAMhC,UAAUE,UAAUoC,QACvCE,OAAOkU,EAAW,EAAG,EAAG,IAClC,EAAKvO,MAAM+N,YAAYQ,EAAW,IAEtCtO,gBAAiB,WACb,IAAMsO,EAAW,EAAK1U,MAAMhC,UAAUC,WAChCF,EAAW,EAAKiC,MAAMrC,SAASI,SAASuC,QAC9CvC,EAASyC,OAAOkU,EAAW,EAAG,EAAG,CAC7BxU,KAAM9C,EAAgB8G,MACtB3D,OAAQ,CACJjD,aAAc,EACdwB,QAAQ,EACRvB,UAAW,KACXwB,QAAS,EACTsG,QAAS,CACLpG,YAAa,GACbK,OAAQ,CACJ,CACI2D,KAAM,CAAC,CACHsH,IAAKtN,EAAiB8O,KACtBT,QAAQ,EACRjC,QAAQ,IAEZkD,KAAMvP,EAAawP,KACnBrJ,MAAO,GACP6H,KAAM,CAAC,IAEX,CACI/H,KAAM,CAAC,CACHsH,IAAKtN,EAAiB8O,KACtBT,QAAQ,EACRjC,QAAQ,IAEZkD,KAAMvP,EAAayP,MACnBtJ,MAAO,GACP6H,KAAM,CAAC,SAM3B,EAAKtF,SAASlI,EAAW8E,cAAe,CAAEvE,aAExB,EAAKiC,MAAMhC,UAAUE,UAAUoC,QACvCE,OAAOkU,EAAW,EAAG,EAAG,IAClC,EAAKvO,MAAM+N,YAAYQ,EAAW,IAEtClO,cAAe,SAAC9L,GACZ,IAAMga,EAAW,EAAK1U,MAAMhC,UAAUC,WAChCqK,EAAa,EAAKtI,MAAMrC,SAASI,SAASrD,GAChD,GAEI,CAAC0C,EAAgB8G,MAAO9G,EAAgBqD,SAASmE,SAAS0D,EAAWpI,OAE5D,GAATxF,EACF,CACE,IAAMqD,EAA0B,EAAKiC,MAAMrC,SAASI,SAASuC,QAC7DvC,EAASyC,OAAO9F,EAAO,GACvB,EAAKgL,SAASlI,EAAW8E,cAAe,CAAEvE,aACtCrD,GAASga,IACT,EAAK1U,MAAMhC,UAAUC,aACrB,EAAKyH,SAASlI,EAAW+E,eAAgB,CAAEvE,UAAW,EAAKgC,MAAMhC,eAI7E2W,iBAAkB,WACd,IAAMD,EAAW,EAAK1U,MAAMhC,UAAUC,WACtC,EAAKkI,MAAMK,cAAckO,IAS7BE,qBAAsB,WAClB,IAAMF,EAAW,EAAK1U,MAAMhC,UAAUC,WAEtC,OADa,EAAK+B,MAAMrC,SAASI,SAAS2W,EAAW,GAC5CxU,MAAQ9C,EAAgB+D,QAC7B,EAAKnB,MAAMhC,UAAUC,aACrB,EAAKyH,SAASlI,EAAW+E,eAAgB,CAAEvE,UAAW,EAAKgC,MAAMhC,aAC1D,IAKf6W,iBAAkB,WACd,IAAMH,EAAW,EAAK1U,MAAMhC,UAAUC,WAEtC,OADa,EAAK+B,MAAMrC,SAASI,SAAS2W,EAAW,GAC5CxU,MAAQ9C,EAAgB+D,QAC7B,EAAKnB,MAAMhC,UAAUC,aACrB,EAAKyH,SAASlI,EAAW+E,eAAgB,CAAEvE,UAAW,EAAKgC,MAAMhC,aAC1D,IAKf8W,qBAAsB,WAClB,IAAM/W,EAAW,EAAKiC,MAAMrC,SAASI,SACjC2W,EAAW,EAAK1U,MAAMhC,UAAUC,WACpC,GAEI,GAAIF,IADJ2W,GACuBxU,MAAQ9C,EAAgBqD,QAAS,CACpD,EAAKT,MAAMhC,UAAUC,WAAayW,EAClC,EAAKhP,SAASlI,EAAW+E,eAAgB,CAAEvE,UAAW,EAAKgC,MAAMhC,YACjE,aAEC0W,EAAW,IAGxBK,iBAAkB,WACd,IAAMhX,EAAW,EAAKiC,MAAMrC,SAASI,SACjC2W,EAAW,EAAK1U,MAAMhC,UAAUC,WACpC,GAEI,GAAIF,IADJ2W,GACuBxU,MAAQ9C,EAAgBqD,SAAWiU,GAAY3W,EAASgF,OAAS,EAAG,CACvF,EAAK/C,MAAMhC,UAAUC,WAAayW,EAClC,EAAKhP,SAASlI,EAAW+E,eAAgB,CAAEvE,UAAW,EAAKgC,MAAMhC,YACjE,aAEC0W,EAAW3W,EAASgF,OAAS,IAG1CiS,iBAAkB,WACd,EAAKhV,MAAMhC,UAAUC,WAAa,EAClC,EAAKyH,SAASlI,EAAW+E,eAAgB,CAAEvE,UAAW,EAAKgC,MAAMhC,aAGrEkJ,gBAAiB,SAAC5I,GACd,EAAKoH,SAASlI,EAAW+E,eAAgB,CACrCvE,UAAU,2BAAM,EAAKgC,MAAMhC,WAAlB,IAA6BM,oBAI9C2W,kBAAmB,WACf,IAAMhX,EAAa,EAAK+B,MAAMhC,UAAUC,WAClCsC,EAAS,EAAKP,MAAMrC,SAASI,SAASE,GAAYsC,OACxD,EAAKmF,SAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAcuJ,gBAChE,EAAKX,SAASlI,EAAWwE,qBAAsB,CAC3CC,OAAO,2BACA,EAAKjC,MAAMhC,UAAUS,mBADtB,IAEFI,UAAW0B,EAAOjD,YAClBwB,OAAQyB,EAAOzB,OACfvB,UAAWgD,EAAOhD,UAClBwB,QAASwB,EAAOxB,aAK5ByJ,kBAAmB,WACf,IAAMvK,EAAa,EAAK+B,MAAMhC,UAAUC,WAClCsC,EAAS,EAAKP,MAAMrC,SAASI,SAASE,GAAYsC,OACxD,EAAKmF,SAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAckU,kBAChE,IAAM3L,EAAU9E,EAAO8E,QACjBiH,EAAmC,CACrCrN,YAAaoG,EAAQpG,YACrBC,WAAYmG,EAAQnG,WACpBC,UAAW,EACXC,iBAAkB,EAClBC,sBAAuB,EACvBC,OAAQ+F,EAAQ/F,OAChBC,WAAW,GAEf,EAAK4L,mBAAmBmB,KAlPgC,KA2PzDhI,KAAO,CACVsN,aAAc,SAAC7Q,EAAeC,EAAeC,EAAkBC,GAC3D,IAAMjD,EAAa,EAAK+B,MAAMhC,UAAUC,WAGxC,EAAKyH,SAASlI,EAAW0E,qBAAsB,CAC3CvB,IAAK1C,EACLgE,OAAQ,CACJlB,QAAOC,QAAOC,WAAUC,WAGhC,EAAKwE,SAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,OAChE,EAAK2H,MAAMiO,kBAvQ6C,KAqRzD3K,MAAQ,CACXC,iBAAkB,WACd,IAAMzL,EAAa,EAAK+B,MAAMhC,UAAUC,WAClCiX,EAAc,EAAKlV,MAAMrC,SAASI,SAASE,GAAYsC,OACvDyI,EAAc,EAAKhJ,MAAMhC,UAAUS,kBACzC,EAAKiH,SAASlI,EAAW0E,qBAAsB,CAC3CvB,IAAK1C,EACLgE,OAAO,2BACAiT,GADD,IAEF5X,YAAa0L,EAAYnK,UACzBC,OAAQkK,EAAYlK,OACpBvB,UAAWyL,EAAYzL,UACvBwB,QAASiK,EAAYjK,YAG7B,EAAK2G,SAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,OAChE,EAAK2H,MAAMiO,kBArS6C,KAmTzD/O,QAAU,CACbwJ,aAAc,SAACrL,EAAsBD,EAAkBE,GACnD,IACMtE,EADU,EAAKa,MAAMhC,UAAUgB,oBACXG,UACpBuE,GAAS,EAAK1D,MAAMhC,UAAUgB,oBAAoBM,OAAOH,GAAWgE,MAAMK,GAAcD,GAAUE,GACxG,EAAKiC,SAASlI,EAAW8F,sBAAuB,CAAEnE,YAAWqE,eAAcD,WAAUE,WAAUC,WAEnG0I,OAAQ,WAGJ,IAAMpN,EAAsB,EAAKgB,MAAMhC,UAAUgB,oBAC3C4D,EAAS5D,EAAoBM,OAC7BH,EAAYH,EAAoBG,UAChC0L,EAAgBjI,EAAOzD,GACvBC,EAAmBJ,EAAoBI,iBACvC+D,EAAQ0H,EAAc1H,MAC5B0H,EAAc5H,KAAd,aAAyB4H,EAAc5H,MAEvC4H,EAAc5H,KAAKzC,OACfpB,EAAmB,EAAG,EACtB,CAAEmL,IAAKtN,EAAiB8O,KAAM1C,QAAQ,EAAOiC,QAAQ,IAEzDnI,EAAM3I,SAAQ,SAAC2a,GACXA,EAAK3U,OACDpB,EAAmB,EAAG,EAAG,EAAC,OAGlCyL,EAAcG,KAAKxK,OACfxB,EAAoBI,iBAAmB,EAAG,EAAG,GAEjDwD,EAAOzD,GAAa0L,EAEpB,EAAKoJ,aAAa,CAAE/T,KAAM1C,EAAWiF,qBAAsBtC,QAAS,CAAEnB,0BAE1EqN,OAAQ,WAGJ,IAAMrN,EAAsB,EAAKgB,MAAMhC,UAAUgB,oBAC3C4D,EAAS5D,EAAoBM,OAC7BH,EAAYH,EAAoBG,UAChC0L,EAAgBjI,EAAOzD,GACvBC,EAAmBJ,EAAoBI,iBACvC+D,EAAQ0H,EAAc1H,MAC5B0H,EAAc5H,KAAd,aAAyB4H,EAAc5H,MAEvC4H,EAAc5H,KAAKzC,OAAOpB,EAAkB,GAC5C+D,EAAM3I,SAAQ,SAAC2a,GACXA,EAAK3U,OAAOpB,EAAkB,MAElCyL,EAAcG,KAAKxK,OAAOpB,EAAkB,GAC5CwD,EAAOzD,GAAa0L,EAEhBzL,EAAmB,GACnBJ,EAAoBI,mBAExB,EAAKsG,SAASlI,EAAWiF,qBAAsB,CAAEzD,yBAErDoW,eAAgB,SAAC1a,GACb,IAAMsE,EAAsB,EAAKgB,MAAMhC,UAAUgB,oBACjDA,EAAoBI,iBAAmB1E,EACvC,EAAKyQ,mBAAmBnM,IAE5BqW,eAAgB,WAEZ,OAD4B,EAAKrV,MAAMhC,UAAUgB,oBACtBI,kBAE/BkW,cAAe,WAEX,OAAmC,GADnB,EAAKtV,MAAMhC,UAAUgB,oBACtBI,kBAEnBmW,aAAc,WACV,IAAMlQ,EAAU,EAAKrF,MAAMhC,UAAUgB,oBAC/BwW,EAAanQ,EAAQ/F,OAAO+F,EAAQlG,WAC1C,OAAOkG,EAAQjG,kBAAoBoW,EAAWvS,KAAKF,OAAS,GAEhE0S,cAAe,WACX,IAAMpQ,EAAU,EAAKrF,MAAMhC,UAAUgB,oBACrC,OAAOqG,EAAQ/F,OAAO+F,EAAQlG,YAElCuW,cAAe,WACX,IAAMrQ,EAAU,EAAKrF,MAAMhC,UAAUgB,oBAErC,OADmBqG,EAAQ/F,OAAO+F,EAAQlG,WACxB8D,KAAKoC,EAAQjG,mBAOnC6L,kBAAmB,SAACC,GAChB,IAAM7F,EAAU,EAAKrF,MAAMhC,UAAUgB,oBAC/B4D,EAASyC,EAAQ/F,OACJsD,EAAOyC,EAAQlG,WACvB8D,KAAKoC,EAAQjG,kBAAoB8L,EAC5C,EAAKC,mBAAL,2BAA6B9F,GAA7B,IAAsC/F,OAAQsD,MAOlD+S,UAAW,SAACtK,GACR,IAAMP,EAAa,EAAKzF,QAAQqQ,gBAChC5K,EAAWP,IAAMc,EACjBP,EAAWzB,QAAS,EACpByB,EAAWQ,QAAS,EACpB,EAAKjG,QAAQ4F,kBAAkBH,IAOnC8K,gBAAiB,SAACC,GACd,IAAMxQ,EAAU,EAAKrF,MAAMhC,UAAUgB,oBAC/B4D,EAASyC,EAAQ/F,OACvBsD,EAAOyC,EAAQlG,WAAW6L,KAAK3F,EAAQjG,kBAAoByW,EAC3D,EAAK1K,mBAAL,2BAA6B9F,GAA7B,IAAsC/F,OAAQsD,MAOlDkT,eAAgB,WACZ,IAAMzQ,EAAU,EAAKrF,MAAMhC,UAAUgB,oBAErC,OADmBqG,EAAQ/F,OAAO+F,EAAQlG,WACxB6L,KAAK3F,EAAQjG,mBAOnC8M,aAAc,WACV,MAAO,CACHjP,EAAiB+O,KACjB/O,EAAiB8O,KACjB9O,EAAiB6O,MACnBlH,SAAS,EAAKS,QAAQqQ,gBAAgBnL,MAO5C4B,aAAc,WACV,MAAO,CACHlP,EAAiB8O,KACjB9O,EAAiB6O,MACnBlH,SAAS,EAAKS,QAAQqQ,gBAAgBnL,MAG5CoF,cAAe,SAACjV,GACZ,IAAM2K,EAAU,EAAKrF,MAAMhC,UAAUgB,oBACrCqG,EAAQlG,UAAYzE,EACpB2K,EAAQjG,iBAAmB,EAC3B,EAAK+L,mBAAmB9F,IAE5BuK,YAAa,SAACmG,GACV,IAAM1Q,EAAU,EAAKrF,MAAMhC,UAAUgB,oBACrCqG,EAAQnG,WAAa6W,EACrB,EAAK5K,mBAAmB9F,IAE5B0I,WAAY,SAACxO,GACT,IAAM8F,EAAU,EAAKrF,MAAMhC,UAAUgB,oBACrCqG,EAAQ9F,UAAYA,EACpB,EAAK4L,mBAAmB9F,IAG5B2Q,iBAAkB,WACd,IAAM3Q,EAAU,EAAKrF,MAAMhC,UAAUgB,oBACrCqG,EAAQlG,UAAiC,GAArBkG,EAAQlG,UAAiB,EAAI,EACjDkG,EAAQjG,iBAAmB,EAC3B,EAAK+L,mBAAmB9F,IAG5BuL,eAAgB,SAAC3R,GAIb,IAHA,IAAMD,EAAsB,EAAKgB,MAAMhC,UAAUgB,oBAC3CiX,EAAajX,EAAoBM,OACjCA,EAAyB,IAAIQ,MAAM,GAChC+C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAMxB,IALA,IAAMC,EAAe9D,EAAoBC,YAAY8D,OAC/CC,EAAiBiT,EAAWpT,GAAGI,KAAKF,OACpCG,EAAY+S,EAAWpT,GAAGM,MAC1BA,EAAuB,IAAIrD,MAAMgD,GAE9BM,EAAI,EAAGA,EAAIN,EAAcM,IAC9B,GAAIA,EAAIF,EAAUH,OACdI,EAAMC,GAAKF,EAAUE,OAClB,CACHD,EAAMC,GAAK,IAAItD,MAAMkD,GACrB,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAgBK,IAChCF,EAAMC,GAAGC,GAAK,IAAIvD,MAAM,GACxBqD,EAAMC,GAAGC,GAAG,IAAK,EAI7B/D,EAAOuD,GAAP,2BACOoT,EAAWpT,IADlB,IAEIM,YAKZkO,oBAAqB,WACjB,IAAMpT,EAAa,EAAK+B,MAAMhC,UAAUC,WAClCiX,EAAc,EAAKlV,MAAMrC,SAASI,SAASE,GAAYsC,OACvDyI,EAAc,EAAKhJ,MAAMhC,UAAUgB,oBACnCqG,EAAU,GAChBA,EAAQpG,YAAc+J,EAAY/J,YAClCoG,EAAQ/F,OAAS0J,EAAY1J,OAC7B+F,EAAQnG,WAAa8J,EAAY9J,WACjC,EAAKwG,SAASlI,EAAW0E,qBAAsB,CAC3CvB,IAAK1C,EACLgE,OAAO,2BACAiT,GADD,IAEF7P,cAGR,EAAKK,SAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,OAChE,EAAK2H,MAAMiO,iBAGf9O,cAAe,SAACD,GAEZ,IAAI6Q,EAAQ,EAUZ,OATA7Q,EAAQ/F,OAAO9E,SAAQ,SAAC8T,GACpBA,EAAMnL,MAAM3I,SAAQ,SAAC2a,GACjBA,EAAK3a,SAAQ,SAAC2b,GACNA,EAAK,IACLD,aAKTA,GAGX9E,KAAM,SAACgF,GAIH,IAFA,IAAMC,EAAU,EAAKrW,MAAMhC,UAAUwB,eAC/BK,EAAyBC,MAAM,IAC5B+C,EAAI,EAAGA,EAAI,GAAIA,IACpBhD,EAAagD,GAAK,GAEV,SAANyT,EAAOF,GAET,IAAMnY,EAAa,EAAK+B,MAAMhC,UAAUC,WAClCsC,EAAS,EAAKP,MAAMrC,SAASI,SAASE,GAAYsC,OAClDwD,EAAQ,EAAK/D,MAAMhC,UAAUE,UAAUD,GACvCwG,EAASkF,EAAgBpJ,EAAOhD,WAChC+M,EAAS,OAAG7F,QAAH,IAAGA,OAAH,EAAGA,EAAQ6F,UACpBiM,EAAS,EAAKvW,MAAMhC,UAAUgB,oBAC9BqG,EAA0B+Q,EAC1B7V,EAAO8E,QAD+B,CAAE/F,OAAQiX,EAAOjX,OAAQL,YAAasX,EAAOtX,YAAaC,WAAYqX,EAAOrX,YAEnHQ,EAAU,EAAKM,MAAMN,QACrBqB,EAAQgD,EAAMO,KAAKvD,MAEnByV,EAAQ,IAAQzV,EAAQ,EACxB0V,EAAQ,IAAQ1V,EAAQR,EAAOxB,QAC/B2X,EAAgBF,EAAQ,GAG9BH,EAAQ/c,KACJ4X,YAAW,WACP,IAAIyF,GAAQ,EACRP,IACgB,EAAKjQ,MAAM0O,qBAEvB8B,GAAQ,EACRL,GAAI,KAGRK,GACA,EAAKxQ,MAAMmN,aAAX,2BAA6B,EAAKtT,MAAMhC,WAAxC,IAAmDI,SAAUjB,EAASkB,YAE3EoY,IAEP,IAjCgC,eAiCvB5T,GACL,IAAI+T,EAAS,EACPtI,EAAQjJ,EAAQ/F,OAAOuD,GAE7ByL,EAAMrL,KAAKzI,SAAQ,SAAC0Q,EAASkC,GAEzB,IAAMyJ,EAAW3E,OAAOhH,EAAQX,IAAIiI,WAAWsE,QAAQ,MAAO,KAC1DC,EAAWP,EAAQK,EACnB3L,EAAQ7B,SACR0N,GAAY,KAEhB1R,EAAQpG,YAAYzE,SAAQ,SAAC8U,EAASjC,GAClCiB,EAAMnL,MAAMkK,GAAGD,GAAG5S,SAAQ,SAACwc,EAAO5I,GAE9B,GAAI4I,EAAO,CACP,IACM7G,GADgBpM,EAAMO,KAAKrD,SAAWV,EAAOjD,aAAe,GAChCgN,EAAUgF,EAAQiB,aAAgC,GAAjBjB,EAAQc,OACrEA,EAASlL,KAAKmL,MAAMF,EAAa,IAEjCZ,EADOpU,EAAiBgV,EAAa,IACdC,EACvByF,EAAW,GAAMvH,EAAMtD,KAAKoC,GAAK,GACjCM,EAAOkJ,EAASG,EAAW,EAAI3I,EAC/B6I,EAAQ5R,EAAQnG,WAIlBuX,EAAQC,EAFRhJ,EAAOqJ,EAIXV,EAAQ/c,KACJ4X,YAAW,WACPxR,EAAQuR,cAAc1B,EAAe,KAAMsG,GAC3ChW,EAAasQ,OACdzC,IAEP2I,EAAQ/c,KACJ4X,YAAW,WACPrR,EAAasQ,KACmB,GAA5BtQ,EAAasQ,IACbzQ,EAAQyR,eAAe5B,KAE5B0H,WAKnBL,GAAUG,MA7CTlU,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,GAgDT,EAAKsD,MAAMmN,aAAX,2BACO,EAAKtT,MAAMhC,WADlB,IAEII,SAAUjB,EAASyV,QAASpT,eAAgB6W,KAGpDC,CAAIF,KA9nBRc,KAAKjD,aAAeA,EACpBiD,KAAKlX,MAAQA,EACbkX,KAAKxR,SAAW,SAACxF,EAAkBC,GAAnB,OAAoC8T,EAAa,CAAE/T,OAAMC,cCRpE0D,GAAgBgN,wBAAc,IA+B5BsG,GA7BG,WAAO,IAAD,EAEUC,qBAAWrX,EAAStC,GAF9B,mBAEbuC,EAFa,KAENiU,EAFM,KAGdvO,EAAW,SAAC2R,EAAwBlX,GAAzB,OAA0C8T,EAAa,CAAE/T,KAAMmX,EAAYlX,QAASA,KAC/F2D,EAAa,IAAIkQ,GAAWhU,EAAOiU,GACzC,OACI,qBACInZ,GAAG,aACHwc,SAAU,IACVC,UAAW,SAAClQ,GAAD,OCjBe,SAACA,EAAkBrH,EAAc0F,EAAoB5B,GAGvF,GAA2B,GAAvB9D,EAAMtC,cAAV,CAIA,IAAMO,EAAa+B,EAAMhC,UAAUC,WAC7BG,EAAW4B,EAAMhC,UAAUI,SAC3BP,EAAYmC,EAAMrC,SAASE,UAC3B2Z,EAAexX,EAAMrC,SAASI,SAASE,GAE7C,OAAQuZ,EAAatX,MACjB,KAAK9C,EAAgB8G,MACjB,IAAM3D,EAASiX,EAAajX,OAE5B,OAAQP,EAAMhC,UAAUO,eACpB,KAAKzB,EAAc0B,KAEf,GAAIJ,GAAYjB,EAASkB,OACrB,OAAQgJ,EAAEzL,KACN,IAAK,IACDkI,EAAWqC,MAAM8O,oBAEjB,MACJ,IAAK,KAC0B,GAAvB1U,EAAOjD,aACPwG,EAAWqC,MAAMqC,oBAGrB,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,GAAI3K,GAAaX,EAAWqI,OAAQ,MACpC,IAAMkS,EAAgBpa,EAA0B6U,OAAO7K,EAAEzL,KAAO,GAChE8J,EAASlI,EAAWkD,iBAAkB,CAAEC,IAAK1C,EAAYX,YAAama,EAAcna,cACpFoI,EAASlI,EAAWoD,eAAgB,CAAED,IAAK1C,EAAYV,UAAWka,EAAcla,YAChFuG,EAAWqC,MAAMiO,gBAEjB,MACJ,IAAK,IACDtQ,EAAWqC,MAAMmO,cAEjB,MACJ,IAAK,IACDxQ,EAAWuB,QAAQ+L,MAAK,QAI7B,GAAIhT,GAAYjB,EAAS6J,QAE5B,OAAQK,EAAEzL,KACN,IAAK,IACDkI,EAAWqC,MAAMoO,kBAEjB,MACJ,IAAK,QACD,IAAMxW,EAAWiC,EAAMrC,SAASI,SAC1B2Z,EAAe3Z,EAASiC,EAAMhC,UAAUG,eAAeoC,OAAuB8E,QACpFrF,EAAMhC,UAAUM,aAAa9D,SAAQ,SAACE,GACjCqD,EAASrD,GAAO6F,OAAuB8E,QAAUuO,KAAKE,MAAMF,KAAKC,UAAU6D,OAEhF5T,EAAWqC,MAAMsN,YAAjB,2BAAkCzT,EAAMrC,UAAxC,IAAkDI,cAClD+F,EAAWqC,MAAMoO,kBACjBzQ,EAAWqC,MAAMkO,iBAM7B,MACJ,KAAKvX,EAAcuJ,cACf,OAAQgB,EAAEzL,KACN,IAAK,SACL,IAAK,IACD8J,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,OAC3D,MACJ,IAAK,aACDkH,EAASlI,EAAWkD,iBAAkB,CAAEC,IAAK1C,EAAYX,YAAaiD,EAAOjD,YAAc,IAC3F,MACJ,IAAK,YAGL,IAAK,IACDoI,EAASlI,EAAWkD,iBAAkB,CAAEC,IAAK1C,EAAYX,YAAaiD,EAAOjD,YAAc,IAC3F,MACJ,IAAK,QACDwG,EAAW2F,MAAMC,mBAKzB,MACJ,KAAK5M,EAAckU,gBACf,IAAMzR,EAAYS,EAAMhC,UAAUgB,oBAAoBO,UACtD,OAAQ8H,EAAEzL,KACN,IAAK,SACL,IAAK,IACD8J,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAc0B,OAC3D,MACJ,IAAK,YACD,IAAKsF,EAAWuB,QAAQiQ,gBAAiB,CACrC,IAAMvI,EAAMjJ,EAAWuB,QAAQgQ,iBAC/BvR,EAAWuB,QAAQ+P,eAAerI,EAAM,GAG5C,MACJ,IAAK,aACD,IAAKjJ,EAAWuB,QAAQkQ,eAAgB,CACpC,IAAMxI,EAAMjJ,EAAWuB,QAAQgQ,iBAC/BvR,EAAWuB,QAAQ+P,eAAerI,EAAM,GAG5C,MACJ,IAAK,UACD,IAAMhC,EAAYjH,EAAWuB,QAAQyQ,iBACjC/K,EAAY,IACZjH,EAAWuB,QAAQuQ,gBAAgB7K,EAAY,GAGnD,MACJ,IAAK,YACD,IAAMA,EAAYjH,EAAWuB,QAAQyQ,iBACjC/K,EAAY,GACZjH,EAAWuB,QAAQuQ,gBAAgB7K,EAAY,GAGnD,MACJ,IAAK,IACDjH,EAAWuB,QAAQ2Q,mBAEnB,MACJ,IAAK,IAAKlS,EAAWuB,QAAQsQ,UAAU1Y,EAAiB2O,OAAQ,MAChE,IAAK,IAAK9H,EAAWuB,QAAQsQ,UAAU1Y,EAAiB6O,MAAO,MAC/D,IAAK,IAAKhI,EAAWuB,QAAQsQ,UAAU1Y,EAAiB8O,MAAO,MAC/D,IAAK,IAAKjI,EAAWuB,QAAQsQ,UAAU1Y,EAAiB+O,MAAO,MAC/D,IAAK,IAAKlI,EAAWuB,QAAQsQ,UAAU1Y,EAAiBgP,MAAO,MAC/D,IAAK,IACD,GAAInI,EAAWuB,QAAQ6G,eAAgB,CACnC,IAAMpB,EAAahH,EAAWuB,QAAQqQ,gBACtC5K,EAAWzB,QAAUyB,EAAWzB,OAChCyB,EAAWQ,QAAS,EACpBxH,EAAWuB,QAAQ4F,kBAAkBH,GAGzC,MACJ,IAAK,IACD,GAAIhH,EAAWuB,QAAQ8G,eAAgB,CACnC,IAAMrB,EAAahH,EAAWuB,QAAQqQ,gBACtC5K,EAAWQ,QAAUR,EAAWQ,OAChCR,EAAWzB,QAAS,EACpBvF,EAAWuB,QAAQ4F,kBAAkBH,GAGzC,MACJ,IAAK,IACDhH,EAAWuB,QAAQ+G,SAEnB,MACJ,IAAK,SACGtI,EAAWuB,QAAQoQ,gBAAgBxS,KAAKF,OAAS,GACjDe,EAAWuB,QAAQgH,SAGvB,MAEJ,IAAK,IACG9M,GACAuE,EAAWuB,QAAQ+L,MAAK,GAG5B,MAEJ,IAAK,QACG7R,GACAuE,EAAWuB,QAAQgM,wBAY/C,GAAIrR,EAAMhC,UAAUO,eAAiBzB,EAAc0B,MAC/C,CAACpB,EAAgB8G,MAAO9G,EAAgBqD,SAASmE,SAAS4S,EAAatX,MACvE,GAAI9B,GAAYjB,EAASkB,OACrB,OAAQgJ,EAAEzL,KACN,IAAK,YACDkI,EAAWqC,MAAMyO,uBAEjB,MACJ,IAAK,aACD9Q,EAAWqC,MAAM0O,mBAEjB,MACJ,IAAK,UACD/Q,EAAWqC,MAAM2O,uBAEjB,MACJ,IAAK,YACDhR,EAAWqC,MAAM4O,mBAEjB,MACJ,IAAK,SACDjR,EAAWqC,MAAMwO,mBAGjB,MACJ,IAAK,IACD7Q,EAAWqC,MAAM6O,mBAEjB,MACJ,IAAK,IACDlR,EAAWqC,MAAMC,kBACjB,MACJ,IAAK,IACDtC,EAAWqC,MAAMoC,oBACjB,MACJ,IAAK,IACD,IAAMhI,EAASiX,EAAajX,OAC5BmF,EAASlI,EAAWuE,eAAgB,CAAE/B,MAAOlD,EAAcuJ,gBAC3DX,EAASlI,EAAWwE,qBAAsB,CACtCC,OAAO,2BACAjC,EAAMhC,UAAUS,mBADjB,IAEFI,UAAW0B,EAAOjD,YAClBwB,OAAQyB,EAAOzB,OACfvB,UAAWgD,EAAOhD,UAClBwB,QAASwB,EAAOxB,YAIxB,MACJ,IAAK,IACD4Y,MAAM/D,KAAKC,UAAU7T,EAAMhC,UAAUE,UAAU6E,cAUpD,GAAI3E,GAAYjB,EAASyV,QAE5B,OAAQvL,EAAEzL,KACN,IAAK,IACeoE,EAAMhC,UAAUwB,eACxBhF,SAAQ,SAACod,GACbC,cAAcD,MAElB9T,EAAWqC,MAAMmN,aAAjB,2BACOtT,EAAMhC,WADb,IAEIwB,eAAgB,GAAIpB,SAAUjB,EAASkB,UAE3C2B,EAAMN,QAAQoY,eDvPWC,CAAuB1Q,EAAGrH,EAAO0F,EAAU5B,IAHhF,SAKI,cAACD,GAAcyN,SAAf,CAAwBpH,MAAO,CAAElK,QAAO0F,WAAU5B,cAAlD,SACI,cAAC,EAAD,CAAY/I,UAAU,cAClBR,YAAa,CACT,CAAEV,KAAM,UAAWc,SAAS,EAAMZ,KAAM,yBACxC,CAAEF,KAAM,UAAWc,SAAS,EAAMZ,KAAM,yBACxC,CAAEF,KAAM,QAASc,SAAS,EAAOZ,KAAM,cAAC,GAAD,KACvC,CAAEF,KAAM,UAAWc,SAAS,EAAMZ,KAAM,yBACxC,CAAEF,KAAM,SAAUc,SAAS,EAAMZ,KAAM,yBACvC,CAAEF,KAAM,UAAWc,SAAS,EAAMZ,KAAM,yBACxC,CAAEF,KAAM,UAAWc,SAAS,EAAMZ,KAAM,0BAE5CG,SAAU,SEdf8d,OAlBf,WAaE,OAZA5d,qBAAU,WAER6d,SAASC,cAAgB,WAAc,OAAO,GAE9CC,OAAOC,iBAAiB,WAAW,SAAU/Q,GAEvC,CAAC,GAAI,GAAI,GAAI,GAAI,IAAIgR,QAAQhR,EAAEiR,UAAY,GAC7CjR,EAAEkR,oBAEH,KAEF,IAED,cAAC,GAAD,KCVWC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFlB,SAASmB,eAAe,SAM1BZ,O","file":"static/js/main.41effb89.chunk.js","sourcesContent":["export const DEGREE12_FLAT_LIST = [\r\n    'Ⅰ', 'bⅡ', 'Ⅱ', 'bⅢ', 'Ⅲ', 'Ⅳ', 'bⅤ', 'Ⅴ', 'bⅥ', 'Ⅵ', 'bⅦ', 'Ⅶ'\r\n];\r\nexport const DEGREE12_SHARP_LIST = [\r\n    'Ⅰ', '#Ⅰ', 'Ⅱ', '#Ⅱ', 'Ⅲ', 'Ⅳ', '#Ⅳ', 'Ⅴ', '#Ⅴ', 'Ⅵ', '#Ⅵ', 'Ⅶ'\r\n];\r\n\r\nexport const KEY12_FLAT_LIST = [\r\n    'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const KEY12_SHARP_LIST = [\r\n    'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MAJOR_SCALE_LIST = [\r\n    'C', 'C#/Db', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'\r\n];\r\nexport const KEY12_MINOR_SCALE_LIST = [\r\n    'C', 'C#', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'\r\n];\r\nexport const SCALE_LIST = [\r\n    'major', 'minor'\r\n];\r\nexport const RYTHM_LIST = [\r\n    '4/4', '2/4', '3/4', '6/8', '12/8'\r\n];\r\n\r\nexport type KeyScaleParams = {\r\n    keyIndex: number;\r\n    signature: number;\r\n}\r\nexport enum KeyScale {\r\n    C_DUR = '0',\r\n    DES_DUR = '1',\r\n};\r\n\r\n\r\n\r\nexport const DIATONIC_MAJOR_SCALE_DEGREE_NAMES: string[] = [\r\n    'Ⅰ', 'Ⅰmaj7',\r\n    'Ⅱm', 'Ⅱm7',\r\n    'Ⅲm', 'Ⅲm7',\r\n    'Ⅳ', 'Ⅳmaj7',\r\n    'Ⅴ', 'Ⅴ7',\r\n    'Ⅵm', 'Ⅵm7',\r\n    'Ⅶm(-5)', 'Ⅶm7(-5)'\r\n]\r\n\r\nexport const DIATONIC_NATURAL_MINOR_SCALE_DEGREE_NAMES = [\r\n    'Ⅰm', 'Ⅰm7',\r\n    'Ⅱm(-5)', 'Ⅱm7(-5)',\r\n    '♭Ⅲ', '♭ⅢM7',\r\n    'Ⅳm', 'Ⅳm7',\r\n    'Ⅴm', 'Ⅴm7',\r\n    '♭Ⅵ', '♭ⅥM7',\r\n    '♭Ⅶ', '♭Ⅶ7'\r\n]\r\n\r\nexport type SymbolParams = {\r\n    key: SymbolKey\r\n    sortNo: number;\r\n    parentNo: number;\r\n    depth: number;\r\n    name: string;\r\n    struct: string[];\r\n    fixed: string[];\r\n    intervals: number[];\r\n}\r\n\r\nexport enum SymbolKey {\r\n    MAJOR,\r\n    MINOR,\r\n    SUS4,\r\n    DIM,\r\n    AUG,\r\n    MAJ7,\r\n    SEVENTH,\r\n    MIN7,\r\n    MINOR_MAJ7,\r\n    ADD9,\r\n    MINOR_ADD9,\r\n    SIXTH_9TH,\r\n    MINOR_MINUS5,\r\n}\r\n\r\nexport const SYMBOL_PARAMS_LIST: SymbolParams[] = [\r\n    { key: SymbolKey.MAJOR, sortNo: 1, \"parentNo\": 0, \"depth\": 1, \"name\": \"\", \"struct\": ['p1', 'M3', 'p5'], \"fixed\": ['p1'], \"intervals\": [0, 4, 7] },\r\n    { key: SymbolKey.MINOR, \"sortNo\": 2, \"parentNo\": 0, \"depth\": 1, \"name\": \"m\", \"struct\": ['p1', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7] },\r\n    { key: SymbolKey.SUS4, \"sortNo\": 3, \"parentNo\": 0, \"depth\": 1, \"name\": \"sus4\", \"struct\": ['p1', 'p4', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 5, 7] },\r\n    { key: SymbolKey.DIM, \"sortNo\": 4, \"parentNo\": 0, \"depth\": 1, \"name\": \"dim\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n    { key: SymbolKey.AUG, \"sortNo\": 5, \"parentNo\": 0, \"depth\": 1, \"name\": \"aug\", \"struct\": ['p1', 'M3', 'a5'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 8] },\r\n    { key: SymbolKey.MAJ7, \"sortNo\": 6, \"parentNo\": 0, \"depth\": 1, \"name\": \"maj7\", \"struct\": ['p1', 'M3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 11] },\r\n    { key: SymbolKey.SEVENTH, \"sortNo\": 7, \"parentNo\": 0, \"depth\": 1, \"name\": \"7\", \"struct\": ['p1', 'M3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 4, 7, 10] },\r\n    { key: SymbolKey.MIN7, \"sortNo\": 8, \"parentNo\": 0, \"depth\": 1, \"name\": \"m7\", \"struct\": ['p1', 'm3', 'p5', 'm7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 10] },\r\n    { key: SymbolKey.MINOR_MAJ7, \"sortNo\": 9, \"parentNo\": 0, \"depth\": 1, \"name\": \"mmaj7\", \"struct\": ['p1', 'm3', 'p5', 'M7'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 7, 11] },\r\n    { key: SymbolKey.ADD9, \"sortNo\": 10, \"parentNo\": 0, \"depth\": 1, \"name\": \"add9\", \"struct\": ['p1', 'M2', 'M3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7] },\r\n    { key: SymbolKey.MINOR_ADD9, \"sortNo\": 11, \"parentNo\": 0, \"depth\": 1, \"name\": \"madd9\", \"struct\": ['p1', 'M2', 'm3', 'p5'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 3, 7] },\r\n    { key: SymbolKey.SIXTH_9TH, \"sortNo\": 12, \"parentNo\": 0, \"depth\": 1, \"name\": \"6(9)\", \"struct\": ['p1', 'M2', 'M3', 'p5', 'M6'], \"fixed\": [\"p1\"], \"intervals\": [0, 2, 4, 7, 9] },\r\n    { key: SymbolKey.MINOR_MINUS5, \"sortNo\": 13, \"parentNo\": 0, \"depth\": 1, \"name\": \"m(-5)\", \"struct\": ['p1', 'm3', 'd5'], \"fixed\": [\"p1\"], \"intervals\": [0, 3, 6] },\r\n];\r\n\r\nexport enum SymbolType {\r\n    TRIAD,\r\n    TETRAD7TH,\r\n    TETRAD9TH,\r\n}\r\n\r\nexport type SymbolTypeParams = {\r\n    type: SymbolType;\r\n    list: SymbolKey[];\r\n}\r\nexport const SYMBOL_TYPE_LIST: SymbolTypeParams[] = [\r\n    {\r\n        type: SymbolType.TRIAD, list: [\r\n            SymbolKey.MAJOR,\r\n            SymbolKey.MINOR,\r\n            SymbolKey.SUS4,\r\n            SymbolKey.DIM,\r\n            SymbolKey.AUG,\r\n            SymbolKey.MINOR_MINUS5\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD7TH, list: [\r\n            SymbolKey.MAJ7,\r\n            SymbolKey.SEVENTH,\r\n            SymbolKey.MINOR_MAJ7,\r\n        ]\r\n    },\r\n    {\r\n        type: SymbolType.TETRAD9TH, list: [\r\n            SymbolKey.ADD9,\r\n            SymbolKey.MINOR_ADD9,\r\n        ]\r\n    },\r\n];\r\n\r\n\r\n\r\nexport type ChordPair = {\r\n    degreeIndex: number;\r\n    symbolKey: SymbolKey;\r\n}\r\nexport const DIATONIC_MAJOR_SCALE_LIST: ChordPair[] = [\r\n    { degreeIndex: 0, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 2, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 4, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 5, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 7, symbolKey: SymbolKey.MAJOR },\r\n    { degreeIndex: 9, symbolKey: SymbolKey.MINOR },\r\n    { degreeIndex: 11, symbolKey: SymbolKey.MINOR_MINUS5 },\r\n];","import { useState, useEffect } from 'react';\r\n\r\nimport './TabbedPane.css';\r\n\r\ntype TabbedPaneProps = {\r\n    groupName: string;\r\n    activeNo: number;\r\n    tabElements: TabElements[];\r\n    selectTabIndex?: Function;\r\n}\r\n\r\ntype TabElements = {\r\n    name: string;\r\n    disable: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabbedPane = (props: TabbedPaneProps) => {\r\n    const [activeNo, setActiveNo] = useState(props.activeNo);\r\n\r\n    useEffect(() => {\r\n        setActiveNo(props.activeNo);\r\n    }, [props.activeNo]);\r\n\r\n    // タブ押下時の処理\r\n    const selectTabIndex = (index: number) => {\r\n        if (props.selectTabIndex !== undefined) {\r\n            props.selectTabIndex(index);\r\n        } else {\r\n            setActiveNo(index);\r\n        }\r\n    };\r\n\r\n    const tabList: JSX.Element[] = [];\r\n    const contList: JSX.Element[] = [];\r\n    props.tabElements.forEach((tab, index) => {\r\n        tabList.push(\r\n            <TabLabel\r\n                key={index} name={tab.name} isActive={index == activeNo} isDisable={tab.disable}\r\n                selectTab={() => selectTabIndex(index)}\r\n            />)\r\n            ;\r\n        contList.push(\r\n            <TabContents key={index} cont={tab.cont} isActive={index == activeNo} />\r\n        );\r\n    });\r\n    return (\r\n        <div id={props.groupName}>\r\n            <div className=\"tab-list\">\r\n                {tabList}\r\n            </div>\r\n            <div className=\"cont-list\">\r\n                {contList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabLabelProps = {\r\n    name: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    selectTab: Function;\r\n}\r\n\r\nconst TabLabel = (props: TabLabelProps) => {\r\n    const classValues = [];\r\n    classValues.push('tab-menu');\r\n    classValues.push(props.isActive ? 'active' : '');\r\n    classValues.push(props.isDisable ? 'tab-disable' : '');\r\n    return (\r\n        <div className={classValues.join(' ')} onClick={() => props.selectTab()}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype TabContentsProps = {\r\n    isActive: boolean;\r\n    cont: JSX.Element;\r\n}\r\n\r\nconst TabContents = (props: TabContentsProps) => {\r\n    if(!props.isActive) {\r\n        return (<></>);\r\n    }\r\n    return (\r\n        <div className=\"tab-cont\">\r\n            {props.cont}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabbedPane;","import { SymbolKey, SYMBOL_PARAMS_LIST } from 'contents/common/define'\r\nimport { Sampler } from 'tone'\r\nimport { ActionType } from './reducer'\r\n\r\nexport type Store = {\r\n    scoreTabIndex: number;\r\n    noteData: NoteData;\r\n    noteState: NoteState;\r\n    reffers: Reffers;\r\n    sampler: Sampler;\r\n    soundUseList: number[];\r\n}\r\n\r\nexport type ScoreCache = {\r\n    reffer?: HTMLDivElement;\r\n    init: DetailInit;\r\n    progress: ScoreProgress;\r\n}\r\n\r\n/**\r\n * 譜面の進捗情報を管理するタイプ。\r\n */\r\n export type ScoreProgress = {\r\n    /** 連番 */\r\n    no: number;\r\n    /** 小節の合計 */\r\n    barCount: number;\r\n    /** 余りの拍 */\r\n    remaindBeat: number;\r\n    /** 小節頭が訪れる時間（ミリ秒） */\r\n    headMSec: number;\r\n}\r\n\r\nexport type Reffers = {\r\n    contextMneu: HTMLDivElement;\r\n    chordPalette: HTMLDivElement;\r\n    sectionPalette: HTMLDivElement;\r\n    initPalette: HTMLDivElement;\r\n    backingPalette: HTMLDivElement;\r\n}\r\n\r\nexport enum FloatWndState {\r\n    NONE = 'NONE',\r\n    CONTEXT_MENU = 'CONTEXT_MENU',\r\n    CHORD_PALETTE = 'CHORD_PALETTE',\r\n    SECTION_PALETTE = 'SECTION_PALETTE',\r\n    INIT_PALETTE = 'INIT_PALETTE',\r\n    BACKING_PALETTE = 'BACKING_PALETTE',\r\n}\r\nexport type ChordPaletteState = {\r\n    isAddition: boolean;\r\n    selectedLine: ChordPaletteLine,\r\n    rootIndex: number;\r\n    isFlat: false;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n}\r\nexport enum ChordPaletteLine {\r\n    Root, Symbol, Sustain\r\n}\r\n\r\nexport type BackingEditorState = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n    selectedLenIndex: number;\r\n    sideIndex: number;\r\n    selectedChannelIndex: number;\r\n    isCorrect: boolean;\r\n}\r\nexport type ChannelParam = {\r\n    octave: number;\r\n    structIndex: number;\r\n}\r\nexport type BackingLayer = {\r\n    side: BACKING_SIDE;\r\n    lens: BackingLen[];\r\n    table: boolean[][][];\r\n    vels: number[];\r\n}\r\nexport enum BACKING_SIDE {\r\n    LEFT = 'LEFT',\r\n    RIGHT = 'RIGHT'\r\n}\r\n\r\nexport type BackingLen = {\r\n    len: BACKING_LEN_TYPE;\r\n    isHalf: boolean;\r\n    isDiv3: boolean;\r\n}\r\n\r\nexport enum BACKING_LEN_TYPE {\r\n    LEN16 = 'LEN16',\r\n    LEN8 = 'LEN8',\r\n    LEN4 = 'LEN4',\r\n    LEN2 = 'LEN2',\r\n    LEN1 = 'LEN1',\r\n}\r\n\r\n\r\nexport type NoteData = {\r\n    scoreName: string;\r\n    chordMode: CHORD_MODE;\r\n    dataList: NoteElement[];\r\n}\r\n\r\n/**\r\n * 譜面の入力モードを定義\r\n */\r\nexport enum CHORD_MODE {\r\n    /** 音階コード入力 */\r\n    SCALE = 'SCALE',\r\n    /** 直接コード入力 */\r\n    DIRECT = 'DIRECT'\r\n}\r\n\r\nexport type NoteState = {\r\n    focusIndex: number;\r\n    cacheList: ScoreCache[];\r\n    criteriaIndex: number;\r\n    editMode: EditMode;\r\n    selectedList: number[];\r\n    floatwndState: FloatWndState;\r\n    chordPaletteState: ChordPaletteState;\r\n    backingPaletteState: BackingEditorState;\r\n    backingThreads: NodeJS.Timeout[];\r\n}\r\n\r\nexport enum EditMode {\r\n    NORMAL,\r\n    BACKING,\r\n    PREVIEW,\r\n}\r\n\r\nexport type DetailInit = {\r\n    tempo: number;\r\n    rythm: string;\r\n    keyIndex: number;\r\n    scale: string;\r\n}\r\n\r\nexport type DetailSection = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailChord = {\r\n    degreeIndex: number;\r\n    isFlat: boolean;\r\n    symbolKey: SymbolKey;\r\n    sustain: number;\r\n    backing: BackingScript;\r\n}\r\n\r\nexport type BackingScript = {\r\n    useChannels: ChannelParam[];\r\n    layers: BackingLayer[];\r\n    isUsePedal: boolean;\r\n}\r\n\r\nexport type DetailFixed = {\r\n    label: string;\r\n}\r\n\r\nexport type DetailModulation = {\r\n\r\n}\r\n\r\nexport type NoteElement = {\r\n    type: TypeNoteElement;\r\n    detail: DetailInit | DetailSection | DetailChord | DetailModulation | DetailFixed;\r\n}\r\n\r\n/**\r\n * ノート要素の種類を定義します。\r\n */\r\nexport enum TypeNoteElement {\r\n    /** 初期値 */\r\n    Init = 'init',\r\n    /** セクション */\r\n    Section = 'section',\r\n    /** コード */\r\n    Chord = 'chord',\r\n    /** 転調 */\r\n    Modulation = 'modulation',\r\n    /** 固定要素 */\r\n    Fixed = 'fixed'\r\n}\r\n\r\n/**\r\n * ディスパッチメソッドに指定するオブジェクトを定義します。\r\n */\r\nexport type Action = {\r\n    type: ActionType;\r\n    payload: any;\r\n}\r\n\r\n/**\r\n * ステートの初期値\r\n */\r\nexport const initialState: Store = {\r\n    scoreTabIndex: 0,\r\n    noteData: { scoreName: '', chordMode: CHORD_MODE.SCALE, dataList: [] },\r\n    noteState: {\r\n        focusIndex: -1,\r\n        cacheList: [],\r\n        criteriaIndex: -1,\r\n        editMode: EditMode.NORMAL,\r\n        selectedList: [],\r\n        floatwndState: FloatWndState.NONE,\r\n        chordPaletteState: {\r\n            isAddition: false,\r\n            selectedLine: ChordPaletteLine.Root,\r\n            rootIndex: 0,\r\n            isFlat: false,\r\n            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n            sustain: 4\r\n        },\r\n        backingPaletteState: {\r\n            useChannels: [],\r\n            isUsePedal: false,\r\n            sideIndex: 0,\r\n            selectedLenIndex: 0,\r\n            selectedChannelIndex: -1,\r\n            layers: [],\r\n            isCorrect: true\r\n        },\r\n        backingThreads: []\r\n    },\r\n    reffers: {} as Reffers,\r\n    sampler: initSampler(),\r\n    soundUseList: new Array(88)\r\n};\r\n\r\nfunction initSampler() {\r\n    return new Sampler({\r\n        \"E2\": \"https://dl.dropbox.com/s/0aghs80w9aggubw/KEPSREC040.mp3?dl=0\",\r\n        \"E3\": \"https://dl.dropbox.com/s/wxtf0u0ly03hu44/KEPSREC052.mp3?dl=0\",\r\n        \"A#3\": \"https://dl.dropbox.com/s/hbm9d1vo5tlxymk/KEPSREC058.mp3?dl=0\",\r\n        \"E4\": \"https://dl.dropbox.com/s/3qy88udfkzmzr13/KEPSREC064.mp3?dl=0\",\r\n        \"E5\": \"https://dl.dropbox.com/s/tdjp24r9pfoi2ff/KEPSREC076.mp3?dl=0\",\r\n        \"E6\": \"https://dl.dropbox.com/s/onp7h2vn2d6nhs7/KEPSREC088.mp3?dl=0\",\r\n    }).toDestination();\r\n}","\r\nimport { Store, Action, TypeNoteElement, DetailChord, DetailSection, BackingLayer, BACKING_SIDE, ChannelParam, BACKING_LEN_TYPE, ScoreCache } from './store'\r\n\r\n/**\r\n * ディスパッチメソッドの処理種別を定義します。\r\n */\r\nexport enum ActionType {\r\n    SELECT_SCORETAB = 'SELECT_SCORETAB',\r\n    ADD_SECTION = 'ADD_SECTION',\r\n    SET_DEGREE_INDEX = 'SET_DEGREE_INDEX',\r\n    SET_SYMBOL_KEY = 'SET_SYMBOL_KEY',\r\n    DETAIL_PARAMS_SETTER = 'DETAIL_PARAMS_SETTER',\r\n    GET_ELEMENT_REFFER = 'GET_ELEMENT_REFFER',\r\n    INIT_DEFAULT_ELEMENTS = 'INIT_DEFAULT_ELEMENTS',\r\n    SELECT_NOTE_ELEMENT = 'SELECT_NOTE_ELEMENT',\r\n    GET_REFFER = 'GET_REFFER',\r\n    GET_REFFER_CONTEXT = 'GET_REFFER_CONTEXT',\r\n    GET_REFFER_CHORD_PALETTE = 'GET_REFFER_CHORD_PALETTE',\r\n    GET_REFFER_SECTION_PALETTE = 'GET_REFFER_SECTION_PALETTE',\r\n    GET_REFFER_BACKING_PALETTE = 'GET_REFFER_BACKING_PALETTE',\r\n    FLOATWND_STATE = 'FLOATWND_STATE',\r\n    CHORD_PALETTE_SETTER = 'CHORD_PALETTE_SETTER',\r\n    SET_NOTE_DATA = 'SET_NOTE_DATA',\r\n    SET_DATA_LIST = 'SET_DATA_LIST',\r\n    SET_NOTE_STATE = 'SET_NOTE_STATE',\r\n    INIT_BACKING_PALETTE = 'INIT_BACKING_PALETTE',\r\n    SET_USE_CHANNELS = 'SET_USE_CHANNELS',\r\n    BACKING_TOGGLE_MATRIX = 'BACKING_TOGGLE_MATRIX'\r\n}\r\n\r\nexport const reducer = (state: Store, action: Action): Store => {\r\n    const type: ActionType = action.type;\r\n    const payload: any = action.payload;\r\n    switch (type) {\r\n        case ActionType.SELECT_SCORETAB:\r\n            return { ...state, scoreTabIndex: payload.index };\r\n        case ActionType.ADD_SECTION: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.label = 'Section';\r\n            dataList.splice(payload.index + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_DEGREE_INDEX: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.degreeIndex = payload.degreeIndex;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_SYMBOL_KEY: {\r\n            const detail = state.noteData.dataList[payload.pos].detail as DetailChord;\r\n            detail.symbolKey = payload.symbolKey;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: state.noteData.dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_DEFAULT_ELEMENTS: {\r\n            // const dataList = state.noteData.dataList;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: [\r\n                        {\r\n                            type: TypeNoteElement.Init,\r\n                            detail: {\r\n                                tempo: 81,\r\n                                rythm: '4/4',\r\n                                keyIndex: 0,\r\n                                scale: 'major'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'START'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Section,\r\n                            detail: {\r\n                                label: 'Section'\r\n                            }\r\n                        },\r\n                        {\r\n                            type: TypeNoteElement.Fixed,\r\n                            detail: {\r\n                                label: 'END'\r\n                            }\r\n                        },\r\n                    ]\r\n                },\r\n                noteState: {\r\n                    ...state.noteState, cacheList: [{} as ScoreCache, {} as ScoreCache, {} as ScoreCache, {} as ScoreCache]\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SELECT_NOTE_ELEMENT: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, focusIndex: payload.index\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CONTEXT: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, contextMneu: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_CHORD_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, chordPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_SECTION_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, sectionPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER_BACKING_PALETTE: {\r\n            return {\r\n                ...state, reffers: { ...state.reffers, backingPalette: payload.reffer }\r\n            };\r\n        }\r\n        case ActionType.FLOATWND_STATE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, floatwndState: payload.state\r\n                }\r\n            };\r\n        }\r\n        case ActionType.CHORD_PALETTE_SETTER: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, chordPaletteState: payload.params\r\n                }\r\n            };\r\n        }\r\n        case ActionType.DETAIL_PARAMS_SETTER: {\r\n            const dataList = state.noteData.dataList.slice();\r\n            const data = dataList[payload.pos];\r\n            data.detail = payload.params;\r\n            return {\r\n                ...state, noteData: {\r\n                    ...state.noteData, dataList: dataList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.GET_REFFER: {\r\n            return {\r\n                ...state, reffers: payload.reffers\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_DATA: {\r\n            return {\r\n                ...state, noteData: payload.data\r\n            };\r\n        }\r\n        case ActionType.SET_DATA_LIST: {\r\n            return {\r\n                ...state, noteData: { ...state.noteData, dataList: payload.dataList }\r\n            };\r\n        }\r\n        case ActionType.SET_NOTE_STATE: {\r\n            return {\r\n                ...state, noteState: payload.noteState\r\n            };\r\n        }\r\n        case ActionType.GET_ELEMENT_REFFER: {\r\n            const cache = state.noteState.cacheList[payload.pos];\r\n            cache.reffer = payload.reffer;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, cacheList: state.noteState.cacheList\r\n                }\r\n            };\r\n        }\r\n        case ActionType.INIT_BACKING_PALETTE: {\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: payload.backingPaletteState\r\n                }\r\n            };\r\n        }\r\n        case ActionType.SET_USE_CHANNELS: {\r\n            const backingPaletteState = state.noteState.backingPaletteState;\r\n            const baseScript = backingPaletteState.layers;\r\n            const useChannels = payload.useChannels as ChannelParam[];\r\n            const script: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseScript[i].lens.length;\r\n                const baseTable = baseScript[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                script[i] = {\r\n                    ...baseScript[i],\r\n                    table,\r\n                };\r\n            }\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState,\r\n                        useChannels,\r\n                        layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionType.BACKING_TOGGLE_MATRIX: {\r\n            const sideIndex: number = payload.sideIndex;\r\n            const lenIndex: number = payload.lenIndex;\r\n            const channelIndex: number = payload.channelIndex;\r\n            const divIndex: number = payload.divIndex;\r\n            const script = state.noteState.backingPaletteState.layers;\r\n            script[sideIndex].table[channelIndex][lenIndex][divIndex] = payload.isUse;\r\n            // script[sideIndex].table[channelIndex] = line;\r\n            return {\r\n                ...state, noteState: {\r\n                    ...state.noteState, backingPaletteState: {\r\n                        ...state.noteState.backingPaletteState, layers: script\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, KEY12_SHARP_LIST, SCALE_LIST, SymbolKey, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { DetailChord, DetailFixed, DetailInit, DetailModulation, DetailSection, CHORD_MODE, NoteElement, TypeNoteElement, ScoreProgress } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\n\r\ntype ScoreElementDetailProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\nconst ScoreElementDetail = (props: ScoreElementDetailProps) => {\r\n\r\n    const { state, dispatcher } = useContext(GlobalContext);\r\n\r\n    const chordMode = state.noteData.chordMode;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    switch (props.noteElement.type) {\r\n        case TypeNoteElement.Fixed: {\r\n            const detail = props.noteElement.detail as DetailFixed;\r\n            return (\r\n                <span>{detail.label}</span>\r\n            );\r\n        }\r\n        case TypeNoteElement.Init: {\r\n            const detail = props.noteElement.detail as DetailInit;\r\n            const paramLabels: JSX.Element[] = [];\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Tempo: </span>\r\n                    <span>{detail.tempo}</span>\r\n                </div>\r\n            );\r\n            paramLabels.push(\r\n                <div key={paramLabels.length}>\r\n                    <span>Beat: </span>\r\n                    <span>{detail.rythm}</span>\r\n                </div>\r\n            );\r\n            if (chordMode == CHORD_MODE.SCALE) {\r\n                if (state.noteData.chordMode == CHORD_MODE.SCALE) {\r\n                    paramLabels.push(\r\n                        <div key={paramLabels.length}>\r\n                            <span>Key: </span>\r\n                            {/* <span>{detail.key}</span> */}\r\n                            <span>{\r\n                                detail.scale == SCALE_LIST[0] ?\r\n                                    KEY12_MAJOR_SCALE_LIST[detail.keyIndex] :\r\n                                    KEY12_MINOR_SCALE_LIST[detail.keyIndex]\r\n                            }</span>\r\n                        </div>\r\n                    );\r\n                    paramLabels.push(\r\n                        <div key={paramLabels.length}>\r\n                            <span>Scale: </span>\r\n                            <span>{detail.scale}</span>\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    {paramLabels}\r\n                </div>\r\n            );\r\n        }\r\n        case TypeNoteElement.Chord: {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n\r\n            /**　ディグリーネームを返す */\r\n            const getDegreeRoot = (index: number): string => {\r\n                let name = 'blank';\r\n                if (index != -1) {\r\n                    const list = detail.isFlat ? DEGREE12_FLAT_LIST : DEGREE12_SHARP_LIST;\r\n                    name = list[index];\r\n                }\r\n                return name;\r\n            }\r\n            /**　コードネームを返す */\r\n            const getChordName = (): string => {\r\n                const degreeIndex = detail.degreeIndex;\r\n                let name = '-';\r\n                if (degreeIndex != -1) {\r\n                    const keyIndex = cache.init.keyIndex;\r\n                    const list = detail.isFlat ? KEY12_FLAT_LIST : KEY12_SHARP_LIST;\r\n                    name = list[(degreeIndex + keyIndex) % 12];\r\n                }\r\n                return name;\r\n            }\r\n            /**　シンボルを返す */\r\n            const getSymbol = (index: number, symbolKey: SymbolKey): string => {\r\n                let name = '';\r\n                if (index != -1) {\r\n                    SYMBOL_PARAMS_LIST.forEach((symbol) => {\r\n                        if (symbol.key == symbolKey) {\r\n                            name = symbol.name;\r\n                        }\r\n                    });\r\n                }\r\n                return name;\r\n            }\r\n\r\n            const degreeRoot = getDegreeRoot(detail.degreeIndex);\r\n            const chordName = getChordName();\r\n            const symbolName = getSymbol(detail.degreeIndex, detail.symbolKey);\r\n            const isDiatonic = DIATONIC_MAJOR_SCALE_DEGREE_NAMES.includes(degreeRoot + symbolName);\r\n            const sustainJsx = [];\r\n            for (let i = 0; i < detail.sustain; i++) {\r\n                sustainJsx.push(<span key={i}></span>);\r\n            }\r\n            const barCount = cache.progress.barCount;\r\n            const remaindBeat = cache.progress.remaindBeat;\r\n            const headMSec = Math.round(cache.progress.headMSec / 1000 * 10) / 10;\r\n            // alert(detail.degreeIndex);\r\n            const notesCount = dispatcher.backing.getNotesCount(detail.backing);\r\n            return (\r\n                <>\r\n                    <div className={\r\n                        'degree'\r\n                        + (detail.degreeIndex == -1 ? ' blank' : '')\r\n                        + (isDiatonic ? ' diatonic' : '')\r\n                        + (state.noteData.chordMode == CHORD_MODE.DIRECT ? ' visible' : '')}>\r\n                        <span>{degreeRoot}{symbolName}</span>\r\n                    </div>\r\n                    <div className={state.noteData.chordMode == CHORD_MODE.DIRECT ? 'degree' : 'chord'}>\r\n                        <span>{chordName}{symbolName}</span>\r\n                    </div>\r\n                    <div className=\"sustain\">\r\n                        {sustainJsx}\r\n                    </div>\r\n                    <div className=\"progress-sustain\">\r\n                        <span className=\"bar\">{barCount != -1 ? barCount : ''}</span>\r\n                        <span className=\"beat\">{remaindBeat != -1 ? remaindBeat : ''}</span>\r\n                    </div>\r\n                    <div className=\"progress-time\">\r\n                        <span>{headMSec}s</span>\r\n                    </div>\r\n                    <div\r\n                        className={\r\n                            'backing-script' +\r\n                            (notesCount == 0 ? ' hidden' : '')\r\n                        }\r\n                    >\r\n                        <span>notes: {notesCount}</span>\r\n                    </div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Section: {\r\n            const detail = props.noteElement.detail as DetailSection;\r\n            return (\r\n                <>\r\n                    <div className=\"name\"><span>{detail.label}</span></div>\r\n                    <div className=\"border\"></div>\r\n                </>\r\n            );\r\n        }\r\n        case TypeNoteElement.Modulation: {\r\n            const detail = props.noteElement.detail as DetailModulation;\r\n            return (\r\n                <></>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ScoreElementDetail;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, DIATONIC_MAJOR_SCALE_DEGREE_NAMES, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport { TypeNoteElement, DetailFixed, DetailSection, DetailInit, DetailChord, DetailModulation, NoteElement, FloatWndState, Store, CHORD_MODE, EditMode } from 'contents/redux/store';\r\nimport React, { useContext, useEffect, useState, KeyboardEvent, useRef, MouseEvent } from 'react';\r\nimport ScoreElementDetail from './detail/ScoreElementDetail';\r\nimport './ScoreElement.css';\r\n\r\ntype ScoreElementProps = {\r\n    index: number;\r\n    noteElement: NoteElement;\r\n}\r\n\r\n// type ScoreElementProps = {\r\n//     index: number;\r\n//     type: TypeNoteElement;\r\n//     progress: ProgressInfo;\r\n// }\r\nconst ScoreElement = (props: ScoreElementProps) => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const isAccept = props.index < state.noteData.dataList.length;\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        if (isAccept) {\r\n            dispatch(ActionType.GET_ELEMENT_REFFER, { pos: props.index, reffer: ref.current });\r\n        }\r\n    }, [state.noteData.dataList]);\r\n\r\n    if (!isAccept) {\r\n        return (<></>);\r\n    }\r\n\r\n    const type = props.noteElement.type;\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormalMode = state.noteState.editMode == EditMode.NORMAL;\r\n    const cache = state.noteState.cacheList[props.index];\r\n\r\n    const getStyleFromType = (): string => {\r\n        switch (type) {\r\n            case TypeNoteElement.Fixed: return 'detail-fixed';\r\n            case TypeNoteElement.Init: return 'detail-init';\r\n            case TypeNoteElement.Chord: return 'detail-chord';\r\n            case TypeNoteElement.Section: return 'detail-section';\r\n            case TypeNoteElement.Modulation: return 'detail-modulation';\r\n        }\r\n    };\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const isSelected = focusIndex == props.index;\r\n    const isCriteria = state.noteState.criteriaIndex == props.index;\r\n    /**\r\n     * 要素が選択中のセクション内かどうかを返す\r\n     * @returns 判定結果\r\n     */\r\n    const isCurrentSection = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const posList: number[] = [dataList.length];\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            posList[i] = secNo;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        // const isChordEl = dataList[props.index].type == TypeNoteElement.Chord;\r\n        const isCurrentSec = posList[props.index] == curSecNo && type != TypeNoteElement.Fixed;\r\n        return isCurrentSec;\r\n    }\r\n\r\n    /**\r\n * コピー対象スタイルを返す\r\n * @returns コピー対象スタイル\r\n */\r\n    const getCopyTargetStyle = (): string => {\r\n        if (editMode != EditMode.BACKING) return '';\r\n\r\n        if (type == TypeNoteElement.Chord) {\r\n            const detail = props.noteElement.detail as DetailChord;\r\n            const isSameStructType = detail.degreeIndex != -1;\r\n            if (isSameStructType) {\r\n                if (state.noteState.selectedList.includes(props.index)) {\r\n                    return 'copy-selected';\r\n                }\r\n                return 'copy-tgt';\r\n            } else {\r\n                return 'copy-no-tgt';\r\n            }\r\n        } else {\r\n            return 'copy-no-tgt';\r\n        }\r\n    }\r\n\r\n    const getHeaderElement = (): JSX.Element => {\r\n        let retJsxList: JSX.Element[] = [];\r\n\r\n        if ([TypeNoteElement.Chord, TypeNoteElement.Section, TypeNoteElement.Modulation].includes(type)) {\r\n\r\n            if (TypeNoteElement.Chord == type) {\r\n\r\n                retJsxList.push(\r\n                    <div key={retJsxList.length} className=\"chord-no\">\r\n                        <span>{cache.progress.no}</span>\r\n                    </div>\r\n                );\r\n            }\r\n            retJsxList.push(\r\n                //  <div className=\"edit\">\r\n                //         <span>E</span>\r\n                //     </div> \r\n                <div\r\n                    key={retJsxList.length}\r\n                    className={\r\n                        'del' +\r\n                        (editMode == EditMode.NORMAL ? '' : ' hidden')\r\n                    }\r\n                    onClick={() => {\r\n                        dispatcher.score.deleteElement(props.index);\r\n                    }}\r\n                >\r\n                    <span>×</span>\r\n                </div >\r\n            );\r\n        }\r\n        return (<>\r\n            {retJsxList}\r\n        </>);\r\n    }\r\n\r\n    /**\r\n     * 通常モード時、要素をクリックした際のイベント\r\n     */\r\n    const normalElementClickAction = () => {\r\n        const element: NoteElement = state.noteData.dataList[props.index];\r\n        if (element.type != TypeNoteElement.Fixed) {\r\n            dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n        }\r\n    }\r\n    /**\r\n     * セレクタモード時、要素をクリックした際のイベント\r\n     */\r\n    const selectorElementClickAction = () => {\r\n        const selectedList = state.noteState.selectedList;\r\n        if (!selectedList.includes(props.index)) {\r\n            selectedList.push(props.index);\r\n        } else {\r\n            selectedList.some((index, i) => {\r\n                if (index == props.index) selectedList.splice(i, 1);\r\n            });\r\n        }\r\n        dispatcher.score.setSelectedList(selectedList);\r\n    }\r\n\r\n    // 追加「＋」ボタン\r\n    let additionBtn: JSX.Element = <></>;\r\n    if (props.index == state.noteData.dataList.length - 2) {\r\n        additionBtn = (\r\n            <div\r\n                className={\r\n                    'addition' +\r\n                    (editMode == EditMode.NORMAL ? '' : ' disable')\r\n                }\r\n                onClick={() => {\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index });\r\n                    dispatcher.score.addChordElement();\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: props.index + 1 });\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            isAddition: true,\r\n                            rootIndex: 0,\r\n                            isFlat: false,\r\n                            symbolKey: SYMBOL_PARAMS_LIST[0].key,\r\n                            sustain: 4,\r\n                        }\r\n                    });\r\n                }}>\r\n                <span>+</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <div className=\"info-base\">\r\n                <div className=\"header\">\r\n                    {getHeaderElement()}\r\n                </div>\r\n                <div\r\n                    className={[\r\n                        'note-element',\r\n                        getStyleFromType(),\r\n                        isSelected ? 'active' : '',\r\n                        isCriteria ? 'criteria' : '',\r\n                        [\r\n                            TypeNoteElement.Init,\r\n                            TypeNoteElement.Section,\r\n                            TypeNoteElement.Chord\r\n                        ].includes(type) ? 'selectable' : '',\r\n                        isCurrentSection() ? 'current' : '',\r\n                        getCopyTargetStyle()\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        } else {\r\n                            selectorElementClickAction();\r\n                        }\r\n                    }}\r\n                    onContextMenu={(e: MouseEvent) => {\r\n                        if (editMode == EditMode.NORMAL) {\r\n                            normalElementClickAction();\r\n                            const element: NoteElement = state.noteData.dataList[props.index];\r\n                            switch (element.type) {\r\n                                case TypeNoteElement.Init:\r\n                                    {\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.INIT_PALETTE });\r\n                                    }\r\n                                    break;\r\n                                case TypeNoteElement.Section:\r\n                                case TypeNoteElement.Chord:\r\n                                    {\r\n                                        state.reffers.contextMneu.style.left = e.clientX + 'px';\r\n                                        state.reffers.contextMneu.style.top = e.clientY + 'px';\r\n                                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CONTEXT_MENU });\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    <ScoreElementDetail\r\n                        index={props.index}\r\n                        noteElement={props.noteElement}\r\n                    />\r\n                </div >\r\n            </div >\r\n            {/* プラス「＋」ボタン */}\r\n            {additionBtn}\r\n        </div >\r\n    );\r\n\r\n};\r\n\r\nexport default ScoreElement;\r\n","\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailSection, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\ntype OutlineSectionProps = {\r\n    label: String;\r\n    index: number;\r\n}\r\nconst OutlineSection = (props: OutlineSectionProps) => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const isCurrent = (): boolean => {\r\n        const dataList = state.noteData.dataList;\r\n        const focusIndex = state.noteState.focusIndex;\r\n        let secNo = -1;\r\n        let curSecNo = -1;\r\n        dataList.forEach((el, i) => {\r\n            if (el.type == TypeNoteElement.Section) secNo++;\r\n            if (focusIndex == i) curSecNo = secNo;\r\n        });\r\n        return curSecNo == props.index;\r\n    }\r\n    return (\r\n        <div className={isCurrent() ? 'active' : ''}>\r\n            <span>{props.label}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OutlineSection;\r\n","import { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, TypeNoteElement } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport './NoteContextMenu.css';\r\n\r\nconst NoteContextMenu = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** コンテキストメニューを閉じる */\r\n    const close = () => dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, contextMneu: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CONTEXT, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const menuPropsList: MenuRecordProps[] = [];\r\n    if (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU) {\r\n        const curElement = state.noteData.dataList[state.noteState.focusIndex];\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT BLANK', keyName: 'A', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'call', label: 'INSERT CHORD', keyName: 'W', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addChordElement();\r\n                dispatch(ActionType.SELECT_NOTE_ELEMENT, { index: state.noteState.focusIndex + 1 });\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                const detail = curElement.detail as DetailChord;\r\n                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                    params: {\r\n                        ...state.noteState.chordPaletteState,\r\n                        isAddition: true,\r\n                        rootIndex: detail.degreeIndex,\r\n                        isFlat: detail.isFlat,\r\n                        symbolKey: detail.symbolKey,\r\n                        sustain: detail.sustain,\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT SECTION', keyName: 'S', disable: false,\r\n            executer: () => {\r\n                dispatcher.score.addSectionElement();\r\n                close();\r\n            }\r\n        });\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'INSERT MODULATION', keyName: 'M', disable: false,\r\n            executer: () => { }\r\n        });\r\n        switch (curElement.type) {\r\n            case TypeNoteElement.Chord: {\r\n                const detail = curElement.detail as DetailChord;\r\n                menuPropsList.push({\r\n                    menuType: 'order', label: 'BLANK CHORD', keyName: 'D', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatch(ActionType.SET_DEGREE_INDEX, { pos: state.noteState.focusIndex, degreeIndex: -1 });\r\n                        close();\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT CHORD', keyName: 'C', disable: false,\r\n                    executer: () => {\r\n                        // state.reffers.chordPalette.style.left = 50 + 'px';\r\n                        // state.reffers.chordPalette.style.top = 50 + 'px';\r\n                        dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...state.noteState.chordPaletteState,\r\n                                rootIndex: detail.degreeIndex,\r\n                                isFlat: detail.isFlat,\r\n                                symbolKey: detail.symbolKey,\r\n                                sustain: detail.sustain,\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT BACKING', keyName: 'B', disable: detail.degreeIndex == -1,\r\n                    executer: () => {\r\n                        dispatcher.score.callBackingEditor();\r\n                    }\r\n                });\r\n            }\r\n                break;\r\n            case TypeNoteElement.Section: {\r\n                menuPropsList.push({\r\n                    menuType: 'call', label: 'EDIT SECTION', keyName: 'C', disable: false,\r\n                    executer: () => { }\r\n                });\r\n            }\r\n                break;\r\n        }\r\n        menuPropsList.push({\r\n            menuType: 'order', label: 'REMOVE', keyName: 'DEL', disable: true,\r\n            executer: () => { }\r\n        });\r\n    }\r\n    const menuList: JSX.Element[] = [];\r\n    menuPropsList.forEach((data, i) => {\r\n        menuList.push(<MenuRecord\r\n            key={i}\r\n            menuType={data.menuType}\r\n            label={data.label}\r\n            keyName={data.keyName}\r\n            disable={data.disable}\r\n            executer={data.executer}\r\n        />);\r\n    });\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"note-contextmenu\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CONTEXT_MENU ? ' active' : '')}\r\n            onClick={() => {\r\n                // dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}\r\n        >\r\n            {menuList}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MenuRecordProps = {\r\n    menuType: string;\r\n    label: string;\r\n    keyName: string;\r\n    disable: boolean;\r\n    executer: Function;\r\n}\r\nconst MenuRecord = (props: MenuRecordProps) => {\r\n\r\n    return (\r\n        <div className={props.disable ? 'disable' : ''}\r\n            onClick={() => {\r\n                props.executer();\r\n            }}\r\n        >\r\n            <span className={props.menuType}>{props.label}</span>\r\n            <span className=\"key\">{`<${props.keyName} key>`}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteContextMenu;","import { DEGREE12_FLAT_LIST, DEGREE12_SHARP_LIST, KEY12_FLAT_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport TabbedPane from \"contents/common/TabbedPane\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, ChordPaletteLine, TypeNoteElement, CHORD_MODE } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\n// import styled from 'styled-components';\r\n// npm i --save-dev @types/styled-components\r\nimport './ChordEditor.css';\r\n\r\nconst ChordSelector = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    // const [degreeIndex, setDegreeIndex] = useState(0);\r\n    // const [isFlat, setFlat] = useState(false);\r\n    // const [symbolKey, setSymbolKey] = useState(SYMBOL_PARAMS_LIST[0].key);\r\n    // const [sustain, setSustain] = useState(4);\r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    const chordList: JSX.Element[] = [];\r\n    const symbolList: JSX.Element[] = [];\r\n    const beatList: JSX.Element[] = [];\r\n    let operation: JSX.Element = <></>;\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n\r\n    const editorState = state.noteState.chordPaletteState;\r\n    if (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE) {\r\n        const focusIndex = state.noteState.focusIndex;\r\n        const chordDetail = state.noteData.dataList[focusIndex].detail as DetailChord;\r\n\r\n        DEGREE12_SHARP_LIST.forEach((degS, i) => {\r\n            const baseKey = 0;\r\n            const keyIndex = (baseKey + i) % 12;\r\n            const degF = DEGREE12_FLAT_LIST[i];\r\n            const chdS = KEY12_SHARP_LIST[keyIndex];\r\n            const chdF = KEY12_FLAT_LIST[keyIndex];\r\n            const isHalf = [1, 3, 6, 8, 10].includes(i);\r\n            const isSelected = editorState.rootIndex == i;\r\n            const buildLabelSrc = (isFlat: boolean): JSX.Element => {\r\n                return (\r\n                    state.noteData.chordMode == CHORD_MODE.SCALE ?\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? degF : degS}</span>\r\n                            <span>&nbsp;(</span>\r\n                            <span className=\"chord\">{isFlat ? chdF : chdS}</span>\r\n                            <span>)</span>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <span className=\"degree\">{isFlat ? chdF : chdS}</span>\r\n                        </>\r\n                );\r\n            };\r\n            chordList.push(\r\n                <div key={i}>{\r\n                    !isHalf ?\r\n                        <div\r\n                            className={isSelected ? 'active' : ''}\r\n                            onClick={() => {\r\n                                dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                    params: {\r\n                                        ...editorState,\r\n                                        selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                    }\r\n                                });\r\n                            }}\r\n                        >\r\n                            {buildLabelSrc(false)}\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div\r\n                                className={\"half\" + (isSelected && !editorState.isFlat ? ' active' : '')}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: false\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(false)}\r\n                            </div>\r\n                            <div\r\n                                className={\"half\" + (isSelected && editorState.isFlat ? ' active' : '')}\r\n                                onClick={() => {\r\n                                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                                        params: {\r\n                                            ...editorState,\r\n                                            selectedLine: ChordPaletteLine.Root, rootIndex: i, isFlat: true\r\n                                        }\r\n                                    });\r\n                                }}\r\n                            >\r\n                                {buildLabelSrc(true)}\r\n                            </div>\r\n                        </>\r\n                }</div>\r\n            );\r\n        });\r\n\r\n        SYMBOL_PARAMS_LIST.forEach((symbol, i) => {\r\n            // const isSelected = chordDetail.degreeIndex == i;\r\n            symbolList.push(\r\n                <div\r\n                    key={i}\r\n                    className={symbol.key == editorState.symbolKey ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState,\r\n                                selectedLine: ChordPaletteLine.Symbol, symbolKey: symbol.key\r\n                            }\r\n                        });\r\n                    }}\r\n                >\r\n                    <span>[{symbol.name}]</span>\r\n                </div>\r\n\r\n            );\r\n        });\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            beatList.push(\r\n                <div\r\n                    key={i}\r\n                    className={editorState.sustain >= i + 1 ? 'active' : ''}\r\n                    onClick={() => {\r\n                        dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                            params: {\r\n                                ...editorState, selectedLine: ChordPaletteLine.Sustain, sustain: i + 1\r\n                            }\r\n                        });\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        operation = (<>\r\n            <div\r\n                onClick={() => {\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                }}>\r\n                <span>Cancel</span>\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    dispatcher.chord.setCurChordParam();\r\n                }}>\r\n                <span>Enter</span>\r\n            </div>\r\n        </>);\r\n    }\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            id=\"total-palette\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.CHORD_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <TabbedPane groupName=\"selector-tabs\"\r\n                tabElements={[\r\n                    {\r\n                        name: 'Scale', disable: isDirect, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Separate', disable: false, cont: (\r\n                            <>\r\n                                <div className={'chord-selector' + (editorState.selectedLine == ChordPaletteLine.Root ? ' active' : '')}>\r\n                                    {chordList}\r\n                                </div>\r\n                                <div className={'symbol-selector' + (editorState.selectedLine == ChordPaletteLine.Symbol ? ' active' : '')}>\r\n                                    {symbolList}\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    },\r\n                    {\r\n                        name: 'Fragment', disable: false, cont: (\r\n                            <>\r\n                            </>\r\n                        )\r\n                    }\r\n                ]}\r\n                activeNo={1}\r\n            />\r\n            <div className={'beat-selector' + (editorState.selectedLine == ChordPaletteLine.Sustain ? ' active' : '')}>\r\n                {beatList}\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ChordSelector;","import { SymbolKey, SymbolParams, SYMBOL_PARAMS_LIST } from \"./define\";\r\n\r\nexport function getSymbolParams(key: SymbolKey): SymbolParams | null {\r\n    let symbol = null;\r\n    SYMBOL_PARAMS_LIST.forEach((data) => {\r\n        if (data.key == key) {\r\n            symbol = data;\r\n        }\r\n    });\r\n    return symbol;\r\n}\r\n","\r\nimport { DEGREE12_SHARP_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from 'contents/common/define';\r\nimport { getSymbolParams } from 'contents/common/utils';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport { DetailChord, TypeNoteElement } from 'contents/redux/store';\r\nimport { useContext } from 'react';\r\nimport './CurrentElementInfo.css';\r\n\r\ntype StateRecord = {\r\n    title: string;\r\n    value: string;\r\n    disable: boolean;\r\n}\r\n\r\nconst CurrentElementInfo = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n    const focusIndex = state.noteState.focusIndex;\r\n    if (focusIndex == -1) return (<></>);\r\n\r\n    const data = state.noteData.dataList[focusIndex];\r\n    const cache = state.noteState.cacheList[focusIndex];\r\n\r\n    let inner: JSX.Element = <></>;\r\n    switch (data.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = data.detail as DetailChord;\r\n            let root = '-';\r\n            if (detail.degreeIndex != -1) {\r\n                const degreeRoot = DEGREE12_SHARP_LIST[detail.degreeIndex];\r\n                const chordRoot = KEY12_SHARP_LIST[detail.degreeIndex];\r\n                root = `${degreeRoot} (${chordRoot})`;\r\n            }\r\n            let symbolName = '-';\r\n            if (detail.symbolKey != null) {\r\n                symbolName = `[${getSymbolParams(detail.symbolKey)?.name as string}]`;\r\n            }\r\n\r\n            const stateRecordList: StateRecord[] = [];\r\n            stateRecordList.push({ title: 'Tempo', value: '' + cache.init.tempo, disable: false });\r\n            stateRecordList.push({ title: 'Rythm', value: cache.init.rythm, disable: false });\r\n            stateRecordList.push({ title: 'Key', value: 'C', disable: false });\r\n            stateRecordList.push({ title: 'Scale', value: 'major', disable: false });\r\n            stateRecordList.push({ title: 'Root', value: root, disable: root == '-' });\r\n            stateRecordList.push({ title: 'Symbol', value: symbolName, disable: symbolName == '-' });\r\n            stateRecordList.push({ title: 'Sustain', value: detail.sustain + '', disable: false });\r\n            const stateList: JSX.Element[] = [];\r\n            stateRecordList.forEach((state, i) => {\r\n                stateList.push(\r\n                    <div\r\n                        key={i}\r\n                        className={\r\n                            'record' +\r\n                            (state.disable ? ' disable' : '')\r\n                        }>\r\n                        <div className=\"title\"><span>{state.title}:</span></div>\r\n                        <div className=\"value\"><span>{state.value}</span></div>\r\n                    </div>\r\n                );\r\n            });\r\n\r\n            const structList: JSX.Element[] = [];\r\n            if (detail.symbolKey != null) {\r\n                const symbol = getSymbolParams(detail.symbolKey);\r\n                const list = symbol?.intervals;\r\n                const len = list?.length as number;\r\n                for (let i = 0; i < 7; i++) {\r\n                    if (i < len) {\r\n                        const interval = symbol?.intervals[i] as number;\r\n                        const struct = symbol?.struct[i];\r\n                        const sound = KEY12_SHARP_LIST[(detail.degreeIndex + interval) % 12];\r\n                        structList.push(\r\n                            <div key={i} className=\"record\">\r\n                                <div className=\"interval\"><span>{interval}</span></div>\r\n                                <div className=\"struct\"><span>{struct}</span></div>\r\n                                <div className=\"sound\"><span>{sound}</span></div>\r\n                            </div>\r\n                        );\r\n                    } else {\r\n                        structList.push(\r\n                            <div key={i} className=\"record disable\">\r\n                                <div className=\"interval\"></div>\r\n                                <div className=\"struct\"></div>\r\n                                <div className=\"sound\"></div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                };\r\n            }\r\n\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'chord'\r\n                    }\r\n                >\r\n                    <div>\r\n                        <div className=\"title\">\r\n                            <span>Current State</span>\r\n                        </div>\r\n                        <div className=\"current-state\">\r\n                            {stateList}\r\n                        </div>\r\n                        <div className=\"title\">\r\n                            <span>Chord Struct</span>\r\n                        </div>\r\n                        <div className=\"symbol-struct\">\r\n                            {structList}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n        case TypeNoteElement.Section: {\r\n            // const stateRecordList: StateRecord[] = [];\r\n            // stateRecordList.push({ title: 'Tempo', value: '80', disable: false });\r\n            // stateRecordList.push({ title: 'Rythm', value: '4/4', disable: false });\r\n            // stateRecordList.push({ title: 'Key', value: 'C', disable: false });\r\n            // stateRecordList.push({ title: 'Scale', value: 'major', disable: false });\r\n            // const stateList: JSX.Element[] = [];\r\n            // stateRecordList.forEach((state, i) => {\r\n            //     stateList.push(\r\n            //         <div\r\n            //             key={i}\r\n            //             className={\r\n            //                 'record' +\r\n            //                 (state.disable ? ' disable' : '')\r\n            //             }>\r\n            //             <div className=\"title\"><span>{state.title}:</span></div>\r\n            //             <div className=\"value\"><span>{state.value}</span></div>\r\n            //         </div>\r\n            //     );\r\n            // });\r\n            inner = (\r\n                <div\r\n                    className={\r\n                        'section'\r\n                    }\r\n                >\r\n\r\n                    {/* <div>\r\n                        <div className=\"title\">\r\n                            <span>Current State</span>\r\n                        </div>\r\n                        <div className=\"current-state\">\r\n                            {stateList}\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            )\r\n        }\r\n            break;\r\n    }\r\n    return (\r\n        <div id=\"current-detail\">\r\n            {inner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentElementInfo;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE } from \"contents/redux/store\";\r\n\r\n\r\ntype BackingOperationProps ={\r\n    dispatcher: Dispatcher;\r\n    paletteState: BackingEditorState;\r\n}\r\n\r\ntype ButtonBean = {\r\n    label: string;\r\n    isActive: boolean;\r\n    isDisable: boolean;\r\n    callback: Function;\r\n}\r\n\r\nconst BackingOperation = (props: BackingOperationProps) => {\r\n\r\n    const dispatcher = props.dispatcher;\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const curLenBean = curSideScript.lens[selectedLenIndex];\r\n    const curVolume = curSideScript.vels[selectedLenIndex];\r\n\r\n    const setCurrentLenBean = (lenBean: BackingLen) => {\r\n        const script = paletteState.layers;\r\n        script[sideIndex].lens[selectedLenIndex] = lenBean;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n    const setCurrentLen = (lenType: BACKING_LEN_TYPE) => {\r\n        curLenBean.len = lenType;\r\n        curLenBean.isHalf = false;\r\n        curLenBean.isDiv3 = false;\r\n        setCurrentLenBean(curLenBean);\r\n    };\r\n    const updateCurrentVolume = (sub: number) => {\r\n        const script = paletteState.layers;\r\n        const nowVol = script[sideIndex].vels[selectedLenIndex];\r\n        script[sideIndex].vels[selectedLenIndex] = nowVol + sub;\r\n        dispatcher.initBackingPalette({\r\n            ...paletteState,\r\n            layers: script\r\n        });\r\n    };\r\n\r\n    const curLen = curLenBean.len;\r\n    const buttons: ButtonBean[] = [\r\n        {\r\n            label: '16',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN16,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN16); }\r\n        },\r\n        {\r\n            label: '8',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN8,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN8); }\r\n        },\r\n        {\r\n            label: '4',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN4,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN4); }\r\n        },\r\n        {\r\n            label: '2',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN2,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN2); }\r\n        },\r\n        {\r\n            label: '1',\r\n            isActive: curLen == BACKING_LEN_TYPE.LEN1,\r\n            isDisable: false,\r\n            callback: () => { setCurrentLen(BACKING_LEN_TYPE.LEN1); }\r\n        },\r\n        {\r\n            label: '.',\r\n            isActive: curLenBean.isHalf,\r\n            isDisable: !dispatcher.backing.isAcceptHalf(),\r\n            callback: () => {\r\n                curLenBean.isHalf = !curLenBean.isHalf;\r\n                curLenBean.isDiv3 = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: '/ 3',\r\n            isActive: curLenBean.isDiv3,\r\n            isDisable: !dispatcher.backing.isAcceptDiv3(),\r\n            callback: () => {\r\n                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                curLenBean.isHalf = false;\r\n                setCurrentLenBean(curLenBean);\r\n            }\r\n        },\r\n        {\r\n            label: 'Add',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                dispatcher.backing.addLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'Del',\r\n            isActive: false,\r\n            isDisable: curSideScript.lens.length <= 1,\r\n            callback: () => {\r\n                dispatcher.backing.delLen();\r\n            }\r\n        },\r\n        {\r\n            label: 'vel-',\r\n            isActive: false,\r\n            isDisable: curVolume <= 1,\r\n            callback: () => {\r\n                updateCurrentVolume(-1);\r\n            }\r\n        },\r\n        {\r\n            label: 'vel+',\r\n            isActive: false,\r\n            isDisable: curVolume >= 10,\r\n            callback: () => {\r\n                updateCurrentVolume(1);\r\n            }\r\n        },\r\n        {\r\n            label: 'all clear',\r\n            isActive: false,\r\n            isDisable: false,\r\n            callback: () => {\r\n                const backingState: BackingEditorState = {\r\n                    useChannels: [],\r\n                    isUsePedal: false,\r\n                    sideIndex: 0,\r\n                    selectedLenIndex: 0,\r\n                    selectedChannelIndex: -1,\r\n                    layers: [\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.LEFT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        },\r\n                        {\r\n                            lens: [{\r\n                                len: BACKING_LEN_TYPE.LEN4,\r\n                                isDiv3: false,\r\n                                isHalf: false\r\n                            }],\r\n                            side: BACKING_SIDE.RIGHT,\r\n                            table: [],\r\n                            vels: [5]\r\n                        }\r\n                    ],\r\n                    isCorrect: true\r\n                };\r\n                dispatcher.initBackingPalette(backingState);\r\n            }\r\n        }\r\n    ];\r\n    const buttonList: JSX.Element[] = [];\r\n    buttons.forEach((button, i) => {\r\n        buttonList.push(\r\n            <button\r\n                key={i}\r\n                className={\r\n                    (button.isActive ? 'active' : '') +\r\n                    (button.isDisable ? ' disable' : '')\r\n                }\r\n                onClick={() => button.callback()}\r\n            >\r\n                <span>{button.label}</span>\r\n            </button>\r\n        );\r\n    });\r\n\r\n    return (<>{buttonList}</>);\r\n}\r\n\r\nexport default BackingOperation;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingLen, BackingLayer, BackingEditorState, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\nimport { useContext } from \"react\";\r\nimport { BackingContext } from \"./BackingEditor\";\r\nimport { ChannelBean } from \"./BackingTable\";\r\n\r\ntype NotesMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    channelList: ChannelBean[];\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nconst NotesMatrix = (props: NotesMatrixProps) => {\r\n\r\n    const { setCorrect } = useContext(BackingContext);\r\n\r\n    const paletteState = props.paletteState\r\n    const channelList = props.channelList;\r\n    const dispatcher = props.dispatcher;\r\n\r\n    const matrixLayersJsx: JSX.Element[] = [];\r\n\r\n    let hasError = false;\r\n    for (let l = 0; l < 2; l++) {\r\n        const linesJsx: JSX.Element[] = [];\r\n        const layer = paletteState.layers[l];\r\n        const isCurLayer = paletteState.sideIndex == l;\r\n        // 逆に表示する（音程が低い方が下になるようにする）\r\n        for (let i = channelList.length - 1; i >= 0; i--) {\r\n            const cellList: JSX.Element[] = [];\r\n            layer.lens.forEach((lenBean, j) => {\r\n                let classes = '';\r\n                let label = '';\r\n                switch (lenBean.len) {\r\n                    case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n                    case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n                    case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n                    case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n                    case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n                }\r\n                if (lenBean.isHalf) {\r\n                    classes += ' half';\r\n                }\r\n\r\n                const divList: JSX.Element[] = [];\r\n                const divCnt = lenBean.isDiv3 ? 3 : 1;\r\n                for (let k = 0; k < divCnt; k++) {\r\n                    const activeState = getActiveState(paletteState.layers, l, i, j, k);\r\n                    if(activeState == 'overlap') {\r\n                        hasError = true;\r\n                    }\r\n                    divList.push(\r\n                        <div\r\n                            key={k}\r\n                            className={[\r\n                                activeState,\r\n                                (lenBean.isDiv3 ? 'div3' : '')\r\n                            ].join(' ')}\r\n                            onClick={() => {\r\n                                dispatcher.backing.toggleMatrix(i, j, k);\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                cellList.push(\r\n                    <div\r\n                        key={j}\r\n                        className={classes}\r\n                    >\r\n                        {divList}\r\n                    </div>\r\n                );\r\n            });\r\n            linesJsx.push(\r\n                <div key={i} className=\"line\">\r\n                    {cellList}\r\n                </div>\r\n            );\r\n        };\r\n        matrixLayersJsx.push(\r\n            <div\r\n                key={l}\r\n                className={\r\n                    isCurLayer ? 'cur' : 'back'\r\n                }\r\n            >\r\n                {linesJsx}\r\n            </div>\r\n        );\r\n    }\r\n    setCorrect(!hasError);\r\n\r\n    return (\r\n        <div className=\"matrix\">\r\n            {matrixLayersJsx}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * セルの状態を元に適用するスタイルのclassを返す。\r\n * @param layers レイヤーの配列\r\n * @param curLayerIndex 選択中のレイヤーの連番\r\n * @param lineIndex 走査中のセルの連番\r\n * @param lenIndex 走査中の音価の連番\r\n * @returns スタイルのclass\r\n */\r\nconst getActiveState = (layers: BackingLayer[], curLayerIndex: number, lineIndex: number, lenIndex: number, divIndex: number): string => {\r\n    const cur = layers[curLayerIndex == 0 ? 0 : 1];\r\n    const back = layers[curLayerIndex == 1 ? 0 : 1];\r\n    let className = '';\r\n\r\n    if (cur.table[lineIndex][lenIndex][divIndex]) {\r\n        className = 'active';\r\n        const curCellRange = getCellRange(cur.lens, lenIndex, divIndex);\r\n        back.lens.forEach((backLenBean, j) => {\r\n            for (let k = 0; k < (backLenBean.isDiv3 ? 3 : 1); k++) {\r\n                const backRange = getCellRange(back.lens, j, k);\r\n                if (back.table[lineIndex][j][k] &&\r\n                    // 双方向で判定する\r\n                    (isOverlapJudge(curCellRange, backRange) || isOverlapJudge(backRange, curCellRange))\r\n                ) {\r\n                    className = 'overlap';\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return className;\r\n}\r\n\r\n/**\r\n * 比較する2つのセルが重なっているか判定する。\r\n * @param range1 比較対象セル1\r\n * @param range2 比較対象セル2\r\n * @returns 判定結果\r\n */\r\nconst isOverlapJudge = (range1: CellRange, range2: CellRange): boolean => {\r\n    return (range1.head + range1.width > range2.head && range1.head + range1.width <= range2.head + range2.width)\r\n        || (range1.head < range2.head + range2.width && range1.head >= range2.head);\r\n}\r\n\r\n/**\r\n * セルの幅を返す。\r\n * @param lens 音価\r\n * @param lenIndex 音価リストの連番\r\n * @param divIndex 連符リストの連番\r\n * @returns セルの幅\r\n */\r\nconst getCellRange = (lens: BackingLen[], lenIndex: number, divIndex: number): CellRange => {\r\n    let head = 0;\r\n    for (let i = 0; i < lenIndex; i++) {\r\n        const lenBean = lens[i];\r\n        head += getLenSize(lenBean);\r\n    }\r\n    const curLen = lens[lenIndex];\r\n    let width = getLenSize(curLen);\r\n\r\n    if (curLen.isDiv3) {\r\n        head += width / 3 * divIndex;\r\n        width = width / 3;\r\n    }\r\n    return { head, width };\r\n}\r\n\r\n/**\r\n * セルの幅を定義する要素。\r\n */\r\ntype CellRange = {\r\n    head: number;\r\n    width: number;\r\n}\r\n\r\n/**\r\n * 計算に使う音価の長さを返す。\r\n * @param lenBean 音価パラメータ\r\n * @returns 計算に使う音価の長さ\r\n */\r\nconst getLenSize = (lenBean: BackingLen): number => {\r\n    let size = 0;\r\n    switch (lenBean.len) {\r\n        case BACKING_LEN_TYPE.LEN1: size = 16; break;\r\n        case BACKING_LEN_TYPE.LEN2: size = 8; break;\r\n        case BACKING_LEN_TYPE.LEN4: size = 4; break;\r\n        case BACKING_LEN_TYPE.LEN8: size = 2; break;\r\n        case BACKING_LEN_TYPE.LEN16: size = 1; break;\r\n    }\r\n    if (lenBean.isHalf) {\r\n        size *= 1.5;\r\n    }\r\n    return size;\r\n}\r\n\r\nexport default NotesMatrix;","import { BackingLayer, BACKING_LEN_TYPE } from \"contents/redux/store\";\r\n\r\n\r\ntype SplitMeasureProps = {\r\n    layer: BackingLayer;\r\n}\r\n\r\nconst SplitMeasure = (props: SplitMeasureProps) => {\r\n\r\n    const curSideScript = props.layer;\r\n\r\n    // 音価のメジャー\r\n    const measureInner: JSX.Element[] = [];\r\n    let measureLength = 1;\r\n    curSideScript.lens.forEach((lenBean, i) => {\r\n        let cnt = 0;\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN1: cnt = 16; break;\r\n            case BACKING_LEN_TYPE.LEN2: cnt = 8; break;\r\n            case BACKING_LEN_TYPE.LEN4: cnt = 4; break;\r\n            case BACKING_LEN_TYPE.LEN8: cnt = 2; break;\r\n            case BACKING_LEN_TYPE.LEN16: cnt = 1; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            cnt *= 1.5;\r\n        }\r\n        measureLength += cnt;\r\n    });\r\n    for (let i = 0; i < measureLength; i++) {\r\n        const getLen = () => {\r\n            if (i % 2 == 0) {\r\n                if (i % 4 == 0) {\r\n                    return 'mem4';\r\n                } else {\r\n                    return 'mem8';\r\n                }\r\n            } else {\r\n                return 'mem16';\r\n            }\r\n        }\r\n        const isLast = i == measureLength - 1;\r\n        measureInner.push(<div key={i} className={getLen() + (isLast ? ' last' : '')} />);\r\n    }\r\n\r\n    return (\r\n        <div className=\"measure\">\r\n            {measureInner}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SplitMeasure;","import { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { BackingEditorState, BACKING_LEN_TYPE, ChannelParam } from \"contents/redux/store\";\r\nimport { createContext } from \"react\";\r\nimport BackingOperation from \"./BackingOperation\";\r\nimport NotesMatrix from \"./NotesMatrix\";\r\nimport SplitMeasure from \"./SplitMeasure\";\r\n\r\n\r\nexport type ChannelBean = {\r\n    soundIndex: number;\r\n    soundFullName: string;\r\n}\r\n\r\ntype BackingTableProps = {\r\n    paletteState: BackingEditorState;\r\n    dispatcher: Dispatcher;\r\n    channelList: ChannelBean[];\r\n    testPlaySound: Function;\r\n}\r\n\r\nconst BackingTable = (props: BackingTableProps) => {\r\n\r\n    const paletteState = props.paletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const dispatcher = props.dispatcher;\r\n    const channelList = props.channelList;\r\n    const testPlaySound = props.testPlaySound;\r\n\r\n\r\n    const channelJsxList: JSX.Element[] = [];\r\n    channelList.forEach((channel, i) => {\r\n        channelJsxList.push(\r\n            <div\r\n                key={i}\r\n                className=\"channel\"\r\n                onClick={() => testPlaySound(channel.soundFullName)}\r\n            >\r\n                <span>{channel.soundFullName}</span>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    // 音価の分割リスト\r\n    const lens: JSX.Element[] = [];\r\n    const volumeList: JSX.Element[] = [];\r\n    curSideScript.lens.forEach((lenBean, i) => {\r\n        const isSelected = paletteState.selectedLenIndex == i;\r\n        let classes = isSelected ? 'active ' : '';\r\n        let label = '';\r\n        switch (lenBean.len) {\r\n            case BACKING_LEN_TYPE.LEN4: classes += 'len4'; label = '4'; break;\r\n            case BACKING_LEN_TYPE.LEN8: classes += 'len8'; label = '8'; break;\r\n            case BACKING_LEN_TYPE.LEN16: classes += 'len16'; label = '16'; break;\r\n            case BACKING_LEN_TYPE.LEN2: classes += 'len2'; label = '2'; break;\r\n            case BACKING_LEN_TYPE.LEN1: classes += 'len1'; label = '1'; break;\r\n        }\r\n        if (lenBean.isHalf) {\r\n            label += ' .';\r\n            classes += ' half';\r\n        }\r\n        if (lenBean.isDiv3) {\r\n            label += ' /';\r\n        }\r\n        lens.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n                onClick={() => {\r\n                    dispatcher.initBackingPalette({\r\n                        ...paletteState,\r\n                        selectedLenIndex: i\r\n                    });\r\n                }}>\r\n                <span>{label}</span>\r\n            </div>\r\n        );\r\n        const volume = curSideScript.vels[i];\r\n        volumeList.push(\r\n            <div\r\n                key={i}\r\n                className={classes}\r\n            >\r\n                <div style={{ height: (volume * 10) + '%' }}></div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"backing-table\">\r\n            <div className=\"switch\">\r\n                <BackingOperation\r\n                    dispatcher={dispatcher}\r\n                    paletteState={paletteState}\r\n                />\r\n            </div>\r\n            <div className=\"fixed\">\r\n                <div className=\"layer\">\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 1 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(1);\r\n                        }}\r\n                    >\r\n                        <span>Right</span>\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            paletteState.sideIndex == 0 ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setLayerIndex(0);\r\n                        }}\r\n                    >\r\n                        <span>Left</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"matrix\">\r\n                    {channelJsxList}\r\n                </div>\r\n                <div className=\"pedal\">\r\n                    <button\r\n                        className={\r\n                            paletteState.isUsePedal ? 'active' : ''\r\n                        }\r\n                        onClick={() => {\r\n                            dispatcher.backing.setUsePedal(!paletteState.isUsePedal);\r\n                        }}\r\n                    >\r\n                        <span>Pedal</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"main\">\r\n                <div className=\"split\">\r\n                    {lens}\r\n                </div>\r\n                <SplitMeasure\r\n                    layer={curSideScript}\r\n                />\r\n                <NotesMatrix\r\n                    paletteState={paletteState}\r\n                    channelList={channelList}\r\n                    dispatcher={dispatcher}\r\n                />\r\n                <div className=\"volume\">\r\n                    {volumeList}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackingTable;","import { SymbolParams } from \"contents/common/define\";\r\nimport { BackingEditorState } from \"contents/redux/store\";\r\n\r\n\r\ntype StructMatrixProps = {\r\n    paletteState: BackingEditorState;\r\n    structs: string[];\r\n    symbol: SymbolParams;\r\n    degreeIndex: number;\r\n    testPlaySound: Function;\r\n    setUseChannels: Function\r\n}\r\n\r\nexport const StructMatrix = (props: StructMatrixProps) => {\r\n\r\n    const structTable: JSX.Element[] = [];\r\n    const ChordStructMax = 7;\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < ChordStructMax; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        const isUse = i < props.symbol.intervals.length;\r\n        const cols: JSX.Element[] = [];\r\n        if (isUse) {\r\n            const soundName = props.structs[i];\r\n            const interval = props.symbol.intervals[i];\r\n            const relation = props.symbol.struct[i];\r\n            // 左の固定列\r\n            cols.push(\r\n                <div key={0} className=\"label\">\r\n                    <span>{relation}[{interval}]: {soundName}</span>\r\n                </div>\r\n            );\r\n            // 中のマトリクス\r\n            for (let j = 0; j < OctaveMax; j++) {\r\n                // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n                const soundIndex = props.degreeIndex + props.symbol.intervals[i] + j * 12;\r\n                const octave = Math.floor(soundIndex / 12);\r\n                const soundFullName = props.structs[i] + octave;\r\n                const isNone = soundIndex < 9 || soundIndex >= 97;\r\n                let isSelected = false;\r\n                props.paletteState.useChannels.forEach((channel) => {\r\n                    if (channel.octave == j && channel.structIndex == i) {\r\n                        isSelected = true;\r\n                    }\r\n                });\r\n                // チャンネルが最大数に達している場合、それ以上増やせない\r\n                const isLimit = props.paletteState.useChannels.length >= 12 && !isSelected;\r\n                cols.push(\r\n                    <div\r\n                        key={j + 1}\r\n                        className={\r\n                            'col' +\r\n                            (isNone || isLimit ? ' disable' : '') +\r\n                            (isSelected ? ' active' : '')\r\n                        }\r\n                        onClick={() => {\r\n                            const list = props.paletteState.useChannels;\r\n                            if (!isSelected) {\r\n                                list.push({ octave: j, structIndex: i });\r\n                            } else {\r\n                                let pos = -1;\r\n                                list.forEach((channel, index) => {\r\n                                    if (channel.octave == j && channel.structIndex == i) {\r\n                                        pos = index;\r\n                                    }\r\n                                });\r\n                                list.splice(pos, 1);\r\n                            }\r\n                            list.sort((a, b) => {\r\n                                const aVal = a.octave * 8 + a.structIndex;\r\n                                const bVal = b.octave * 8 + b.structIndex;\r\n                                return aVal - bVal;;\r\n                            });\r\n                            props.paletteState.useChannels = list;\r\n                            props.setUseChannels(props.paletteState.useChannels);\r\n                        }}\r\n                        onContextMenu={() => {\r\n                            props.testPlaySound(soundFullName);\r\n                        }}\r\n                    >\r\n                        <span>{!isNone ? soundFullName : '-'}</span>\r\n                    </div>\r\n                );\r\n            }\r\n        } else {\r\n            // 空の要素を入れる\r\n            cols.push(\r\n                <div key={0} className=\"label\"></div>\r\n            );\r\n            for (let j = 0; j < 7; j++) {\r\n                cols.push(\r\n                    <div key={j + 1} className=\"col\"></div>\r\n                );\r\n            }\r\n        }\r\n        structTable.push(\r\n            <div\r\n                key={i}\r\n                className={\r\n                    'record' +\r\n                    (!isUse ? ' disable' : '')\r\n                }\r\n            >\r\n                {cols}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"struct-table\">\r\n            {structTable}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StructMatrix;","\r\nimport { KEY12_SHARP_LIST, SymbolParams, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { DetailChord, FloatWndState, CHORD_MODE, BACKING_LEN_TYPE, BackingLen, BACKING_SIDE, BackingEditorState, BackingLayer, ChannelParam } from \"contents/redux/store\";\r\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\";\r\n\r\nimport './BackingEditor.css';\r\nimport BackingTable, { ChannelBean } from \"./BackingTable\";\r\nimport StructMatrix from \"./StructMatrix\";\r\n\r\n\r\n\r\ntype BackingContextType = {\r\n    isCorrect: boolean;\r\n    setCorrect: (isCorrect: boolean) => void;\r\n}\r\n\r\nexport const BackingContext = createContext({} as BackingContextType);\r\n\r\nconst BackingEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [isCorrect, setCorrect] = useState(true);\r\n    \r\n\r\n    /** コンテキストメニューの要素オブジェクト */\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_BACKING_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        dispatcher.backing.setCorrect(isCorrect);\r\n    }, [isCorrect]);\r\n    // if (state.noteState.focusIndex == -1 ||\r\n    //     state.noteData.dataList[state.noteState.focusIndex].type != TypeNoteElement.Chord) {\r\n    //     return (<></>);\r\n    // }\r\n    if (state.noteState.floatwndState != FloatWndState.BACKING_PALETTE) {\r\n        return (<></>);\r\n    }\r\n\r\n    const paletteState = state.noteState.backingPaletteState;\r\n    const sideIndex = paletteState.sideIndex;\r\n    const curSideScript = paletteState.layers[sideIndex];\r\n    const selectedLenIndex = paletteState.selectedLenIndex;\r\n    const detail = state.noteData.dataList[state.noteState.focusIndex].detail as DetailChord;\r\n    // if(detail.symbolKey == null) return (<></>);\r\n    const symbol = getSymbolParams(detail.symbolKey) as SymbolParams;\r\n    const root = KEY12_SHARP_LIST[detail.degreeIndex];\r\n    const chordName = root + symbol.name;\r\n    const structs: string[] = [];\r\n    symbol.intervals.forEach((value) => {\r\n        structs.push(KEY12_SHARP_LIST[(detail.degreeIndex + value) % 12]);\r\n    });\r\n\r\n    // const infoList: JSX.Element[] = [];\r\n\r\n    const channelList = getChannelList(paletteState.useChannels, detail.degreeIndex, symbol, structs);\r\n\r\n    const testPlaySound = (soundFullName: string) => {\r\n        state.sampler.triggerAttack(soundFullName, '+0', 0.15);\r\n        setTimeout(() => {\r\n            state.sampler.triggerRelease(soundFullName);\r\n        }, 1000);\r\n    };\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.play(false);\r\n            }}>\r\n            <span>Play</span>\r\n        </div>\r\n        <div\r\n            className={[\r\n                paletteState.isCorrect ? '' : 'disable'\r\n            ].join(' ')}\r\n            onClick={() => {\r\n                dispatcher.backing.setCurBackingScript();\r\n            }}>\r\n            <span>Update</span>\r\n        </div>\r\n    </>);\r\n    return (\r\n        <BackingContext.Provider value={{\r\n            isCorrect: isCorrect,\r\n            setCorrect: (isCorrect) => setCorrect(isCorrect)\r\n        }}>\r\n            <div\r\n                ref={ref}\r\n                id=\"backing-palette\"\r\n                className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.BACKING_PALETTE ? ' active' : '')}\r\n                onClick={() => {\r\n                }}\r\n            >\r\n                <div className=\"base-info\">\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Chord:</span></div>\r\n                        <div className=\"value\"><span>{chordName}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Struct:</span></div>\r\n                        <div className=\"value\"><span>{structs.join(', ')}</span></div>\r\n                    </div>\r\n                    <div className=\"record\">\r\n                        <div className=\"title\"><span>Sustain:</span></div>\r\n                        <div className=\"value\"><span>{detail.sustain}</span></div>\r\n                    </div>\r\n                </div>\r\n                <StructMatrix\r\n                    paletteState={paletteState}\r\n                    structs={structs}\r\n                    symbol={symbol}\r\n                    degreeIndex={detail.degreeIndex}\r\n                    testPlaySound={testPlaySound}\r\n                    setUseChannels={(useChannels: ChannelParam[]) => dispatcher.setUseChannels(useChannels)}\r\n                />\r\n                <BackingTable\r\n                    channelList={channelList}\r\n                    paletteState={paletteState}\r\n                    dispatcher={dispatcher}\r\n                    testPlaySound={testPlaySound}\r\n                />\r\n\r\n                <div className=\"operation\">\r\n                    {operation}\r\n                </div>\r\n            </div>\r\n        </BackingContext.Provider>\r\n    );\r\n}\r\n\r\nconst getChannelList = (useChannels: ChannelParam[], degreeIndex: number, symbol: SymbolParams, structs: string[]): ChannelBean[] => {\r\n\r\n    const channelList: ChannelBean[] = [];\r\n\r\n    const OctaveMax = 8;\r\n    for (let i = 0; i < symbol.intervals.length; i++) {\r\n        // for (let i = ChordStructMax - 1; i >= 0; i--) {\r\n        for (let j = 0; j < OctaveMax; j++) {\r\n            // for (let j = OctaveMax - 1; j >= 0; j--) {\r\n            const soundIndex = degreeIndex + symbol.intervals[i] + j * 12;\r\n            let isSelected = false;\r\n            useChannels.forEach((channel) => {\r\n                if (channel.octave == j && channel.structIndex == i) {\r\n                    isSelected = true;\r\n                }\r\n            });\r\n            const octave = Math.floor(soundIndex / 12);\r\n            const soundFullName = structs[i] + octave;\r\n            if (isSelected) {\r\n                channelList.push({ soundIndex, soundFullName });\r\n            }\r\n        }\r\n    }\r\n    // 音程の昇順にソート\r\n    channelList.sort((a, b) => {\r\n        return b.soundIndex - a.soundIndex;\r\n    });\r\n    return channelList;\r\n}\r\n\r\nexport default BackingEditor;","import { KEY12_MAJOR_SCALE_LIST, KEY12_MINOR_SCALE_LIST, RYTHM_LIST, SCALE_LIST } from \"contents/common/define\";\r\nimport { GlobalContext } from \"contents/MainFrame\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { CHORD_MODE, FloatWndState } from \"contents/redux/store\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport './InitEditor.css';\r\n\r\nconst InitEditor = () => {\r\n\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    const [tempo, setTempo] = useState(55);\r\n    const [rythm, setRythm] = useState('4/4');\r\n    const [keyIndex, setKey] = useState(0);\r\n    const [scale, setScale] = useState('major');\r\n\r\n    const ref = useRef({} as HTMLDivElement);\r\n    useEffect(() => {\r\n        // dispatch(ActionType.GET_REFFER, { reffers: {...state.reffers, chordPalette: ref.current }});\r\n        dispatch(ActionType.GET_REFFER_CHORD_PALETTE, { reffer: ref.current });\r\n    }, []);\r\n\r\n    let operation: JSX.Element = <></>;\r\n    operation = (<>\r\n        <div\r\n            onClick={() => {\r\n                dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            }}>\r\n            <span>Cancel</span>\r\n        </div>\r\n        <div\r\n            onClick={() => {\r\n                dispatcher.init.setInitParam(tempo, rythm, keyIndex, scale);\r\n            }}>\r\n            <span>Enter</span>\r\n        </div>\r\n    </>);\r\n\r\n\r\n\r\n    const getItemSlider = (label: string, list: string[]): JSX.Element => {\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <span>{tempo}</span>\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setTempo(Number(e.target.value));\r\n                        }}\r\n                        type=\"range\" name=\"speed\" min=\"30\" max=\"180\" value={tempo}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const getItemSelector = (label: string, value: string, callback: (value: string) => void,\r\n        list: { value: string, display: string }[]): JSX.Element => {\r\n        const optionsJsx: JSX.Element[] = [];\r\n        list.forEach((data) => {\r\n            optionsJsx.push(\r\n                <option key={optionsJsx.length} value={data.value}>{data.display}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"item\">\r\n                <div className=\"label\">\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className=\"value\">\r\n                    <select\r\n                        value={value}\r\n                        onChange={(e) => {\r\n                            callback(e.target.value);\r\n                        }}\r\n                    >\r\n                        {optionsJsx}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    const isDirect = state.noteData.chordMode == CHORD_MODE.DIRECT;\r\n    return (\r\n        <div\r\n            id=\"init-editor\"\r\n            className={'floatwnd' + (state.noteState.floatwndState == FloatWndState.INIT_PALETTE ? ' active' : '')}\r\n            onClick={() => {\r\n            }}\r\n        >\r\n            <div className=\"items\">\r\n                {getItemSlider('Tempo', [])}\r\n                {getItemSelector('Beat', rythm, (value: string) => { setRythm(value) },\r\n                    RYTHM_LIST.map(item => { return { value: item, display: item } })\r\n                )}\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Key', String(keyIndex), (value: string) => { setKey(Number(value)) },\r\n                        (scale == SCALE_LIST[0] ?\r\n                            // メジャースケールの時のリスト\r\n                            KEY12_MAJOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                            :\r\n                            // マイナースケールの時のリスト\r\n                            KEY12_MINOR_SCALE_LIST.map((item, i) => { return { value: i.toString(), display: item } })\r\n                        )\r\n                    )\r\n                }\r\n                {isDirect ? <></> :\r\n                    getItemSelector('Scale', scale, (value: string) => { setScale(value) },\r\n                        SCALE_LIST.map(item => { return { value: item, display: item } })\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"operation\">\r\n                {operation}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InitEditor;\r\n\r\nconst StyledButton = styled.span`\r\n  user-select: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  margin: 1em;\r\n  padding: 0.3em 0.5em;\r\n  border-radius: 0.2em;\r\n  border: solid 1px #3498db;\r\n  color: #fff;\r\n  background-color: #3498db;\r\n`","import './ScoreContNoteTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { ScoreCache, DetailChord, DetailInit, DetailSection, EditMode, FloatWndState, Store, TypeNoteElement, ScoreProgress } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\n\r\nimport ScoreElement, { } from './element/ScoreElement';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport OutlineSection from './OutlineSection';\r\nimport { KeyboardShortCutAction } from '../../../../operation/InputNoteTab';\r\nimport NoteContextMenu from './floatwnd/context/NoteContextMenu';\r\nimport ChordSelector from './floatwnd/chord/ChordSelector';\r\nimport CurrentElementInfo from './sideDetail/CurrentElementInfo';\r\nimport BackingEditor from './floatwnd/backing/BackingEditor';\r\nimport styled from 'styled-components';\r\nimport InitEditor from './floatwnd/init/InitEditor';\r\n\r\nconst ScoreContNoteTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    /** 譜面の要素リスト */\r\n    const [elementList, setElementList] = useState([] as JSX.Element[]);\r\n    /** 画面上部のセクションリスト */\r\n    const [sectionList, setSectionList] = useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => {\r\n        // alert(state.noteData.dataList.length);\r\n        const dataList = state.noteData.dataList;\r\n        // const isNormalMode = editMode == EditMode.NORMAL;\r\n        let index = 0;\r\n        const elementList: JSX.Element[] = [];\r\n        const sectionList: JSX.Element[] = [];\r\n\r\n        // const cacheList: ScoreCache[] = [];\r\n\r\n        const cacheList = state.noteState.cacheList;\r\n        // const cache = {} as ScoreCache;\r\n        const cache = {} as ScoreCache;\r\n\r\n        let no = 1;\r\n        let totalBeat = 0;\r\n        let totalMsec = 0;\r\n        let lastBar = -1;\r\n        dataList.forEach((data, i) => {\r\n\r\n            if (data.type == TypeNoteElement.Init) {\r\n                const init = data.detail as DetailInit;\r\n                cache.init = { ...init };\r\n            }\r\n\r\n            const bar = Math.floor(totalBeat / 4) + 1;\r\n            const progress = {} as ScoreProgress;\r\n            progress.no = no;\r\n            progress.barCount = lastBar != bar ? bar : -1;\r\n            progress.remaindBeat = totalBeat % 4 > 0 ? totalBeat % 4 : -1;\r\n            progress.headMSec = totalMsec;\r\n            elementList.push(\r\n                <ScoreElement\r\n                    key={i}\r\n                    index={i}\r\n                    noteElement={data}\r\n                />\r\n            );\r\n            if (data.type == TypeNoteElement.Chord) {\r\n                lastBar = bar;\r\n                const detail = data.detail as DetailChord;\r\n\r\n                const tempo = cache.init.tempo;\r\n                totalBeat += detail.sustain;\r\n                const sectionMSec = 60000 / tempo * 4;\r\n                totalMsec += sectionMSec / 4 * detail.sustain;\r\n                no++;\r\n            }\r\n\r\n            // cacheList.push({\r\n            //     init: { ...cache.init },\r\n            //     progress\r\n            // });\r\n            // cacheList[i].init = { ...cache.init };\r\n            // cacheList[i].progress = progress;\r\n            \r\n            cacheList[i] = {...cacheList[i], init: { ...cache.init }, progress};\r\n\r\n            // セクションアウトラインの生成\r\n            if (data.type == TypeNoteElement.Section) {\r\n                sectionList.push(\r\n                    <OutlineSection key={i} index={index} label={(data.detail as DetailSection).label} />\r\n                );\r\n                index++;\r\n            }\r\n        });\r\n        setElementList(elementList);\r\n        setSectionList(sectionList);\r\n        dispatcher.score.setNoteState({ ...state.noteState, cacheList });\r\n\r\n    }, [state.noteData.dataList]);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    const isModalBlind = !(state.noteState.floatwndState == FloatWndState.NONE || state.noteState.floatwndState == FloatWndState.CONTEXT_MENU);\r\n    return (\r\n        <div id=\"scorecont-notetab-root\">\r\n            <div className=\"left-cont\">\r\n                <div id=\"score-note\">\r\n                    <div\r\n                        id=\"operation-header\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        <button className=\"disable\"><span>BACK</span></button>\r\n                        <button className=\"disable\"><span>SAVE</span></button>\r\n                        <button className=\"disable\"><span>RELOAD</span></button>\r\n                        <button className=\"disable\"><span>OPTION</span></button>\r\n                        <EditModeBorder />\r\n                    </div>\r\n                    <div\r\n                        id=\"section-list\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {sectionList}\r\n                    </div>\r\n                    <div\r\n                        id=\"score-list-root\"\r\n                        className={editMode == EditMode.BACKING ? 'mode-selector' : ''}\r\n                    >\r\n                        {elementList}\r\n                    </div>\r\n                    {/* モーダルブラインド */}\r\n                    <div id=\"modal-blind\"\r\n                        className={isModalBlind ? 'active' : ''}\r\n                        onClick={() => {\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                        }}\r\n                    />\r\n                    {/* コンテキストメニュー */}\r\n                    <InitEditor />\r\n                    <NoteContextMenu />\r\n                    <ChordSelector />\r\n                    <BackingEditor />\r\n                </div>\r\n                <div id=\"score-footer\">\r\n                </div>\r\n            </div>\r\n            <div className=\"right-cont\">\r\n                <CurrentElementInfo />\r\n                {/* <div id=\"sidebar-param-selector\" className=\"hidden\" tabIndex=\"999\">\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst EditModeBorder = () => {\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    const editMode = state.noteState.editMode;\r\n    // const isNormal = editMode == EditMode.NORMAL;\r\n    // const setEditMode = (editMode: EditMode) => {\r\n    //     dispatch(ActionType.SET_NOTE_STATE, { noteState: { ...state.noteState, editMode } });\r\n    // };\r\n    return (\r\n        <div className=\"mode\">\r\n            <div className=\"label\"><span>MODE:</span></div>\r\n            <div className=\"border\">\r\n                <button\r\n                    className={editMode == EditMode.NORMAL ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.NORMAL)}\r\n                >\r\n                    <span>NORMAL</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.BACKING ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>CLONE</span>\r\n                </button>\r\n                <button\r\n                    className={editMode == EditMode.PREVIEW ? 'active' : ''}\r\n                // onClick={() => setEditMode(EditMode.BACKING)}\r\n                >\r\n                    <span>PREVIEW</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContNoteTab;\r\n\r\n","import './ScoreContLibraryTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContLiblaryTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <div id=\"scorecont-listtab-root\">\r\n            <div className=\"left-cont\">\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.SCALE } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.SCALE });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>SCALE</span>\r\n                </button>\r\n                <button onClick={() => {\r\n                    // dispatch(ActionType.SET_NOTE_DATA,\r\n                    //     { data: { ...state.noteData, editMode: CHORD_MODE.DIRECT } }\r\n                    // );\r\n                    dispatcher.setNoteData({ ...state.noteData, chordMode: CHORD_MODE.DIRECT });\r\n                    dispatch(ActionType.INIT_DEFAULT_ELEMENTS, null);\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n                >\r\n                    <span>DIRECT</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"right-cont\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContLiblaryTab;\r\n","import './ScoreContBackingTab.css';\r\n\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport  { useContext } from 'react';\r\n\r\n\r\nconst ScoreContBackingTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n\r\n    \r\n    return (<></>);\r\n\r\n\r\n}\r\n\r\nexport default ScoreContBackingTab;\r\n","import './ScoreContSourceTab.css';\r\n\r\n// import TabbedPane from './common/TabbedPane.jsx';\r\nimport { DetailSection, CHORD_MODE, Store, TypeNoteElement, EditMode } from 'contents/redux/store';\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport React, { useContext, KeyboardEvent, useEffect, useState, useRef } from 'react';\r\nimport { ActionType } from 'contents/redux/reducer';\r\n\r\n\r\nconst ScoreContSourceTab = () => {\r\n    const { state, dispatch, dispatcher } = useContext(GlobalContext);\r\n    const ref = useRef({} as HTMLTextAreaElement);\r\n\r\n    useEffect(() => {\r\n        if (state.scoreTabIndex == 2 && state.noteData.dataList.length != 0) {\r\n            ref.current.value = JSON.stringify(state.noteData);\r\n        }\r\n    }, [state.scoreTabIndex]);\r\n\r\n    return (\r\n        <div id=\"scorecont-sourcetab-root\">\r\n            <textarea ref={ref}></textarea>\r\n            <button\r\n                onClick={() => {\r\n                    dispatcher.score.setNoteData(JSON.parse(ref.current.value));\r\n                    dispatch(ActionType.SELECT_NOTE_ELEMENT, {index: 2});\r\n                    dispatch(ActionType.SELECT_SCORETAB, { index: 1 });\r\n                }}\r\n            >Load score data...</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreContSourceTab;\r\n","import './ScoreTab.css';\r\nimport React, { useState, useContext, useRef, useEffect } from 'react';\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\n\r\nimport { GlobalContext } from 'contents/MainFrame';\r\nimport ScoreContNoteTab from './contTabs/note/ScoreContNoteTab';\r\nimport { ActionType } from 'contents/redux/reducer';\r\nimport ScoreContLiblaryTab from './contTabs/library/ScoreContLibraryTab';\r\nimport ScoreContBackingTab from './contTabs/backing/ScoreContBackingTab';\r\nimport ScoreContSourceTab from './contTabs/source/ScoreContSourceTab';\r\n\r\nconst ScoreTab = () => {\r\n\r\n    const { state, dispatch } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div id=\"scoretab-root\">\r\n            <TabbedPane groupName=\"score-tabs\"\r\n                tabElements={[\r\n                    { name: 'Library', disable: false, cont: <ScoreContLiblaryTab /> },\r\n                    {\r\n                        name: 'Note', disable: state.noteData.dataList.length == 0,\r\n                        cont: state.scoreTabIndex != 1 ? <></> : < ScoreContNoteTab />\r\n                    },\r\n                    { name: 'Source', disable: false, cont: <ScoreContSourceTab /> },\r\n                    { name: 'Backing', disable: true, cont: <ScoreContBackingTab /> },\r\n                    { name: 'Sheet Music', disable: true, cont: <div></div> },\r\n                    { name: 'Preview', disable: true, cont: <div></div> }\r\n                ]}\r\n                activeNo={state.scoreTabIndex}\r\n                selectTabIndex={(index: number) => dispatch(ActionType.SELECT_SCORETAB, { index: index })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreTab;","import { KEY12_SHARP_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { ActionType } from \"./reducer\";\r\nimport { Action, BackingLen, BackingEditorState, BackingLayer, BACKING_LEN_TYPE, BACKING_SIDE, ChannelParam, DetailInit, NoteData, Store, TypeNoteElement, NoteState, NoteElement, FloatWndState, DetailChord, BackingScript, DetailSection, EditMode, ScoreCache } from \"./store\";\r\n\r\n/**\r\n * ビジネスロジックからステートを更新するためのクラス。\r\n *\r\n * @export\r\n * @class Dispatcher\r\n */\r\nexport class Dispatcher {\r\n\r\n    private dispatchBase: React.Dispatch<Action>;\r\n    private dispatch: Function;\r\n    private state: Store;\r\n\r\n    /**\r\n     *Creates an instance of Dispatcher.\r\n     * @param {Store} state\r\n     * @param {React.Dispatch<Action>} dispatchBase\r\n     * @memberof Dispatcher\r\n     */\r\n    constructor(state: Store, dispatchBase: React.Dispatch<Action>) {\r\n        this.dispatchBase = dispatchBase;\r\n        this.state = state;\r\n        this.dispatch = (type: ActionType, payload: any) => dispatchBase({ type, payload });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param noteData \r\n     */\r\n    public setNoteData = (data: NoteData) => {\r\n        this.dispatchBase({ type: ActionType.SET_NOTE_DATA, payload: { data } });\r\n    }\r\n    public initBackingPalette = (backingPaletteState: BackingEditorState) => {\r\n        this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n    }\r\n\r\n    public setUseChannels = (useChannels: ChannelParam[]) => {\r\n        this.dispatchBase({ type: ActionType.SET_USE_CHANNELS, payload: { useChannels } });\r\n    }\r\n\r\n    public score = {\r\n\r\n        apllyFlasah: (index: number) => {\r\n            const reffer = this.state.noteState.cacheList[index].reffer as HTMLDivElement;\r\n            reffer.style.backgroundColor = '#ff0';\r\n            setTimeout(() => {\r\n                reffer.style.backgroundColor = '';\r\n            }, 350);\r\n        },\r\n        apllyFlashCur: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.apllyFlasah(focusIndex);\r\n        },\r\n        apllyFlashList: () => {\r\n            this.state.noteState.selectedList.forEach((index) => {\r\n                this.score.apllyFlasah(index);\r\n            });\r\n        },\r\n\r\n        setNoteState: (noteState: NoteState) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState });\r\n        },\r\n        setCriteria: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: focusIndex, editMode: EditMode.BACKING\r\n            });\r\n        },\r\n        releaseCriteria: () => {\r\n            this.score.setNoteState({\r\n                ...this.state.noteState,\r\n                criteriaIndex: -1, editMode: EditMode.NORMAL, selectedList: []\r\n            });\r\n        },\r\n        setNoteData: (data: NoteData) => {\r\n            this.dispatch(ActionType.SET_NOTE_DATA, { data });\r\n        },\r\n        /**\r\n         * 初期値の要素を返す。\r\n         */\r\n        getInitElement: (): DetailInit => {\r\n            return this.state.noteData.dataList[0].detail as DetailInit;\r\n        },\r\n        setEditMode: (editMode: EditMode) => {\r\n            this.score.setNoteState({ ...this.state.noteState, editMode });\r\n        },\r\n        addSectionElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            const detail = {} as DetailSection;\r\n            detail.label = 'Section';\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Section,\r\n                detail: detail\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache );\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        addChordElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const dataList = this.state.noteData.dataList.slice();\r\n            dataList.splice(curIndex + 1, 0, {\r\n                type: TypeNoteElement.Chord,\r\n                detail: {\r\n                    degreeIndex: -1,\r\n                    isFlat: false,\r\n                    symbolKey: null,\r\n                    sustain: 4,\r\n                    backing: {\r\n                        useChannels: [],\r\n                        layers: [\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.LEFT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            },\r\n                            {\r\n                                lens: [{\r\n                                    len: BACKING_LEN_TYPE.LEN4,\r\n                                    isDiv3: false,\r\n                                    isHalf: false\r\n                                }],\r\n                                side: BACKING_SIDE.RIGHT,\r\n                                table: [],\r\n                                vels: [5]\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            });\r\n            this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n            \r\n            const cacheList = this.state.noteState.cacheList.slice();\r\n            cacheList.splice(curIndex + 1, 0, {} as ScoreCache );\r\n            this.score.apllyFlasah(curIndex + 1);\r\n        },\r\n        deleteElement: (index: number) => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const curElement = this.state.noteData.dataList[index];\r\n            if (\r\n                // 対象の要素がコードorセクションである\r\n                [TypeNoteElement.Chord, TypeNoteElement.Section].includes(curElement.type) &&\r\n                // 先頭のセクションは削除できない\r\n                index != 2\r\n            ) {\r\n                const dataList: NoteElement[] = this.state.noteData.dataList.slice();\r\n                dataList.splice(index, 1);\r\n                this.dispatch(ActionType.SET_DATA_LIST, { dataList });\r\n                if (index <= curIndex) {\r\n                    this.state.noteState.focusIndex--;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                }\r\n            }\r\n        },\r\n        deleteCurElement: () => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            this.score.deleteElement(curIndex);\r\n            // const box = this.state.noteData.dataList[curIndex];\r\n            // const ref = box.reffer as HTMLDivElement;\r\n            // // ref.style.width = '0';\r\n            // ref.style.opacity = '0';\r\n            // setTimeout(() => {\r\n            //     this.score.deleteElement(curIndex);\r\n            // }, 1);\r\n        },\r\n        focusPreviousElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const prev = this.state.noteData.dataList[curIndex - 1];\r\n            if (prev.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex--;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusNextElement: (): boolean => {\r\n            const curIndex = this.state.noteState.focusIndex;\r\n            const next = this.state.noteData.dataList[curIndex + 1];\r\n            if (next.type != TypeNoteElement.Fixed) {\r\n                this.state.noteState.focusIndex++;\r\n                this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        focusPreviousSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex--;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex > 0);\r\n        },\r\n\r\n        focusNextSection: () => {\r\n            const dataList = this.state.noteData.dataList;\r\n            let curIndex = this.state.noteState.focusIndex;\r\n            do {\r\n                curIndex++;\r\n                if (dataList[curIndex].type == TypeNoteElement.Section || curIndex == dataList.length - 2) {\r\n                    this.state.noteState.focusIndex = curIndex;\r\n                    this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n                    break;\r\n                }\r\n            } while (curIndex < dataList.length - 1);\r\n        },\r\n\r\n        focusInitElement: () => {\r\n            this.state.noteState.focusIndex = 0;\r\n            this.dispatch(ActionType.SET_NOTE_STATE, { noteState: this.state.noteState });\r\n        },\r\n\r\n        setSelectedList: (selectedList: number[]) => {\r\n            this.dispatch(ActionType.SET_NOTE_STATE, {\r\n                noteState: { ...this.state.noteState, selectedList }\r\n            });\r\n        },\r\n\r\n        callChordSelector: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n            this.dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                params: {\r\n                    ...this.state.noteState.chordPaletteState,\r\n                    rootIndex: detail.degreeIndex,\r\n                    isFlat: detail.isFlat,\r\n                    symbolKey: detail.symbolKey,\r\n                    sustain: detail.sustain,\r\n                }\r\n            });\r\n        },\r\n\r\n        callBackingEditor: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.BACKING_PALETTE });\r\n            const backing = detail.backing;\r\n            const backingState: BackingEditorState = {\r\n                useChannels: backing.useChannels,\r\n                isUsePedal: backing.isUsePedal,\r\n                sideIndex: 0,\r\n                selectedLenIndex: 0,\r\n                selectedChannelIndex: -1,\r\n                layers: backing.layers,\r\n                isCorrect: true\r\n            };\r\n            this.initBackingPalette(backingState);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初期値エディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public init = {\r\n        setInitParam: (tempo: number, rythm: string, keyIndex: number, scale: string) => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            // const detail = this.state.noteData.dataList[focusIndex].detail as DetailInit;\r\n            // const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    tempo, rythm, keyIndex, scale\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * コードエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public chord = {\r\n        setCurChordParam: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.chordPaletteState;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    degreeIndex: editorState.rootIndex,\r\n                    isFlat: editorState.isFlat,\r\n                    symbolKey: editorState.symbolKey,\r\n                    sustain: editorState.sustain,\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n            // const reffer = this.state.noteData.dataList[focusIndex].reffer as HTMLDivElement;\r\n            // reffer.style.backgroundColor = '#ff0';\r\n            // setTimeout(() => {\r\n            //     reffer.style.backgroundColor = '';\r\n            // }, 350);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * バッキングエディタ画面の操作に関連するメソッドを定義するオブジェクト。\r\n     *\r\n     * @memberof Dispatcher\r\n     */\r\n    public backing = {\r\n        toggleMatrix: (channelIndex: number, lenIndex: number, divIndex: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideIndex = backing.sideIndex;\r\n            const isUse = !this.state.noteState.backingPaletteState.layers[sideIndex].table[channelIndex][lenIndex][divIndex];\r\n            this.dispatch(ActionType.BACKING_TOGGLE_MATRIX, { sideIndex, channelIndex, lenIndex, divIndex, isUse });\r\n        },\r\n        addLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素の次に挿入する\r\n            curSideScript.lens.splice(\r\n                selectedLenIndex + 1, 0,\r\n                { len: BACKING_LEN_TYPE.LEN4, isHalf: false, isDiv3: false }\r\n            );\r\n            table.forEach((line) => {\r\n                line.splice(\r\n                    selectedLenIndex + 1, 0, [false]\r\n                );\r\n            });\r\n            curSideScript.vels.splice(\r\n                backingPaletteState.selectedLenIndex + 1, 0, 5\r\n            );\r\n            script[sideIndex] = curSideScript;\r\n\r\n            this.dispatchBase({ type: ActionType.INIT_BACKING_PALETTE, payload: { backingPaletteState } });\r\n        },\r\n        delLen: () => {\r\n            // this.dispatch({ type: ActionType.ADD_LEN, payload: null });\r\n\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const script = backingPaletteState.layers;\r\n            const sideIndex = backingPaletteState.sideIndex;\r\n            const curSideScript = script[sideIndex];\r\n            const selectedLenIndex = backingPaletteState.selectedLenIndex;\r\n            const table = curSideScript.table;\r\n            curSideScript.lens = [...curSideScript.lens];\r\n            // 選択中の要素を削除する\r\n            curSideScript.lens.splice(selectedLenIndex, 1);\r\n            table.forEach((line) => {\r\n                line.splice(selectedLenIndex, 1);\r\n            });\r\n            curSideScript.vels.splice(selectedLenIndex, 1);\r\n            script[sideIndex] = curSideScript;\r\n\r\n            if (selectedLenIndex > 0) {\r\n                backingPaletteState.selectedLenIndex--;\r\n            }\r\n            this.dispatch(ActionType.INIT_BACKING_PALETTE, { backingPaletteState });\r\n        },\r\n        updateLenIndex: (index: number) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            backingPaletteState.selectedLenIndex = index;\r\n            this.initBackingPalette(backingPaletteState);\r\n        },\r\n        getCurLenIndex: (): number => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            return backingPaletteState.selectedLenIndex;\r\n        },\r\n        isFirstCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.selectedLenIndex == 0;\r\n        },\r\n        isLastCurLen: (): boolean => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return backing.selectedLenIndex == sideScript.lens.length - 1;\r\n        },\r\n        getSideScript: (): BackingLayer => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            return backing.layers[backing.sideIndex];\r\n        },\r\n        getCurLenBean: (): BackingLen => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.lens[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * \r\n         * @param lenBean \r\n         */\r\n        setCurrentLenBean: (lenBean: BackingLen) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            const sideScript = script[backing.sideIndex];\r\n            sideScript.lens[backing.selectedLenIndex] = lenBean;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列の長さを設定します。\r\n         * @param lenType 長さ\r\n         */\r\n        setCurLen: (lenType: BACKING_LEN_TYPE) => {\r\n            const curLenBean = this.backing.getCurLenBean();\r\n            curLenBean.len = lenType;\r\n            curLenBean.isHalf = false;\r\n            curLenBean.isDiv3 = false;\r\n            this.backing.setCurrentLenBean(curLenBean);\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を更新する。\r\n         * @param velocity 更新するベロシティ値（1～10）\r\n         */\r\n        updateCurVolume: (velocity: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const script = backing.layers;\r\n            script[backing.sideIndex].vels[backing.selectedLenIndex] = velocity;\r\n            this.initBackingPalette({ ...backing, layers: script });\r\n        },\r\n\r\n        /**\r\n         * 選択中の列のベロシティ値を返す。\r\n         * @returns 選択中の列のベロシティ値\r\n         */\r\n        getCurVelocity: (): number => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            const sideScript = backing.layers[backing.sideIndex];\r\n            return sideScript.vels[backing.selectedLenIndex];\r\n        },\r\n\r\n        /**\r\n         * 付点を設定できるか否かを判定する。\r\n         * @returns 付点を設定できるか否か\r\n         */\r\n        isAcceptHalf: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN2,\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        /**\r\n         * 3連符を設定できるか否かを判定する。\r\n         * @returns 3連符を設定できるか否か\r\n         */\r\n        isAcceptDiv3: (): boolean => {\r\n            return [\r\n                BACKING_LEN_TYPE.LEN4,\r\n                BACKING_LEN_TYPE.LEN8\r\n            ].includes(this.backing.getCurLenBean().len);\r\n        },\r\n\r\n        setLayerIndex: (index: number) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = index;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setUsePedal: (use: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isUsePedal = use;\r\n            this.initBackingPalette(backing);\r\n        },\r\n        setCorrect: (isCorrect: boolean) => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.isCorrect = isCorrect;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        changeLayerIndex: () => {\r\n            const backing = this.state.noteState.backingPaletteState;\r\n            backing.sideIndex = backing.sideIndex == 0 ? 1 : 0;\r\n            backing.selectedLenIndex = 0;\r\n            this.initBackingPalette(backing);\r\n        },\r\n\r\n        setUseChannels: (useChannels: ChannelParam) => {\r\n            const backingPaletteState = this.state.noteState.backingPaletteState;\r\n            const baseLayers = backingPaletteState.layers;\r\n            const layers: BackingLayer[] = new Array(2);\r\n            for (let i = 0; i < 2; i++) {\r\n                const channelCount = backingPaletteState.useChannels.length;\r\n                const lensSplitCount = baseLayers[i].lens.length;\r\n                const baseTable = baseLayers[i].table;\r\n                const table: boolean[][][] = new Array(channelCount);\r\n\r\n                for (let y = 0; y < channelCount; y++) {\r\n                    if (y < baseTable.length) {\r\n                        table[y] = baseTable[y];\r\n                    } else {\r\n                        table[y] = new Array(lensSplitCount);\r\n                        for (let x = 0; x < lensSplitCount; x++) {\r\n                            table[y][x] = new Array(1);\r\n                            table[y][x][0] = false;\r\n                        }\r\n                    }\r\n                }\r\n                layers[i] = {\r\n                    ...baseLayers[i],\r\n                    table,\r\n                };\r\n            }\r\n        },\r\n\r\n        setCurBackingScript: () => {\r\n            const focusIndex = this.state.noteState.focusIndex;\r\n            const chordDetail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n            const editorState = this.state.noteState.backingPaletteState;\r\n            const backing = {} as BackingScript;\r\n            backing.useChannels = editorState.useChannels;\r\n            backing.layers = editorState.layers;\r\n            backing.isUsePedal = editorState.isUsePedal;\r\n            this.dispatch(ActionType.DETAIL_PARAMS_SETTER, {\r\n                pos: focusIndex,\r\n                params: {\r\n                    ...chordDetail,\r\n                    backing\r\n                }\r\n            });\r\n            this.dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n            this.score.apllyFlashCur();\r\n        },\r\n\r\n        getNotesCount: (backing: BackingScript): number => {\r\n\r\n            let count = 0;\r\n            backing.layers.forEach((layer) => {\r\n                layer.table.forEach((line) => {\r\n                    line.forEach((cell) => {\r\n                        if (cell[0]) {\r\n                            count++;\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return count;\r\n        },\r\n\r\n        play: (isProceed: boolean) => {\r\n\r\n            const threads = this.state.noteState.backingThreads;\r\n            const soundUseList: number[] = Array(88);\r\n            for (let i = 0; i < 88; i++) {\r\n                soundUseList[i] = 0;\r\n            }\r\n            const rec = (isProceed: boolean) => {\r\n\r\n                const focusIndex = this.state.noteState.focusIndex;\r\n                const detail = this.state.noteData.dataList[focusIndex].detail as DetailChord;\r\n                const cache = this.state.noteState.cacheList[focusIndex];\r\n                const symbol = getSymbolParams(detail.symbolKey);\r\n                const intervals = symbol?.intervals as number[];\r\n                const editor = this.state.noteState.backingPaletteState;\r\n                const backing: BackingScript = !isProceed ? { layers: editor.layers, useChannels: editor.useChannels, isUsePedal: editor.isUsePedal }\r\n                    : detail.backing;\r\n                const sampler = this.state.sampler;\r\n                const tempo = cache.init.tempo;\r\n                // 1小節の長さミリ秒\r\n                const barMs = 60000 / tempo * 4;\r\n                const boxMs = 60000 / tempo * detail.sustain;\r\n                const adjustOverlap = barMs / 32;\r\n\r\n                // 末端に達した時の処理\r\n                threads.push(\r\n                    setTimeout(() => {\r\n                        let isEnd = true;\r\n                        if (isProceed) {\r\n                            const hasNext = this.score.focusNextElement();\r\n                            if (hasNext) {\r\n                                isEnd = false;\r\n                                rec(true);\r\n                            }\r\n                        }\r\n                        if (isEnd) {\r\n                            this.score.setNoteState({ ...this.state.noteState, editMode: EditMode.NORMAL });\r\n                        }\r\n                    }, boxMs)\r\n                );\r\n                for (let i = 0; i < 2; i++) {\r\n                    let headMs = 0;\r\n                    const layer = backing.layers[i];\r\n                    // 音価のループ\r\n                    layer.lens.forEach((lenBean, j) => {\r\n\r\n                        const lenValue = Number(lenBean.len.toString().replace('LEN', ''));\r\n                        let curLenMs = barMs / lenValue;\r\n                        if (lenBean.isHalf) {\r\n                            curLenMs *= 1.5;\r\n                        }\r\n                        backing.useChannels.forEach((channel, k) => {\r\n                            layer.table[k][j].forEach((notes, l) => {\r\n\r\n                                if (notes) {\r\n                                    const rootKeyIndex = (cache.init.keyIndex + detail.degreeIndex) % 12;\r\n                                    const soundIndex = rootKeyIndex + intervals[channel.structIndex] + channel.octave * 12;\r\n                                    const octave = Math.floor(soundIndex / 12);\r\n                                    const root = KEY12_SHARP_LIST[soundIndex % 12];\r\n                                    const soundFullName = root + octave;\r\n                                    const velocity = 0.7 * layer.vels[j] / 10;\r\n                                    const head = headMs + curLenMs / 3 * l;\r\n                                    const tail = !backing.isUsePedal ?\r\n                                        //ペダル未使用時\r\n                                        head + curLenMs :\r\n                                        //ペダル使用時\r\n                                        boxMs + adjustOverlap\r\n                                        ;\r\n                                    threads.push(\r\n                                        setTimeout(() => {\r\n                                            sampler.triggerAttack(soundFullName, '+0', velocity);\r\n                                            soundUseList[soundIndex]++;\r\n                                        }, head)\r\n                                    );\r\n                                    threads.push(\r\n                                        setTimeout(() => {\r\n                                            soundUseList[soundIndex]--;\r\n                                            if (soundUseList[soundIndex] == 0) {\r\n                                                sampler.triggerRelease(soundFullName);\r\n                                            }\r\n                                        }, tail)\r\n                                    );\r\n                                }\r\n                            });\r\n                        });\r\n                        headMs += curLenMs;\r\n                    });\r\n                }\r\n                this.score.setNoteState({\r\n                    ...this.state.noteState,\r\n                    editMode: EditMode.PREVIEW, backingThreads: threads\r\n                });\r\n            }\r\n            rec(isProceed);\r\n        }\r\n    }\r\n}","import './MainFrame.css';\r\n\r\nimport TabbedPane from 'contents/common/TabbedPane';\r\nimport ScoreTab from 'contents/systab/score/ScoreTab';\r\n// import AccountTab from 'contents/tabs/account/AccountTab.jsx';\r\n// import ScoreTab from 'contents/tabs/score/ScoreTab.jsx';\r\nimport { initialState, Store, Action } from 'contents/redux/store';\r\nimport { ActionType, reducer } from 'contents/redux/reducer';\r\nimport { createContext, useReducer, KeyboardEvent } from 'react';\r\nimport { KeyboardShortCutAction } from './operation/InputNoteTab';\r\nimport { Dispatcher } from './redux/dispatcher';\r\n\r\ntype GlobalContextType = {\r\n    state: Store;\r\n    dispatch: Function;\r\n    dispatcher: Dispatcher;\r\n}\r\n\r\nexport const GlobalContext = createContext({} as GlobalContextType);\r\n\r\nconst MainFrame = () => {\r\n\r\n    const [state, dispatchBase] = useReducer(reducer, initialState);\r\n    const dispatch = (actionType: ActionType, payload: any) => dispatchBase({ type: actionType, payload: payload });\r\n    const dispatcher = new Dispatcher(state, dispatchBase);\r\n    return (\r\n        <div\r\n            id=\"main-frame\"\r\n            tabIndex={999}\r\n            onKeyDown={(e: KeyboardEvent) => KeyboardShortCutAction(e, state, dispatch, dispatcher)}\r\n        >\r\n            <GlobalContext.Provider value={{ state, dispatch, dispatcher }}>\r\n                <TabbedPane groupName=\"system-tabs\"\r\n                    tabElements={[\r\n                        { name: 'Account', disable: true, cont: <div></div> },\r\n                        { name: 'Palette', disable: true, cont: <div></div> },\r\n                        { name: 'Score', disable: false, cont: <ScoreTab /> },\r\n                        { name: 'Backing', disable: true, cont: <div></div> },\r\n                        { name: 'Symbol', disable: true, cont: <div></div> },\r\n                        { name: 'Sampler', disable: true, cont: <div></div> },\r\n                        { name: 'Setting', disable: true, cont: <div></div> }\r\n                    ]}\r\n                    activeNo={2}\r\n                />\r\n            </GlobalContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainFrame;\r\n","import { DIATONIC_MAJOR_SCALE_LIST, KEY12_SHARP_LIST, SYMBOL_PARAMS_LIST } from \"contents/common/define\";\r\nimport { getSymbolParams } from \"contents/common/utils\";\r\nimport { Dispatcher } from \"contents/redux/dispatcher\";\r\nimport { ActionType } from \"contents/redux/reducer\";\r\nimport { BackingEditorState as BackingEditorState, BACKING_LEN_TYPE, BACKING_SIDE, CHORD_MODE, DetailChord, EditMode, FloatWndState, NoteElement, Store, TypeNoteElement } from \"contents/redux/store\";\r\nimport { KeyboardEvent } from 'react';\r\n\r\n\r\n/**\r\n * 譜面編集時のキーボードショートカット\r\n * @param e キーボードイベント\r\n */\r\nexport const KeyboardShortCutAction = (e: KeyboardEvent, state: Store, dispatch: Function, dispatcher: Dispatcher) => {\r\n    // alert(e.key);\r\n\r\n    if (state.scoreTabIndex != 1) {\r\n        return;\r\n    }\r\n\r\n    const focusIndex = state.noteState.focusIndex;\r\n    const editMode = state.noteState.editMode;\r\n    const chordMode = state.noteData.chordMode;\r\n    const selectedData = state.noteData.dataList[focusIndex];\r\n\r\n    switch (selectedData.type) {\r\n        case TypeNoteElement.Chord: {\r\n            const detail = selectedData.detail as DetailChord;\r\n\r\n            switch (state.noteState.floatwndState) {\r\n                case FloatWndState.NONE: {\r\n\r\n                    if (editMode == EditMode.NORMAL) {\r\n                        switch (e.key) {\r\n                            case 'c': {\r\n                                dispatcher.score.callChordSelector();\r\n                            }\r\n                                break;\r\n                            case 'b': {\r\n                                if (detail.degreeIndex != -1) {\r\n                                    dispatcher.score.callBackingEditor();\r\n                                }\r\n                            }\r\n                                break;\r\n                            case '1':\r\n                            case '2':\r\n                            case '3':\r\n                            case '4':\r\n                            case '5':\r\n                            case '6':\r\n                            case '7': {\r\n                                if (chordMode == CHORD_MODE.DIRECT) break;\r\n                                const diatonicChord = DIATONIC_MAJOR_SCALE_LIST[Number(e.key) - 1];\r\n                                dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: diatonicChord.degreeIndex });\r\n                                dispatch(ActionType.SET_SYMBOL_KEY, { pos: focusIndex, symbolKey: diatonicChord.symbolKey });\r\n                                dispatcher.score.apllyFlashCur();\r\n                            }\r\n                                break;\r\n                            case 'x': {\r\n                                dispatcher.score.setCriteria();\r\n                            }\r\n                                break;\r\n                            case ' ': {\r\n                                dispatcher.backing.play(true);\r\n                            }\r\n                                break;\r\n                        }\r\n                    } else if (editMode == EditMode.BACKING) {\r\n\r\n                        switch (e.key) {\r\n                            case 'x': {\r\n                                dispatcher.score.releaseCriteria();\r\n                            }\r\n                                break;\r\n                            case 'Enter': {\r\n                                const dataList = state.noteData.dataList;\r\n                                const baseBacking = (dataList[state.noteState.criteriaIndex].detail as DetailChord).backing;\r\n                                state.noteState.selectedList.forEach((index) => {\r\n                                    (dataList[index].detail as DetailChord).backing = JSON.parse(JSON.stringify(baseBacking));\r\n                                });\r\n                                dispatcher.score.setNoteData({ ...state.noteData, dataList });\r\n                                dispatcher.score.releaseCriteria();\r\n                                dispatcher.score.apllyFlashList();\r\n                            }\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.CHORD_PALETTE: {\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'c':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowRight':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex + 1 });\r\n                            break;\r\n                        case 'ArrowLeft':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                        case '1':\r\n                            dispatch(ActionType.SET_DEGREE_INDEX, { pos: focusIndex, degreeIndex: detail.degreeIndex - 1 });\r\n                            break;\r\n                        case 'Enter': {\r\n                            dispatcher.chord.setCurChordParam();\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n                case FloatWndState.BACKING_PALETTE: {\r\n                    const isCorrect = state.noteState.backingPaletteState.isCorrect;\r\n                    switch (e.key) {\r\n                        case 'Escape':\r\n                        case 'b':\r\n                            dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.NONE });\r\n                            break;\r\n                        case 'ArrowLeft': {\r\n                            if (!dispatcher.backing.isFirstCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowRight': {\r\n                            if (!dispatcher.backing.isLastCurLen()) {\r\n                                const cur = dispatcher.backing.getCurLenIndex();\r\n                                dispatcher.backing.updateLenIndex(cur + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowUp': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume < 10) {\r\n                                dispatcher.backing.updateCurVolume(curVolume + 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'ArrowDown': {\r\n                            const curVolume = dispatcher.backing.getCurVelocity();\r\n                            if (curVolume > 1) {\r\n                                dispatcher.backing.updateCurVolume(curVolume - 1);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'r': {\r\n                            dispatcher.backing.changeLayerIndex();\r\n                        }\r\n                            break;\r\n                        case '1': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN16); break;\r\n                        case '2': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN8); break;\r\n                        case '3': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN4); break;\r\n                        case '4': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN2); break;\r\n                        case '5': dispatcher.backing.setCurLen(BACKING_LEN_TYPE.LEN1); break;\r\n                        case '.': {\r\n                            if (dispatcher.backing.isAcceptHalf()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isHalf = !curLenBean.isHalf;\r\n                                curLenBean.isDiv3 = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case '/': {\r\n                            if (dispatcher.backing.isAcceptDiv3()) {\r\n                                const curLenBean = dispatcher.backing.getCurLenBean();\r\n                                curLenBean.isDiv3 = !curLenBean.isDiv3;\r\n                                curLenBean.isHalf = false;\r\n                                dispatcher.backing.setCurrentLenBean(curLenBean);\r\n                            }\r\n                        }\r\n                            break;\r\n                        case 'a': {\r\n                            dispatcher.backing.addLen();\r\n                        }\r\n                            break;\r\n                        case 'Delete': {\r\n                            if (dispatcher.backing.getSideScript().lens.length > 1) {\r\n                                dispatcher.backing.delLen();\r\n                            }\r\n                        }\r\n                            break;\r\n\r\n                        case ' ': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.play(false);\r\n                            }\r\n                        }\r\n                            break;\r\n                        // 設定を反映\r\n                        case 'Enter': {\r\n                            if (isCorrect) {\r\n                                dispatcher.backing.setCurBackingScript();\r\n                            }\r\n                        }\r\n                            break;\r\n                    }\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n            break;\r\n    }\r\n\r\n    if (state.noteState.floatwndState == FloatWndState.NONE &&\r\n        [TypeNoteElement.Chord, TypeNoteElement.Section].includes(selectedData.type)) {\r\n        if (editMode == EditMode.NORMAL) {\r\n            switch (e.key) {\r\n                case 'ArrowLeft': {\r\n                    dispatcher.score.focusPreviousElement();\r\n                }\r\n                    break;\r\n                case 'ArrowRight': {\r\n                    dispatcher.score.focusNextElement();\r\n                }\r\n                    break;\r\n                case 'ArrowUp': {\r\n                    dispatcher.score.focusPreviousSection();\r\n                }\r\n                    break;\r\n                case 'ArrowDown': {\r\n                    dispatcher.score.focusNextSection();\r\n                }\r\n                    break;\r\n                case 'Delete': {\r\n                    dispatcher.score.deleteCurElement();\r\n                    // dispatcher.score.addChordElement();\r\n                }\r\n                    break;\r\n                case 'i': {\r\n                    dispatcher.score.focusInitElement();\r\n                }\r\n                    break;\r\n                case 'a':\r\n                    dispatcher.score.addChordElement();\r\n                    break;\r\n                case 's':\r\n                    dispatcher.score.addSectionElement();\r\n                    break;\r\n                case 'w': {\r\n                    const detail = selectedData.detail as DetailChord;\r\n                    dispatch(ActionType.FLOATWND_STATE, { state: FloatWndState.CHORD_PALETTE });\r\n                    dispatch(ActionType.CHORD_PALETTE_SETTER, {\r\n                        params: {\r\n                            ...state.noteState.chordPaletteState,\r\n                            rootIndex: detail.degreeIndex,\r\n                            isFlat: detail.isFlat,\r\n                            symbolKey: detail.symbolKey,\r\n                            sustain: detail.sustain,\r\n                        }\r\n                    });\r\n                }\r\n                    break;\r\n                case 'z': {\r\n                    alert(JSON.stringify(state.noteState.cacheList.length));\r\n                    // alert(JSON.stringify(detail));\r\n                    // dispatch(ActionType.SELECT_SCORETAB, { index: 2 });\r\n\r\n                    // const data = state.noteData.dataList[state.noteState.focusIndex];\r\n                    // data.detail = {\"degreeIndex\":2,\"isFlat\":false,\"symbolKey\":1,\"sustain\":4,\"backing\":{\"useChannels\":[{\"octave\":3,\"structIndex\":0},{\"octave\":3,\"structIndex\":1},{\"octave\":3,\"structIndex\":2},{\"octave\":4,\"structIndex\":0},{\"octave\":4,\"structIndex\":1},{\"octave\":4,\"structIndex\":2},{\"octave\":5,\"structIndex\":1},{\"octave\":5,\"structIndex\":2}],\"layers\":[{\"lens\":[{\"len\":\"LEN8\",\"isDiv3\":false,\"isHalf\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false},{\"len\":\"LEN8\",\"isHalf\":false,\"isDiv3\":false}],\"side\":\"LEFT\",\"table\":[[[true],[false],[false],[false],[false]],[[false],[false],[false],[false],[false]],[[false],[false],[true],[true],[false]],[[false],[false],[false],[false],[false]],[[true],[false],[false],[false],[false]],[[false],[true],[false],[false],[false]],[[false],[false],[false],[false],[false]],[[false],[false],[false],[false],[true]]],\"vels\":[5,5,5,5,5]},{\"lens\":[{\"len\":\"LEN1\",\"isDiv3\":false,\"isHalf\":false}],\"side\":\"RIGHT\",\"table\":[[[false]],[[false]],[[false]],[[false]],[[false]],[[false]],[[false]],[[false]]],\"vels\":[5]}]}};\r\n                    // dispatcher.setNoteData(state.noteData);\r\n                }\r\n                    break;\r\n            }\r\n        } else if (editMode == EditMode.PREVIEW) {\r\n\r\n            switch (e.key) {\r\n                case ' ': {\r\n                    const threads = state.noteState.backingThreads;\r\n                    threads.forEach((thr) => {\r\n                        clearInterval(thr);\r\n                    });\r\n                    dispatcher.score.setNoteState({\r\n                        ...state.noteState,\r\n                        backingThreads: [], editMode: EditMode.NORMAL\r\n                    });\r\n                    state.sampler.releaseAll();\r\n                }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};","import React, { useEffect } from 'react';\n\n// import Tone from 'lib/Tone.min.js';\n// import Tone from \"react-tone\";\nimport * as Tone from \"tone\";\n\nimport './desty.css';\nimport './App.css';\nimport MainFrame from 'contents/MainFrame';\n\nfunction App() {\n  useEffect(() => {\n    // 右クリック無効\n    document.oncontextmenu = function () { return false; }\n\n    window.addEventListener(\"keydown\", function (e) {\n      // space and arrow keys\n      if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n      }\n    }, false);\n\n  }, []);\n  return (\n    <MainFrame />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}